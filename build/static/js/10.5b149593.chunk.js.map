{"version":3,"sources":["pages/TempLateMgt/model/myTemplate.ts","utils/request.ts","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../node_modules/babel-preset-react-app/node_modules/regenerator-runtime/runtime.js","api/index.ts"],"names":["__webpack_exports__","namespace","initialState","list","page","limit","totalPage","total","pageName","value","effects","getTemplateList","_getTemplateList","Object","_Users_caic_work_ks_project_ks_thanos_web_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_caic_work_ks_project_ks_thanos_web_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","payload","getState","templateState","postData","response","result","wrap","_context","prev","next","myTemplate","request","API","pageList","query","method","body","sent","errcode","actions","setReducers","stop","_x","_x2","apply","this","arguments","deleteTemplateItem","_deleteTemplateItem","_callee2","_context2","delete","_x3","fetch","require","codeMessage","200","201","202","204","400","401","403","404","406","410","422","500","502","503","504","checkStatus","customerError","status","code","errortext","statusText","message","antd_lib_notification__WEBPACK_IMPORTED_MODULE_2___default","error","concat","description","Error","name","url","options","length","undefined","newOptions","_Users_caic_work_ks_project_ks_thanos_web_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","mode","headers","FormData","Accept","Content-Type","JSON","stringify","then","json","catch","e","console","warn","module","exports","__webpack_require__","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","done","Promise","_asyncToGenerator","fn","self","args","err","d","runtime","Op","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","state","GenStateSuspendedStart","GenStateExecuting","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","_sent","dispatchException","abrupt","record","tryCatch","type","GenStateSuspendedYield","makeInvokeMethod","obj","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","previousPromise","callInvokeWithMethodAndArg","invoke","__await","unwrapped","TypeError","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","i","constructor","displayName","isGeneratorFunction","genFun","ctor","setPrototypeOf","__proto__","awrap","async","iter","toString","keys","object","reverse","pop","skipTempReset","charAt","slice","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","Function","server","process","BABEL_ENV","log","save","update"],"mappings":"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","file":"static/js/10.5b149593.chunk.js","sourcesContent":["import request from '../../../utils/request';\nimport { API } from '../../../api/index';\nimport { actions } from 'kredux';\n\nexport default {\n    namespace: 'myTemplate',\n    initialState: {\n        list: [],\n        page: 1,\n        limit: 15,\n        totalPage: 0,\n        total: 0,\n        pageName: {\n            value: ''\n        }, // 模版名称\n    },\n    effects: {\n        async getTemplateList(payload: any, getState: any) {\n            const templateState = getState().myTemplate;\n            const postData = {\n                page: templateState.page,\n                limit: templateState.limit,\n                pageName: templateState.pageName.value\n            };\n            const response = await request(API.pageList.query, {\n                method: 'GET',\n                body: postData\n            });\n            if (response && !response.errcode) {\n                const result = response.result;\n                actions.myTemplate.setReducers({\n                    list: result.list,\n                    totalPage: result.totalPage,\n                    total: result.total\n                });\n            }\n        },\n        async deleteTemplateItem(payload: any) {\n            const response = await request(API.page.delete, {\n                method: 'GET',\n                body: {\n                    pageName: payload.pageName\n                }\n            });\n\n            if (response && !response.errcode) {\n                actions.myTemplate.getTemplateList();\n            }\n        }\n    }\n};\n","import { stringify } from 'qs';\nimport { notification } from 'antd';\nconst fetch = require('isomorphic-fetch');\n\n// import Humps from 'ks-module-humps';\nconst codeMessage = {\n    200: '服务器成功返回请求的数据。',\n    201: '新建或修改数据成功。',\n    202: '一个请求已经进入后台排队（异步任务）。',\n    204: '删除数据成功。',\n    400: '发出的请求有错误，服务器没有进行新建或修改数据的操作。',\n    401: '用户没有权限（令牌、用户名、密码错误）。',\n    403: '用户得到授权，但是访问是被禁止的。',\n    404: '发出的请求针对的是不存在的记录，服务器没有进行操作。',\n    406: '请求的格式不可得。',\n    410: '请求的资源被永久删除，且不会再得到的。',\n    422: '当创建一个对象时，发生一个验证错误。',\n    500: '服务器发生错误，请检查服务器。',\n    502: '网关错误。',\n    503: '服务不可用，服务器暂时过载或维护。',\n    504: '网关超时。',\n};\n\n/**\n * 检查返回值状态码\n *\n * @param {response||response.json()} 状态码和返回code的双重判断\n * @return {response||error}\n */\nfunction checkStatus(response, customerError) {\n    /**\n    * status 可能是状态码 可能是返回code\n    * @type {number}\n    */\n    let status;\n    if ('status' in response) {\n        status = response.status;\n    } else if ('errcode' in response) {\n        status = response.errcode;\n    } else if ('code' in response) {\n        status = response.code;\n    }\n    if ((status >= 200 && status < 300) || status === 0) {\n        return response;\n    } else if (customerError) {\n        return response;\n    }\n    // const errortext = codeMessage[status] || response.statusText || response.msg;\n    const errortext = response.statusText || (response.result && response.result.message) || codeMessage[status];\n    if (status !== 401) {\n        notification.error({\n            message: `请求错误 ${status}`, // : ${response.url}\n            description: errortext,\n        });\n    }\n    const error: any = new Error(errortext);\n    error.name = status;\n    error.response = response;\n    throw error;\n}\n\n/**\n * 异步请求\n * @param  {String} url     // 请求地址\n * @param {Option} options // 配置\n * @return {Promise}        // 返回promise对象\n *\n * @typedef {Object} Option\n * @property {String} method // 请求方式  默认不传为get\n * @property {Object} body // 请求体\n */\nexport default function request(url, options, customerError = false) {\n    const defaultOptions = {\n        mode: 'cors',\n        // credentials: 'include',\n        headers: {}\n    };\n    let newOptions = { ...defaultOptions, ...options };\n    switch (`${newOptions.method}`) {\n        case 'post':\n        case 'POST':\n            newOptions.method = 'POST';\n            break;\n        case 'get':\n        case 'GET':\n            newOptions.method = 'GET';\n            break;\n        default:\n    }\n    if (newOptions.method === 'POST' || newOptions.method === 'PUT') {\n        if (!(newOptions.body instanceof FormData)) {\n            newOptions.headers = {\n                Accept: 'application/json',\n                'Content-Type': 'application/json; charset=utf-8',\n                ...newOptions.headers,\n            };\n            newOptions.body = JSON.stringify(newOptions.body);\n        } else {\n            // newOptions.body is FormData\n            delete newOptions.headers;\n        }\n    } else if (newOptions.method === 'GET') {\n        if (newOptions.body) {\n            url = `${url}?${stringify(newOptions.body)}`;\n        }\n        newOptions = null;\n    }\n    return fetch(url, newOptions)\n        .then((response) => checkStatus(response, customerError))\n        .then((response) => response.json())\n        .then((response) => checkStatus(response, customerError))\n        // .then((response) => Humps.parse(response))\n        .catch((e) => {\n            console.warn(e);\n        }); ;\n}\n","module.exports = require(\"regenerator-runtime\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar runtime = function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []); // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n    return generator;\n  }\n\n  exports.wrap = wrap; // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\"; // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n\n  var ContinueSentinel = {}; // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n\n  function Generator() {}\n\n  function GeneratorFunction() {}\n\n  function GeneratorFunctionPrototype() {} // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n\n\n  var IteratorPrototype = {};\n\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n\n  if (NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] = GeneratorFunction.displayName = \"GeneratorFunction\"; // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      prototype[method] = function (arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function (genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor ? ctor === GeneratorFunction || // For the native GeneratorFunction constructor, the best we can\n    // do is to check its .name property.\n    (ctor.displayName || ctor.name) === \"GeneratorFunction\" : false;\n  };\n\n  exports.mark = function (genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  }; // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n\n\n  exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n\n        if (value && typeof value === \"object\" && hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function (value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function (err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function (unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function (error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function (resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise = // If enqueue has been called before, then we want to wait until\n      // all previous Promises have been resolved before calling invoke,\n      // so that results are always delivered in the correct order. If\n      // enqueue has not been called before, then it is important to\n      // call invoke immediately, without waiting on a callback to fire,\n      // so that the async generator function has the opportunity to do\n      // any necessary setup in a predictable way. This predictability\n      // is why the Promise constructor synchronously invokes its\n      // executor callback, and why async functions synchronously\n      // execute code before the first await. Since we implement simple\n      // async functions in terms of async generators, it is especially\n      // important to get this right, even though it requires care.\n      previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, // Avoid propagating failures to Promises returned by later\n      // invocations of the iterator.\n      callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n    } // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n\n\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n\n  exports.AsyncIterator = AsyncIterator; // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n\n  exports.async = function (innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList));\n    return exports.isGeneratorFunction(outerFn) ? iter // If outerFn is a generator, return the full iterator.\n    : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        } // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n\n\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n        var record = tryCatch(innerFn, self, context);\n\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done ? GenStateCompleted : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted; // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  } // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n\n\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (!info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value; // Resume execution at the desired location (see delegateYield).\n\n      context.next = delegate.nextLoc; // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    } // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n\n\n    context.delegate = null;\n    return ContinueSentinel;\n  } // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n\n\n  defineIteratorMethods(Gp);\n  Gp[toStringTagSymbol] = \"Generator\"; // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n\n  Gp[iteratorSymbol] = function () {\n    return this;\n  };\n\n  Gp.toString = function () {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function (object) {\n    var keys = [];\n\n    for (var key in object) {\n      keys.push(key);\n    }\n\n    keys.reverse(); // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      } // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n\n\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n            next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n          return next;\n        };\n\n        return next.next = next;\n      }\n    } // Return an iterator with no values.\n\n\n    return {\n      next: doneResult\n    };\n  }\n\n  exports.values = values;\n\n  function doneResult() {\n    return {\n      value: undefined,\n      done: true\n    };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n    reset: function reset(skipTempReset) {\n      this.prev = 0;\n      this.next = 0; // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n      this.method = \"next\";\n      this.arg = undefined;\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" && hasOwn.call(this, name) && !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n    stop: function stop() {\n      this.done = true;\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n    dispatchException: function dispatchException(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !!caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry && (type === \"break\" || type === \"continue\") && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n    complete: function complete(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" || record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n    finish: function finish(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n    \"catch\": function _catch(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n\n          return thrown;\n        }\n      } // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n\n\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  }; // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n\n  return exports;\n}( // If this script is executing as a CommonJS module, use module.exports\n// as the regeneratorRuntime namespace. Otherwise create a new empty\n// object. Either way, the resulting object will be used to initialize\n// the regeneratorRuntime variable at the top of this file.\ntypeof module === \"object\" ? module.exports : {});\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}","const server = process.env.BABEL_ENV === 'production' ? 'http://kaishufe.kaishustory.com' : 'http://10.0.23.7:3000/api';\n// const server = 'http://localhost:3012';\nconsole.log('server', server);\nexport const API = {\n    page: {\n        query: server + '/api/ks-thanos/v1/page/get',\n        save: server + '/api/ks-thanos/v1/page/add', // 保存JSON\n        update: server + '/api/ks-thanos/v1/page/add', // 更新JSON\n        delete: server + '/api/ks-thanos/v1/page/delete'\n    },\n    pageList: {\n        query: server + '/api/ks-thanos/v1/page/list'\n    }\n};\n"],"sourceRoot":""}