{"version":3,"sources":["pages/GeneratePage/model/generatePage.ts","utils/index.ts","utils/request.ts","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","api/index.ts"],"names":["__webpack_exports__","namespace","initialState","count","pageJSON","name","components","pageName","effects","getTemplateItem","_getTemplateItem","Object","_Users_caic_work_ks_project_ks_thanos_web_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_5__","_Users_caic_work_ks_project_ks_thanos_web_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4___default","a","mark","_callee","payload","response","result","wrap","_context","prev","next","request","API","page","query","method","body","sent","errcode","actions","generatePage","setReducers","JSON","parse","pageData","stop","_x","apply","this","arguments","addTemplateItem","_addTemplateItem","_callee2","_context2","save","_Users_caic_work_ks_project_ks_thanos_web_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_3__","antd_lib_message__WEBPACK_IMPORTED_MODULE_2___default","success","_x2","updateTemplateItem","_updateTemplateItem","_callee3","_context3","update","_x3","reducers","insertComponent","getState","concat","_Users_caic_work_ks_project_ks_thanos_web_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","id","getUniqueID","operate","modelName","data","insertFormComponent","FormIndex","findIndex","_ref","componentName","componentSelected","changeTemplateName","Math","random","toString","substring","changeConfig","config","map","item","_Users_caic_work_ks_project_ks_thanos_web_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","findComponent","forEach","configVisible","tempResult","saveComponent","targetId","_item","currentId","children","length","matchRouter","path","routerList","currentPath","find","_ref2","fetch","require","codeMessage","200","201","202","204","400","401","403","404","406","410","422","500","502","503","504","checkStatus","customerError","status","code","errortext","statusText","message","antd_lib_notification__WEBPACK_IMPORTED_MODULE_2___default","error","description","Error","url","options","undefined","newOptions","mode","headers","FormData","Accept","Content-Type","stringify","then","json","catch","e","console","warn","_toConsumableArray","arr","Array","isArray","i","arr2","_arrayWithoutHoles","iter","Symbol","iterator","prototype","call","from","_iterableToArray","TypeError","_nonIterableSpread","__webpack_require__","d","server","process","BABEL_ENV","log","delete","pageList"],"mappings":"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","file":"static/js/11.2407f18b.chunk.js","sourcesContent":["import { actions } from 'kredux';\nimport { getUniqueID, request } from 'Src/utils';\nimport { API } from 'Src/api';\nimport { message } from 'antd';\n\nexport default {\n    namespace: 'generatePage',\n    initialState: {\n        count: 0,\n        pageJSON: {\n            name: '', // 页面名称\n            components: [] // 子组件\n        },\n        pageName: '', // 页面名称\n    },\n    effects: {\n        getTemplateItem: async(payload) => {\n            const response = await request(API.page.query, {\n                method: 'GET',\n                body: {\n                    pageName: payload.pageName\n                }\n            });\n            if (response && !response.errcode) {\n                const result = response.result;\n                actions.generatePage.setReducers({\n                    pageJSON: {\n                        name: result.pageName,\n                        components: JSON.parse(result.pageData).components\n                    },\n                    pageName: result.pageName\n                });\n            }\n        },\n        addTemplateItem: async(payload) => {\n            // console.log('components', formatComponents(pageJSON.components));\n            const response = await request(API.page.save, {\n                method: 'post',\n                body: {\n                    ...payload\n                }\n            });\n            if (response && response.errcode === 0) {\n                message.success('提交配置成功');\n            }\n        },\n        updateTemplateItem: async(payload) => {\n            // console.log('components', formatComponents(pageJSON.components));\n            const response = await request(API.page.update, {\n                method: 'post',\n                body: {\n                    ...payload\n                }\n            });\n            if (response && response.errcode === 0) {\n                message.success('更新配置成功');\n            }\n        }\n    },\n    reducers: {\n        insertComponent: (payload, getState) => {\n            const state = getState();\n            const { generatePage } = state;\n            let { pageJSON } = generatePage;\n            const { components } = pageJSON;\n            pageJSON = {\n                ...pageJSON,\n                components: [\n                    ...components,\n                    {\n                        ...payload,\n                        id: getUniqueID(),\n                    }\n                ]\n            };\n            actions.generatePage.setReducers({\n                pageJSON\n            });\n            actions.operate.save({\n                modelName: 'generatePage',\n                data: {\n                    pageJSON\n                },\n            });\n        },\n        insertFormComponent: (payload: any, getState) => {\n            const state = getState();\n            const { generatePage } = state;\n            let { pageJSON } = generatePage;\n            const { components } = pageJSON;\n            const FormIndex = components.findIndex(({ componentName, componentSelected }) => componentName === 'Form' && componentSelected);\n            components[FormIndex] = {\n                ...components[FormIndex],\n                components: [\n                    ...components[FormIndex].components || [],\n                    {\n                        ...payload,\n                        id: getUniqueID(),\n                    }\n                ]\n            };\n            pageJSON = {\n                ...pageJSON,\n                components: [\n                    ...components,\n                ]\n            };\n            actions.generatePage.setReducers({\n                pageJSON\n            });\n            actions.operate.save({\n                modelName: 'generatePage',\n                data: {\n                    pageJSON\n                },\n            });\n        },\n        changeTemplateName: (payload: { name: string }) => {\n            return {\n                pageName: payload.name\n            };\n        }\n    }\n}\n;\n","export { default as request } from './request';\n\n// 生成随机码\nexport const getUniqueID = () => {\n    return Math.random().toString(36).substring(2);\n};\n\n/**\n * 数组转化 树形数组\n *\n * @typedef {Object} attrParams\n * @property {number} rootId Top parentId\n * @property {string} id 当前Id\n * @property {string} parentId 父级Id\n *\n * @param {Array} 转化的数组\n * @type {attrParams}\n * @return {Array}  返回树形数组\n */\nexport function toTreeData(data, {\n    id,\n    parentId,\n    rootId\n}) {\n    const resData: any[] = [...data]; const tree: any[] = [];\n    function run(chiArr) {\n        if (resData.length !== 0) {\n            for (let i = 0; i < chiArr.length; i++) {\n                for (let j = 0; j < resData.length; j++) {\n                    if (chiArr[i][id] === resData[j][parentId]) {\n                        chiArr[i].children = chiArr[i].children || [];\n                        chiArr[i].children.push(resData[j]);\n                        resData.splice(j, 1);\n                        j--;\n                    }\n                }\n                if (chiArr[i].children) {\n                    run(chiArr[i].children);\n                }\n            }\n        }\n    }\n\n    for (let i = 0; i < resData.length; i++) {\n        if (resData[i][parentId] === rootId) {\n            tree.push(resData[i]);\n            resData.splice(i, 1);\n            i--;\n        } else if (data.every((res) => res[id] !== resData[i][parentId])) {\n            tree.push(resData[i]);\n            resData.splice(i, 1);\n            i--;\n        }\n    }\n    run(tree);\n    return tree;\n};\n\n/**\n     * 修改配置显隐藏\n     */\nexport const changeConfig = (id: string, components: any[], config: any) => {\n    return components.map((item) => {\n        if (item.id === id) {\n            item = {\n                ...item,\n                ...config\n            };\n        } else if (item.components) {\n            item.components = changeConfig(id, item.components, config);\n        }\n        return item;\n    });\n};\n\n/**\n * 找到当前显示的\n * @param components\n */\nexport const findComponent = (components: any[]) => {\n    let result: any;\n    components.forEach((item: any) => {\n        if (!result) {\n            if (item.configVisible) {\n                result = item;\n            } else if (item.components) {\n                const tempResult = findComponent(item.components);\n                if (tempResult) {\n                    result = tempResult;\n                }\n            }\n        }\n    });\n    return result;\n};\n\n/**\n * 找到当前的组件并且更改配置\n */\nexport const saveComponent = (targetId: string, components: any[], config: any) => {\n    return components.map((item) => {\n        const { id: currentId, components: children } = item;\n        if (currentId === targetId) {\n            item = {\n                ...item,\n                ...config\n            };\n        } else if (children && children.length) {\n            item.components = saveComponent(targetId, children, config);\n        }\n        return item;\n    });\n};\n\n/**\n * 匹配当前路由\n */\nexport const matchRouter = (path: string, routerList: any[]) => {\n    const currentPath = path;\n    return routerList.find(({path}) => path === currentPath) || {};\n};\n","import { stringify } from 'qs';\nimport { notification } from 'antd';\nconst fetch = require('isomorphic-fetch');\n\n// import Humps from 'ks-module-humps';\nconst codeMessage = {\n    200: '服务器成功返回请求的数据。',\n    201: '新建或修改数据成功。',\n    202: '一个请求已经进入后台排队（异步任务）。',\n    204: '删除数据成功。',\n    400: '发出的请求有错误，服务器没有进行新建或修改数据的操作。',\n    401: '用户没有权限（令牌、用户名、密码错误）。',\n    403: '用户得到授权，但是访问是被禁止的。',\n    404: '发出的请求针对的是不存在的记录，服务器没有进行操作。',\n    406: '请求的格式不可得。',\n    410: '请求的资源被永久删除，且不会再得到的。',\n    422: '当创建一个对象时，发生一个验证错误。',\n    500: '服务器发生错误，请检查服务器。',\n    502: '网关错误。',\n    503: '服务不可用，服务器暂时过载或维护。',\n    504: '网关超时。',\n};\n\n/**\n * 检查返回值状态码\n *\n * @param {response||response.json()} 状态码和返回code的双重判断\n * @return {response||error}\n */\nfunction checkStatus(response, customerError) {\n    /**\n    * status 可能是状态码 可能是返回code\n    * @type {number}\n    */\n    let status;\n    if ('status' in response) {\n        status = response.status;\n    } else if ('errcode' in response) {\n        status = response.errcode;\n    } else if ('code' in response) {\n        status = response.code;\n    }\n    if ((status >= 200 && status < 300) || status === 0) {\n        return response;\n    } else if (customerError) {\n        return response;\n    }\n    // const errortext = codeMessage[status] || response.statusText || response.msg;\n    const errortext = response.statusText || (response.result && response.result.message) || codeMessage[status];\n    if (status !== 401) {\n        notification.error({\n            message: `请求错误 ${status}`, // : ${response.url}\n            description: errortext,\n        });\n    }\n    const error: any = new Error(errortext);\n    error.name = status;\n    error.response = response;\n    throw error;\n}\n\n/**\n * 异步请求\n * @param  {String} url     // 请求地址\n * @param {Option} options // 配置\n * @return {Promise}        // 返回promise对象\n *\n * @typedef {Object} Option\n * @property {String} method // 请求方式  默认不传为get\n * @property {Object} body // 请求体\n */\nexport default function request(url, options, customerError = false) {\n    const defaultOptions = {\n        mode: 'cors',\n        // credentials: 'include',\n        headers: {}\n    };\n    let newOptions = { ...defaultOptions, ...options };\n    switch (`${newOptions.method}`) {\n        case 'post':\n        case 'POST':\n            newOptions.method = 'POST';\n            break;\n        case 'get':\n        case 'GET':\n            newOptions.method = 'GET';\n            break;\n        default:\n    }\n    if (newOptions.method === 'POST' || newOptions.method === 'PUT') {\n        if (!(newOptions.body instanceof FormData)) {\n            newOptions.headers = {\n                Accept: 'application/json',\n                'Content-Type': 'application/json; charset=utf-8',\n                ...newOptions.headers,\n            };\n            newOptions.body = JSON.stringify(newOptions.body);\n        } else {\n            // newOptions.body is FormData\n            delete newOptions.headers;\n        }\n    } else if (newOptions.method === 'GET') {\n        if (newOptions.body) {\n            url = `${url}?${stringify(newOptions.body)}`;\n        }\n        newOptions = null;\n    }\n    return fetch(url, newOptions)\n        .then((response) => checkStatus(response, customerError))\n        .then((response) => response.json())\n        .then((response) => checkStatus(response, customerError))\n        // .then((response) => Humps.parse(response))\n        .catch((e) => {\n            console.warn(e);\n        }); ;\n}\n","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}","export default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}","export default function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}","const server = process.env.BABEL_ENV === 'production' ? 'http://kaishufe.kaishustory.com' : 'http://10.0.23.7:3000/api';\n// const server = 'http://localhost:3012';\nconsole.log('server', server);\nexport const API = {\n    page: {\n        query: server + '/api/ks-thanos/v1/page/get',\n        save: server + '/api/ks-thanos/v1/page/add', // 保存JSON\n        update: server + '/api/ks-thanos/v1/page/add', // 更新JSON\n        delete: server + '/api/ks-thanos/v1/page/delete'\n    },\n    pageList: {\n        query: server + '/api/ks-thanos/v1/page/list'\n    }\n};\n"],"sourceRoot":""}