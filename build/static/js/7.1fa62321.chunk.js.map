{"version":3,"sources":["components/Form/constants.js","pages/components/Header/utils.ts","pages/components/Header/index.tsx","components/Table/utils.ts","components/Table/config.tsx","components/Table/index.tsx","components/Input/utils.ts","components/Input/config.tsx","components/Input/index.tsx","components/Select/utils.ts","components/Select/ConfigItem.tsx","components/Select/DynamicConfigItem.tsx","components/Select/config.tsx","components/Select/index.tsx","components/DatePicker/utils.ts","components/DatePicker/config.tsx","components/DatePicker/index.tsx","components/InputNumber/utils.ts","components/InputNumber/config.tsx","components/InputNumber/index.tsx","components/RangePicker/utils.ts","components/RangePicker/config.tsx","components/RangePicker/index.tsx","components/TextArea/utils.ts","components/TextArea/config.tsx","components/TextArea/index.tsx","components/Radio/utils.ts","components/Radio/config.tsx","components/Radio/index.tsx","components/CheckBox/utils.ts","components/CheckBox/config.tsx","components/CheckBox/index.tsx","components/Form/utils.ts","components/Form/config.tsx","components/Form/index.tsx","components/index.ts","pages/GeneratePage/components/PageRender/index.tsx","pages/GeneratePage/components/Config/ComponentType.tsx","pages/GeneratePage/components/Config/ComponentsLib.tsx","pages/GeneratePage/components/Config/ComponentConfig.tsx","pages/GeneratePage/components/Config/PageConfig.tsx","pages/GeneratePage/index.tsx","utils/index.ts","utils/request.ts","utils/commonFunc.ts","bizComponents/DND/index.tsx","bizComponents/SearchForm/index.tsx","bizComponents/index.ts"],"names":["FORM_TYPES","key","name","NORMAL_FORM","SEARCH_FORM","formatComponents","components","map","item","_item$components","children","componentName","length","type","stateName","Object","objectSpread","formType","activeEvents","eventType","dependencies","api","saveApi","actionType","responseType","method","updateApi","tableIndex","findIndex","_ref","confirm","modal_default","a","error","Header","connect","_ref$generatePage","generatePage","_ref$operate","operate","handleSubmit","_this","props","pageJSON","pageName","title","content","onOk","_onOk","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","actions","addTemplateItem","pageData","JSON","stringify","stop","apply","this","arguments","_this$props$showTopTo","showTopToolbar","react_default","createElement","className","button_default","onClick","goto","Component","getInitJson","source","default","columns","dataIndex","getTools","icon","Option","FormItem","form_default","Item","EditableContext","React","createContext","EditableFormRow","create","form","index","objectWithoutProperties","Provider","value","TableConfig","state","currentComponent","id","currentComponentIdx","dataSource","editDataFlag","searchComponentChecked","tableCount","handleTableInputSave","row","newData","toConsumableArray","newItem","splice","setState","handleAdd","_this$state","dataKey","tableName","concat","handleTableRowDelete","filter","saveTableData","checkData","_this$state2","configVisible","onSave","_this$state3","message_default","addSearchComponent","e","target","checked","_this$state4","InputData","DATA_ENTRY","Input","getUniqueID","parentId","setReducers","searchComponentIdx","methodChange","apiInputChange","event","stateNameInputChange","_this2","formItemLayout","labelCol","span","wrapperCol","_this$state5","editable","render","text","record","body","cell","EditableCell","col","onCell","handleSave","Fragment","assign","label","input_default","placeholder","onChange","select_default","defaultValue","style","width","table_default","bordered","pagination","row_default","marginTop","justify","gutter","checkbox_default","col_default","marginBottom","offset","newState","find","forEach","keys","editing","input","toggleEdit","_this3","focus","save","_this3$props","validateFields","values","currentTarget","renderCell","_this3$props2","margin","getFieldDecorator","rules","required","message","initialValue","ref","node","onPressEnter","onBlur","paddingRight","minHeight","_this$props","restProps","Consumer","KTable","LABEL","InputConfig","formData","isTouch","current","saveComponent","handleChange","defineProperty","config_FormItem","ALIAS","KEY","FORMITEM_LAYOUT","bind","_formData","findComponent","KInput","config","OtherProps","_config$label","disabled","allowClear","showSearch","RadioGroup","radio_default","Group","ConfigItem","otherProps","ConfigItem_FormItem","renderContent","DynamicConfigItem","remove","k","getFieldValue","setFieldsValue","add","nextKeys","_this$props$form","addText","_this$props$defaultVa","xs","sm","formItemLayoutWithOutLabel","formItems","validateTrigger","whitespace","undefined","marginRight","icon_default","selectProps","PLACEHOLDER","Config","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","err","fieldValues","options","fieldProps","Select_config_FormItem","card_default","ConfigItem_ConfigItem","DynamicConfigItem_DynamicConfigItem","Select_config","KSelect","_config$options","optionFilterProp","filterOption","option","toLowerCase","indexOf","Select_Option","FORMAT","SHOW_TIME","showTime","format","_objectSpread2","_saveComponent","_this$setState","DatePicker_config_FormItem","KDatePicker","date_picker_default","defaultProps","min","max","precision","step","DEFAULT_VALUE","MIN_VALUE","MAX_VALUE","InputNumberConfig","InputNumber_config_FormItem","input_number_default","InputNumber_config","KInputNumber","other","parentComponentName","RangePickerConfig","showTimeFormat","split","stateProps","RangePicker_config_FormItem","validator","rule","callback","test","join","DATE_FORMAT","valuePropName","switch_default","props.format","TIME_FORMAT","RangePicker_config","RangePicker","KRangePicker","rows","TextAreaConfig","TextArea_config_FormItem","TextArea","KTextArea","isRequired","rowKey","VALUE","TEXT","CHECK","DISABLED","OPTIONS","ROW_KEY","CheckBoxConfig","errMessage","assertThisInitialized","defaultChecked","checkedChildren","unCheckedChildren","handleDeleteChekItem","i","itemKey","handleAddCheck","_formData$options$pus","push","handleAlertClose","alert_default","closable","onClose","_ref2","_formData2","KRadio","nextProps","display","stopPropagation","_props","_props2","es_form","_props3","KCheckBox","ele","NORMAL","SEARCH","TYPE","SAVE_API","UPDATE_API","FormConfig","component","getTypeForm","react","Form_config_FormItem","config_RadioGroup","KForm","renderChildren","PageRender_PageRender","Select","DatePicker","InputNumber","Radio","CheckBox","DATA_DISPLAY","Table","OTHER_COMPONENTS","Form","ALL_TOOLS","Confirm","PageRender","renderComponent","ComponentName","console","componentProps","handleClick","setJSON","changeConfig","componentSelected","filterComponent","setRedux","redux","json","bizComponents","onRender","data","onDragStart","onDragEnd","ComponentType","ComponentType_FormItem","idx","Search","SPLIT_COUNT","TOOLS","ComponentsLib","search","some","insertFormComponent","insertComponent","fliterComponent","tools","toLocaleLowerCase","includes","reduce","lastItem","dataDisplayTools","dataEntryTools","otherTools","ComponentsLib_FormItem","onSearch","ComponentType_ComponentType","ComponentConfig","visible","getShowConfig","renderConfig","commonProps","drawer_default","placement","mask","PageConfig","handleChangeName","changeTemplateName","PageConfig_FormItem","GeneratePage","modelName","count","match","params","getTemplateItem","_this$props$operate","undoDisable","redoDisable","pages_components_Header","tooltip_default","color","cursor","undo","redo","Config_PageConfig","ComponentsLib_ComponentsLib","ComponentConfig_ComponentConfig","Math","random","toString","substring","_Users_caic_work_ks_project_ks_thanos_web_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","result","tempResult","targetId","_item","currentId","matchRouter","path","routerList","currentPath","fetch","require","codeMessage","200","201","202","204","400","401","403","404","406","410","422","500","502","503","504","checkStatus","response","customerError","status","errcode","code","errortext","statusText","antd_lib_notification__WEBPACK_IMPORTED_MODULE_2___default","description","Error","request","url","newOptions","mode","headers","FormData","Accept","Content-Type","then","catch","warn","__webpack_require__","d","__webpack_exports__","_history__WEBPACK_IMPORTED_MODULE_0__","_constants__WEBPACK_IMPORTED_MODULE_1__","route","history","PROJECT_NAME","DnD","reorder","list","startIndex","endIndex","Array","from","_result$splice","removed","slicedToArray","handleDragStart","handleDragEnd","destination","direction","droppableId","interval","emptyNode","react_beautiful_dnd_esm","provided","snapshot","droppableProps","innerRef","isDraggingOver","dataItem","draggableId","draggableProps","dragHandleProps","isDragging","PureComponent","onDropEnd","textAlign","SEARCH_FORM_LAYOUT","SearchForm","extend","defaultExtend","renderSearchItem","hide","bottom","getExtend","renderSeachForm","lastGroup","_this$props2","onExtend","isExtend","actionStyle","remainder","pop","paddingLeft","_this$getExtend","group","Boolean","DND_DnD","SearchForm_SearchForm"],"mappings":"qjEAGaA,EAAa,CACtB,CACIC,IAAK,SACLC,KAAM,4BAEV,CACID,IAAK,SACLC,KAAM,2CCTuCF,KAAvCG,OAALF,IAA2BG,OAALH,IAclBI,EAAmB,SAAnBA,EAAoBC,GAC7B,OAAOA,EAAWC,IAAI,SAACC,GAAe,IAAAC,EACmBD,EAA7CF,WAAYI,OADc,IAAAD,EACH,GADGA,EAElC,GAAsB,SAD+BD,EAAlBG,eACHD,EAASE,OAAQ,KACrCC,EAAoBL,EAApBK,KAAMC,EAAcN,EAAdM,UAMd,GALAN,EAAKF,WAAaD,EAAiBK,GAAUH,IAAI,SAACC,GAAD,OAAAO,OAAAC,EAAA,EAAAD,CAAA,GAC1CP,EAD0C,CAE7CS,SAAUJ,EACVC,UAAWA,MAEXD,IAASV,EACTK,EAAKU,aAAe,CAChB,CACIC,UAAW,UACXC,aAAc,CACVP,KAAM,QACNQ,IAAKb,EAAKc,QACVC,WAAY,OACZC,aAAc,SACdC,OAAQ,SAGhB,CACIN,UAAW,UACXC,aAAc,CACVP,KAAM,QACNQ,IAAKb,EAAKkB,UACVH,WAAY,SACZC,aAAc,SACdC,OAAQ,eAWjB,GAAIZ,IAAST,EAAa,CAC7B,IAAMuB,EAAarB,EAAWsB,UAAU,SAAAC,GAAA,MAAyC,UAAzCA,EAAGlB,gBACvCgB,EAAa,IACbnB,EAAKU,aAAe,CAChB,CACIC,UAAW,UACXC,aAAaL,OAAAC,EAAA,EAAAD,CAAA,GACNT,EAAWqB,GAAYP,aADlB,CAERI,aAAc,aActC,OAAOhB,uBCtETsB,EAAUC,EAAAC,EAAMF,QAChBG,EAAQF,EAAAC,EAAMC,MAoELC,EA7DdC,kBAAQ,SAAAN,GAAA,IAAAO,EAAAP,EAAGQ,oBAAH,IAAAD,EAAkB,GAAlBA,EAAAE,EAAAT,EAAsBU,QAAtB,MAA0C,CAC/CF,eACAE,aAFK,IAAAD,EAAgC,GAAhCA,kNAMLE,aAAe,WAAM,IACTH,EAAiBI,EAAKC,MAAtBL,aACAM,EAAuBN,EAAvBM,SAAUC,EAAaP,EAAbO,SACbA,EAQLd,EAAQ,CACJe,MAAO,6CACPC,QAAS,uLACTC,KAAI,eAAAC,EAAAjC,OAAAkC,EAAA,EAAAlC,CAAAmC,EAAAlB,EAAAmB,KAAE,SAAAC,IAAA,OAAAF,EAAAlB,EAAAqB,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEFC,UAAQpB,aAAaqB,gBAAgB,CACjCC,SAAUC,KAAKC,UAAU,CACrBvD,WAAYD,EAAiBsC,EAASrC,cAE1CsC,aANF,wBAAAU,EAAAQ,SAAAV,MAAF,yBAAAJ,EAAAe,MAAAC,KAAAC,YAAA,KAVJhC,EAAM,CACFY,MAAO,2BACPC,QAAS,0IAoBZ,IAAAoB,EAC8BF,KAAKtB,MAAhCyB,sBADH,IAAAD,KAEL,OACIE,EAAApC,EAAAqC,cAAA,OAAKC,UAAU,iBACXF,EAAApC,EAAAqC,cAAA,OAAKC,UAAU,UACXF,EAAApC,EAAAqC,cAAA,QAAMC,UAAU,SAAhB,wBACAF,EAAApC,EAAAqC,cAAA,QAAMC,UAAU,aAAhB,gEAEIH,GAAkBC,EAAApC,EAAAqC,cAAA,QAAMC,UAAU,QAC9BF,EAAApC,EAAAqC,cAAAE,EAAAvC,EAAA,CAAQsC,UAAU,UAAUE,QAAS,WACjCC,YAAK,MADT,gBAKAL,EAAApC,EAAAqC,cAAAE,EAAAvC,EAAA,CACIsC,UAAU,UACVzD,KAAK,UACL2D,QAASR,KAAKxB,cAHlB,gCA1CPkC,8DChBRC,EAAc,iBAAO,CAC9B7D,UAAW,GACXH,cAAe,QACfiE,OAAQ,OACRC,SAAS,EACTnC,MAAO,CACHoC,QAAS,CAAC,CAACjC,MAAO,eAAMkC,UAAW,aAEvC3D,aAAc,GACdd,WAAY,KAMH0E,EAAW,iBAAO,CAC3B9E,KAAM,QACN+E,KAAM,QACNtE,cAAe,0OChBXuE,eACFC,GAAWC,GAAApD,EAAKqD,KAChBC,GAAkBC,IAAMC,cAAc,MAMtCC,GAAkBL,GAAApD,EAAK0D,QAALN,CALJ,SAAAvD,GAAA,IAAG8D,EAAH9D,EAAG8D,KAAgBjD,GAAnBb,EAAS+D,MAAT7E,OAAA8E,EAAA,EAAA9E,CAAAc,EAAA,0BAChBuC,EAAApC,EAAAqC,cAACiB,GAAgBQ,SAAjB,CAA0BC,MAAOJ,GAC7BvB,EAAApC,EAAAqC,cAAA,KAAQ3B,MAUKsD,8MAEjBC,MAAQ,CACJ5E,IAAK,GACL6E,iBAAkB,CACdC,GAAI,GACJrF,UAAW,IAEfsF,oBAAqB,GACrBC,WAAY,GACZC,cAAc,EACd7E,OAAQ,MACR8E,wBAAwB,EACxBC,WAAY,KAiDhBC,qBAAuB,SAACC,GAIpB,IAAMC,EAAc5F,OAAA6F,GAAA,EAAA7F,CAAO0B,EAAKwD,MAAMI,YAChCT,EAAQe,EAAQ/E,UAAU,SAACpB,GAAD,OAAyBkG,EAAIzG,MAAQO,EAAKP,MACpEO,EAAOmG,EAAQf,GACfiB,EAAO9F,OAAAC,EAAA,EAAAD,CAAA,GAAOP,EAASkG,GAC7BC,EAAQG,OAAOlB,EAAO,EAAGiB,GACzBpE,EAAKsE,SAAS,CAAEV,WAAYM,OAMhCK,UAAY,WAAM,IAAAC,EACmBxE,EAAKwD,MAAhCO,EADQS,EACRT,WAAYH,EADJY,EACIZ,WACZM,EAAU,CACZ1G,MAAOuG,EACPU,QAAS,GACTC,UAAW,IAEf1E,EAAKsE,SAAS,CACVV,WAAU,GAAAe,OAAArG,OAAA6F,GAAA,EAAA7F,CAAMsF,GAAN,CAAkBM,IAC5BH,kBAQRa,qBAAuB,SAACpH,GACpB,IAAMoG,EAAUtF,OAAA6F,GAAA,EAAA7F,CAAO0B,EAAKwD,MAAMI,YAIlC5D,EAAKsE,SAAS,CAAEV,WAAYA,EAAWiB,OAAO,SAAC9G,GAAD,OAAyBA,EAAKP,MAAQA,SAMxFsH,cAAgB,WACZ,GAAK9E,EAAK+E,YAAV,CACA,IAAM7E,EAAWF,EAAKC,MAAMC,SAFV8E,EAGoChF,EAAKwD,MAAnDC,EAHUuB,EAGVvB,iBAAkB7E,EAHRoG,EAGQpG,IAAKI,EAHbgG,EAGahG,OAAQ4E,EAHrBoB,EAGqBpB,WACvC1D,EAASrC,WAAaqC,EAASrC,WAAWC,IAAI,SAACC,GAgB3C,OAfIA,EAAKkH,gBACLlH,EAAKM,UAAYoF,EAAiBpF,UAClCN,EAAKkC,MAAMoC,QAAUuB,EAAW9F,IAAI,SAACC,GAAD,MAAgB,CAChDqC,MAAOrC,EAAK2G,UACZpC,UAAWvE,EAAK0G,WAGpB1G,EAAKY,aAAe,CAChBP,KAAM,QACNW,aAAc,OACdH,MACAI,SACAF,WAAY,QAGbf,IAEXiC,EAAKC,MAAMiF,OAAOhF,OAMtB6E,UAAY,WAAM,IAAAI,EACwCnF,EAAKwD,MAAnD5E,EADMuG,EACNvG,IAAKI,EADCmG,EACDnG,OAAQ4E,EADPuB,EACOvB,WAAYH,EADnB0B,EACmB1B,iBACjC,OAAK7E,EAGOI,GAGAA,EAGA4E,EAAWzF,SAGXsF,EAAiBpF,YACzB+G,GAAA7F,EAAQC,MAAM,qDACP,IAJP4F,GAAA7F,EAAQC,MAAM,qDACP,IAPP4F,GAAA7F,EAAQC,MAAM,qDACP,IAJP4F,GAAA7F,EAAQC,MAAM,gCACP,MAqBf6F,mBAAqB,SAACC,GAClB,IAAMpF,EAAWF,EAAKC,MAAMC,SAC5B,GAAIoF,EAAEC,OAAOC,QAAS,KAAAC,EACgCzF,EAAKwD,MAA/CG,EADU8B,EACV9B,oBAAqBF,EADXgC,EACWhC,iBACvBiC,EAASpH,OAAAC,EAAA,EAAAD,CAAA,GACRqH,GAAWC,MAAM1D,cADT,CAEXwB,GAAImC,eACJC,SAAUrC,EAAiBC,KAG/BxD,EAASrC,WAAWwG,OAAOV,EAAqB,EAAG+B,GAEnD1E,UAAQpB,aAAamG,YAAY7F,OAC9B,CACH,IAAM8F,EAAqB9F,EAASrC,WAAWsB,UAAU,SAACpB,GACtD,OAAOA,EAAK+H,UAAY/H,EAAK+H,WAAa9F,EAAKwD,MAAMC,iBAAiBC,KAE1ExD,EAASrC,WAAWwG,OAAO2B,EAAoB,GAC/ChF,UAAQpB,aAAamG,YAAY7F,GAErCF,EAAKsE,SAAS,CACVR,uBAAwBwB,EAAEC,OAAOC,aAQzCS,aAAe,SAAC3C,GACZtD,EAAKsE,SAAS,CACVtF,OAAQsE,OAQhB4C,eAAiB,SAACC,GAAU,IACjB7C,EAAS6C,EAAMZ,OAAfjC,MACPtD,EAAKsE,SAAS,CACV1F,IAAK0E,OAQb8C,qBAAuB,SAACD,GAAU,IACvB7C,EAAS6C,EAAMZ,OAAfjC,MACDG,EAAgBnF,OAAAC,EAAA,EAAAD,CAAA,GACf0B,EAAKwD,MAAMC,iBADI,CAElBpF,UAAWiF,IAEftD,EAAKsE,SAAS,CACVb,8FAIC,IAAA4C,EAAA9E,KACC+E,EAAiB,CACnBC,SAAU,CAACC,KAAM,GACjBC,WAAY,CAACD,KAAM,KAHlBE,EAM0CnF,KAAKiC,MAA5CI,EANH8C,EAMG9C,WAAYE,EANf4C,EAMe5C,uBAChBzB,EAAU,CACV,CACIjC,MAAO,2BACPkC,UAAW,YACXqE,UAAU,GAEd,CACIvG,MAAO,2BACPkC,UAAW,UACXqE,UAAU,GAEd,CACIvG,MAAO,YACPkC,UAAW,YACXsE,OAAQ,SAACC,EAAMC,GACX,OAAOT,EAAK7C,MAAMI,WAAWzF,QAAU,EACnCwD,EAAApC,EAAAqC,cAAA,WACID,EAAApC,EAAAqC,cAAAE,EAAAvC,EAAA,CAAQa,MAAM,kBAAkBhC,KAAK,SAAS2D,QAAS,kBAAMsE,EAAKzB,qBAAqBkC,EAAOtJ,OAA9F,WAKJ,QAIVK,EAAa,CACfkJ,KAAM,CACF9C,IAAKjB,GACLgE,KAAMC,KAoBd,OAhBA5E,EAAUA,EAAQvE,IAAI,SAACoJ,GACnB,OAAKA,EAAIP,SAGFrI,OAAAC,EAAA,EAAAD,CAAA,GACA4I,EADP,CAEIC,OAAQ,SAACL,GAAD,MAAa,CACjBA,SACAH,SAAUO,EAAIP,SACdrE,UAAW4E,EAAI5E,UACflC,MAAO8G,EAAI9G,MACXgH,WAAYf,EAAKrC,yBATdkD,IAeXvF,EAAApC,EAAAqC,cAACD,EAAApC,EAAM8H,SAAP,KACI1F,EAAApC,EAAAqC,cAACc,GAADpE,OAAAgJ,OAAA,GAAchB,EAAd,CAA8BiB,MAAM,6BAChC5F,EAAApC,EAAAqC,cAAA4F,GAAAjI,EAAA,CAAO+D,MAAO/B,KAAKiC,MAAM5E,IACrB6I,YAAY,wCACZC,SAAUnG,KAAK2E,kBAEvBvE,EAAApC,EAAAqC,cAACc,GAADpE,OAAAgJ,OAAA,GAAchB,EAAd,CAA8BiB,MAAM,6BAChC5F,EAAApC,EAAAqC,cAAA+F,GAAApI,EAAA,CAAQqI,aAAcrG,KAAKiC,MAAMxE,OAAQ6I,MAAO,CAAEC,MAAO,KAAOJ,SAAUnG,KAAK0E,cAC3EtE,EAAApC,EAAAqC,cAACa,GAAD,CAAQa,MAAM,OAAd,OACA3B,EAAApC,EAAAqC,cAACa,GAAD,CAAQa,MAAM,QAAd,UAGR3B,EAAApC,EAAAqC,cAACc,GAADpE,OAAAgJ,OAAA,GAAchB,EAAd,CAA8BiB,MAAM,6BAChC5F,EAAApC,EAAAqC,cAAA4F,GAAAjI,EAAA,CAAO+D,MAAO/B,KAAKiC,MAAMC,iBAAiBpF,UACtCoJ,YAAY,sFACZC,SAAUnG,KAAK6E,wBAEvBzE,EAAApC,EAAAqC,cAAAmG,EAAAxI,EAAA,CACI1B,WAAYA,EACZ+F,WAAYA,EACZoE,UAAU,EACV3F,QAASA,EACT4F,YAAY,IAEhBtG,EAAApC,EAAAqC,cAAAsG,EAAA3I,EAAA,CAAKsI,MAAO,CAACM,UAAW,QAAS/J,KAAK,OAAOgK,QAAQ,MAAMC,OAAQ,GAC/D1G,EAAApC,EAAAqC,cAAA0G,GAAA/I,EAAA,CAAUiG,QAAS1B,EAAwB4D,SAAUnG,KAAK8D,oBAA1D,qDAEJ1D,EAAApC,EAAAqC,cAAAsG,EAAA3I,EAAA,CAAKsI,MAAO,CAACM,UAAW,QAAS/J,KAAK,OAAOgK,QAAQ,MAAMC,OAAQ,GAC/D1G,EAAApC,EAAAqC,cAAA2G,EAAAhJ,EAAA,KACIoC,EAAApC,EAAAqC,cAAAE,EAAAvC,EAAA,CAAQwC,QAASR,KAAKgD,UAAWnG,KAAK,UAAUyJ,MAAO,CAAEW,aAAc,KAAvE,cAIJ7G,EAAApC,EAAAqC,cAAA2G,EAAAhJ,EAAA,CAAKkJ,OAAQ,GACT9G,EAAApC,EAAAqC,cAAAE,EAAAvC,EAAA,CAAQnB,KAAK,UAAU2D,QAASR,KAAKuD,eAArC,sEAtSY7E,EAAOuD,GACnC,IAAMkF,EAAgB,GACtB,IAAKlF,EAAMK,aAAc,CACrB,IAAMJ,EAAmBxD,EAAMC,SAASrC,WAAW8K,KAAK,SAAC5K,EAAMoF,GAK3D,OAJIpF,EAAKkH,gBACLyD,EAAS/E,oBAAsBR,EAC/BuF,EAAS7E,cAAe,GAErB9F,EAAKkH,gBAGhB,GAAIxB,EAAkB,CAOlB,GANAiF,EAASjF,iBAAmBA,EAC5BxD,EAAMC,SAASrC,WAAW+K,QAAQ,SAAC7K,GAC3BA,EAAK+H,UAAY/H,EAAK+H,WAAarC,EAAiBC,KACpDgF,EAAS5E,wBAAyB,KAGV,IAA5BN,EAAMI,WAAWzF,OAAc,CAC/B,IAAMyF,EAAaH,EAAiBxD,MAAMoC,QAAQvE,IAAI,SAACC,EAAMoF,GACzD,MAAO,CACHsB,QAAS1G,EAAKuE,UACd9E,IAAK2F,EACLuB,UAAW3G,EAAKqC,SAGxBsI,EAAS9E,WAAaA,EACtB8E,EAAS3E,WAAaH,EAAWzF,QAGhCqF,EAAM5E,KAAO6E,EAAiB9E,eAC/B+J,EAAS9J,IAAM6E,EAAiB9E,aAAaC,KAAO,IAGpD6E,EAAiB9E,aAAaK,SAC9B0J,EAAS1J,OAASyE,EAAiB9E,aAAaK,SAI5D,OAAOV,OAAOuK,KAAKH,GAAUvK,OAASuK,EAAW,YAvDhBzG,aAyUnCgF,8MACFzD,MAAQ,CACJsF,SAAS,KAGbC,eAEA7F,cAEA8F,WAAa,WACT,IAAMF,GAAWG,EAAKzF,MAAMsF,QAC5BG,EAAK3E,SAAS,CAAEwE,WAAW,WACnBA,GACAG,EAAKF,MAAMG,aAKvBC,KAAO,SAAC7D,GAAM,IAAA8D,EACqBH,EAAKhJ,MAA5B6G,EADEsC,EACFtC,OAAQM,EADNgC,EACMhC,WAChB6B,EAAK/F,KAAKmG,eAAe,SAAC7J,EAAO8J,GACzB9J,GAASA,EAAM8F,EAAEiE,cAAc7F,MAGnCuF,EAAKD,aACL5B,EAAW9I,OAAAC,EAAA,EAAAD,CAAA,GAAKwI,EAAWwC,UAInCE,WAAa,SAACtG,GACV+F,EAAK/F,KAAOA,EADO,IAAAuG,EAE4BR,EAAKhJ,MAA5ChC,EAFWwL,EAEXxL,SAAUqE,EAFCmH,EAEDnH,UAAWwE,EAFV2C,EAEU3C,OAAQ1G,EAFlBqJ,EAEkBrJ,MAErC,OADoB6I,EAAKzF,MAAjBsF,QAEJnH,EAAApC,EAAAqC,cAAAe,GAAApD,EAAMqD,KAAN,CAAWiF,MAAO,CAAE6B,OAAQ,IACvBxG,EAAKyG,kBAAkBrH,EAAW,CAC/BsH,MAAO,CACH,CACIC,UAAU,EACVC,QAAO,GAAAnF,OAAKvE,EAAL,mBAGf2J,aAAcjD,EAAOxE,IAPxBY,CAQEvB,EAAApC,EAAAqC,cAAA4F,GAAAjI,EAAA,CAAOyK,IAAK,SAACC,GAAD,OAAWhB,EAAKF,MAAQkB,GAAOC,aAAcjB,EAAKE,KAAMgB,OAAQlB,EAAKE,SAGxFxH,EAAApC,EAAAqC,cAAA,OACIC,UAAU,2BACVgG,MAAO,CAAEuC,aAAc,GAAIC,UAAW,QACtCtI,QAASkH,EAAKD,YAEb/K,4EAKJ,IAAAqM,EAUD/I,KAAKtB,MARL0G,EAFC2D,EAED3D,SACA1I,EAHCqM,EAGDrM,SAMGsM,GATFD,EAIDhI,UAJCgI,EAKDlK,MALCkK,EAMDxD,OANCwD,EAODnH,MAPCmH,EAQDlD,WARC9I,OAAA8E,EAAA,EAAA9E,CAAAgM,EAAA,4EAWL,OACI3I,EAAApC,EAAAqC,cAAA,KAAQ2I,EACH5D,EACGhF,EAAApC,EAAAqC,cAACiB,GAAgB2H,SAAjB,KAA2BjJ,KAAKiI,YAEhCvL,UAxEO6E,IAAMb,WCzV3BwI,oLAGE,OACI9I,EAAApC,EAAAqC,cAAAmG,EAAAxI,EACQgC,KAAKtB,cALJ6C,IAAMb,WCDdC,GAAc,iBAAO,CAC9B7D,UAAW,GACXH,cAAe,QACfiE,OAAQ,OACRC,SAAS,EACT5E,IAAK,GACL+J,MAAO,KAMEhF,GAAW,iBAAO,CAC3B9E,KAAM,QACN+E,KAAM,OACNtE,cAAe,6BCZbwE,GAAWC,GAAApD,EAAKqD,KAEhB8H,GAAQ,QAOOC,8MAKjBnH,MAAM,CACFoH,SAAU,GAGVC,SAAS,EACTC,QAAS,CACLpH,GAAI,GACJzD,MAAO,OAqBfmH,WAAa,WAAM,IAAA5C,EACexE,EAAKwD,MAA3BoH,EADOpG,EACPoG,SAAUE,EADHtG,EACGsG,QADHR,EAEctK,EAAKC,MAA1BC,EAFOoK,EAEPpK,SAAUgF,EAFHoF,EAEGpF,OAClBhF,EAASrC,WAAakN,aAAcD,EAAQpH,GAAIxD,EAASrC,WAAtBS,OAAAC,EAAA,EAAAD,CAAA,GAC5BsM,EAD4B,CAE/B3K,MAAM3B,OAAAC,EAAA,EAAAD,CAAA,GACCwM,EAAQ7K,MADV,CAEDwH,YAAamD,EAASF,SAG9BxF,GAAUA,EAAOhF,MAGrB8K,aAAe,SAACxN,EAAa8H,GAAW,IAC5BsF,EAAa5K,EAAKwD,MAAlBoH,SACFtH,EAAQgC,EAAEC,OAAOjC,MACvBtD,EAAKsE,SAAS,CACVsG,SAAStM,OAAAC,EAAA,EAAAD,CAAA,GACFsM,EADCtM,OAAA2M,GAAA,EAAA3M,CAAA,GAEHd,EAAM8F,IAEXuH,SAAS,6EAIR,IACGD,EAAarJ,KAAKiC,MAAlBoH,SACR,OAAOjJ,EAAApC,EAAAqC,cAAA,WACHD,EAAApC,EAAAqC,cAACsJ,GAAD5M,OAAAgJ,OAAA,CACIC,MAAO4D,KAAMC,KACTC,MAEJ1J,EAAApC,EAAAqC,cAAA4F,GAAAjI,EAAA,CACI+D,MAAOsH,EAAQ,IACfnD,YAAY,0BACZC,SAAUnG,KAAKyJ,aAAaM,KAAK/J,KA5EzC,UA+EAI,EAAApC,EAAAqC,cAACsJ,GAAD5M,OAAAgJ,OAAA,CACIC,MAAO4D,KAAMT,OACTW,MAEJ1J,EAAApC,EAAAqC,cAAA4F,GAAAjI,EAAA,CACI+D,MAAOsH,EAASF,IAChBjD,YAAY,kCACZC,SAAUnG,KAAKyJ,aAAaM,KAAK/J,KAAMmJ,OAG/C/I,EAAApC,EAAAqC,cAACsJ,GAAD,KACIvJ,EAAApC,EAAAqC,cAAAsG,EAAA3I,EAAA,KACIoC,EAAApC,EAAAqC,cAAA2G,EAAAhJ,EAAA,KACIoC,EAAApC,EAAAqC,cAAAE,EAAAvC,EAAA,CACIwC,QAASR,KAAK6F,WACdhJ,KAAK,WAFT,uEApEY6B,EAAOuD,GACnC,GAAKA,EAAMqH,QAYP,OAAOrH,EAZS,IAAA+H,EAER1N,EADaoC,EAAbC,SACArC,WACFiN,EAAUU,aAAc3N,GAC9B,MAAO,CACH+M,UAAQW,EAAA,GAAAjN,OAAA2M,GAAA,EAAA3M,CAAAiN,EA9BZ,MA+BeT,EAAO,KADVxM,OAAA2M,GAAA,EAAA3M,CAAAiN,EAEHb,GAAQI,EAAQJ,KAFba,GAIRT,kBA1ByB7I,aCDnCwJ,oLAKO,IAAAnB,EAC2C/I,KAAKtB,MAA7CyL,EADHpB,EACGoB,OAAyBC,GAD5BrB,EACW1K,aADXtB,OAAA8E,EAAA,EAAA9E,CAAAgM,EAAA,4BAAAsB,EAEkBF,EAAfnE,aAFH,IAAAqE,EAEW,GAFXA,EAGL,OACIjK,EAAApC,EAAAqC,cAAAe,GAAApD,EAAMqD,KAANtE,OAAAgJ,OAAA,GACQ+D,KADR,CAEIxD,MAAO,CAAEW,aAAc,GACvBjB,MAAOA,IAEP5F,EAAApC,EAAAqC,cAAA4F,GAAAjI,EAAAjB,OAAAgJ,OAAA,GACQqE,EADR,CAEI9D,MAAO,CACHC,MAAO,oBAjBV7F,aCXRC,GAAc,iBAAO,CAC9B7D,UAAW,GACXH,cAAe,SACfiE,OAAQ,OACRC,SAAS,EACT5E,IAAK,GACL+J,MAAO,GACPtH,MAAO,CACHwH,YAAa,GACboE,UAAU,EACVC,YAAY,EACZC,YAAY,KAOPxJ,GAAW,iBAAO,CAC3B9E,KAAM,SACN+E,KAAM,cACNtE,cAAe,uECtBbwE,GAAWC,GAAApD,EAAKqD,KAChBoJ,GAAaC,GAAA1M,EAAM2M,MAcJC,8MACjB3I,MAAQ,gFAEMpF,EAAMgO,GAChB,IAAI/L,EAEJ,OAAQjC,GACJ,IAAK,UACDiC,EACIsB,EAAApC,EAAAqC,cAACoK,GAAeI,EACZzK,EAAApC,EAAAqC,cAAAqK,GAAA1M,EAAA,CAAO+D,OAAO,GAAd,QACA3B,EAAApC,EAAAqC,cAAAqK,GAAA1M,EAAA,CAAO+D,OAAO,GAAd,UAGR,MACJ,QACIjD,EACIsB,EAAApC,EAAAqC,cAAA4F,GAAAjI,EAAW6M,GAKvB,OAAO/L,mCAGF,IAAAiK,EAC4E/I,KAAKtB,MAA9ExC,EADH6M,EACG7M,KAAM8J,EADT+C,EACS/C,MAAOrE,EADhBoH,EACgBpH,KAAMoD,EADtBgE,EACsBhE,eAAgBsB,EADtC0C,EACsC1C,aAAcxJ,EADpDkM,EACoDlM,KAASgO,EAD7D9N,OAAA8E,EAAA,EAAA9E,CAAAgM,EAAA,gEAGL,OACI3I,EAAApC,EAAAqC,cAACyK,GAAD/N,OAAAgJ,OAAA,CACIC,MAAOA,GACHjB,GAIApD,EAAKyG,kBAAkBlM,EAAM,CACzBsM,aAAcnC,GADlB1E,CAEG3B,KAAK+K,cAAclO,EAAMgO,YArCRnK,aCdpCyB,GAAK,EAUY6I,8MACjBC,OAAS,SAACC,GAAM,IACLvJ,EAAQlD,EAAKC,MAAbiD,KAED2F,EAAO3F,EAAKwJ,cAAc,QAEZ,IAAhB7D,EAAK1K,QAKT+E,EAAKyJ,eAAe,CAChB9D,KAAMA,EAAKhE,OAAO,SAACrH,GAAD,OAASA,IAAQiP,SAI3CG,IAAM,WAAM,IACD1J,EAAQlD,EAAKC,MAAbiD,KAGD2J,EADO3J,EAAKwJ,cAAc,QACV/H,OAAOjB,MAG7BR,EAAKyJ,eAAe,CAChB9D,KAAMgE,6EAIL,IAAAxG,EAAA9E,KAAAuL,EACsCvL,KAAKtB,MAAMiD,KAA/CyG,EADFmD,EACEnD,kBAAmB+C,EADrBI,EACqBJ,cADrBpC,EAE6C/I,KAAKtB,MAAhDsH,EAFF+C,EAEE/C,MAAO9J,EAFT6M,EAES7M,KAAMsP,EAFfzC,EAEeyC,QAFfC,EAAA1C,EAEwB1C,oBAFxB,IAAAoF,EAEuC,GAFvCA,EAGC1G,EAAiB,CACnBC,SAAU,CACN0G,GAAI,CAACzG,KAAM,IACX0G,GAAI,CAAC1G,KAAM,IAEfC,WAAY,CACRwG,GAAI,CAACzG,KAAM,IACX0G,GAAI,CAAC1G,KAAM,MAGb2G,EAA6B,CAC/B1G,WAAY,CACRwG,GAAI,CAACzG,KAAM,GAAIiC,OAAQ,GACvByE,GAAI,CAAC1G,KAAM,GAAIiC,OAAQ,KAG/BkB,EAAkB,OAAQ,CAACI,aAAcnC,EAAa9J,IAAI,SAACC,EAAMoF,GAAP,OAAiBA,MAC3E,IAAM0F,EAAO6D,EAAc,QACrBU,EAAYvE,EAAK/K,IAAI,SAAC2O,EAAGtJ,GAAJ,OACvBxB,EAAApC,EAAAqC,cAAAe,GAAApD,EAAMqD,KAANtE,OAAAgJ,OAAA,GACmB,IAAVnE,EAAcmD,EAAiB6G,EADxC,CAEI5F,MAAiB,IAAVpE,EAAcoE,EAAQ,GAC7BsC,UAAU,EACVrM,IAAKiP,IAEJ9C,EAAiB,GAAAhF,OAAIlH,EAAJ,KAAAkH,OAAY8H,EAAZ,WAAwB,CACtCY,gBAAiB,CAAC,WAAY,UAC9BzD,MAAO,CACH,CACIC,UAAU,EACVyD,YAAY,EACZxD,QAAS,4BAGjBC,aAAcnC,EAAa6E,GAAK7E,EAAa6E,GAAGlF,WAAQgG,GAT3D5D,CAUEhI,EAAApC,EAAAqC,cAAA4F,GAAAjI,EAAA,CAAOkI,YAAY,0BAAWI,MAAO,CAACC,MAAO,MAAO0F,YAAa,MACnE7D,EAAiB,GAAAhF,OAAIlH,EAAJ,KAAAkH,OAAY8H,EAAZ,iBAA8B,CAC5CY,gBAAiB,CAAC,WAAY,UAC9BzD,MAAO,CACH,CACIC,UAAU,EACVyD,YAAY,EACZxD,QAAS,4BAGjBC,aAAcnC,EAAa6E,GAAK7E,EAAa6E,GAAGxM,MAAMqD,WAAQiK,GATjE5D,CAUEhI,EAAApC,EAAAqC,cAAA4F,GAAAjI,EAAA,CAAOkI,YAAY,0BAAWI,MAAO,CAACC,MAAO,MAAO0F,YAAa,MACnE3E,EAAK1K,OAAS,EACXwD,EAAApC,EAAAqC,cAAA6L,EAAAlO,EAAA,CACIsC,UAAU,wBACVzD,KAAK,iBACL2D,QAAS,kBAAMsE,EAAKmG,OAAOC,MAE/B,QAGZ,OACI9K,EAAApC,EAAAqC,cAACD,EAAApC,EAAM8H,SAAP,KACK+F,EACDzL,EAAApC,EAAAqC,cAAAe,GAAApD,EAAMqD,KAASuK,EACXxL,EAAApC,EAAAqC,cAAAE,EAAAvC,EAAA,CAAQnB,KAAK,SAAS2D,QAASR,KAAKqL,IAAK/E,MAAO,CAACC,MAAO,QACpDnG,EAAApC,EAAAqC,cAAA6L,EAAAlO,EAAA,CAAMnB,KAAK,SADf,IACyB2O,YA5FE9K,aCNzCS,GAAWC,GAAApD,EAAKqD,KAgBhB8K,GAAc,CAChB,CACIjQ,KAAM,cACN8J,MAAO4D,KAAMwC,YACbvP,KAAM,QACNqJ,YAAa,gEAEjB,CACIhK,KAAM,aACN8J,MAAO,2BACPnJ,KAAM,WAEV,CACIX,KAAM,WACN8J,MAAO,2BACPnJ,KAAM,WAEV,CACIX,KAAM,aACN8J,MAAO,2BACPnJ,KAAM,YAIRwP,eAEF,SAAAA,EAAY3N,GAAO,IAAAD,EAAA,OAAA1B,OAAAuP,EAAA,EAAAvP,CAAAiD,KAAAqM,IACf5N,EAAA1B,OAAAwP,EAAA,EAAAxP,CAAAiD,KAAAjD,OAAAyP,EAAA,EAAAzP,CAAAsP,GAAAI,KAAAzM,KAAMtB,KA+BVmH,WAAa,WACTpH,EAAKC,MAAMiD,KAAKmG,eAAe,SAAC4E,EAAKC,GACjC,IAAKD,EAAK,CACNjO,EAAKsE,SAAS,CACVsG,SAAStM,OAAAC,EAAA,EAAAD,CAAA,GACF4P,GAEPrD,SAAS,IALP,IAOEC,EAAY9K,EAAKwD,MAAjBsH,QACAqD,EAA+BD,EAA/BC,QAAgBC,EAAeF,EAAtBjO,MARXqK,EASuBtK,EAAKC,MAA1BC,EATFoK,EASEpK,SAAUgF,EATZoF,EASYpF,OAClBhF,EAASrC,WAAakN,aAAcD,EAAQpH,GAAIxD,EAASrC,WAAY,CACjEL,IAAK0Q,EAAY1Q,IACjB+J,MAAO2G,EAAY3G,OAAS,GAC5BtH,MAAM3B,OAAAC,EAAA,EAAAD,CAAA,GACC8P,GAEPD,YAEJjJ,GAAUA,EAAOhF,OApDVF,EAyDnBgL,aAAe,SAACxN,EAAK8H,GAAM,IACfsF,EAAa5K,EAAKwD,MAAlBoH,SACFtH,EAAQgC,EAAEC,OAAOjC,MACvBtD,EAAKsE,SAAS,CACVsG,SAAStM,OAAAC,EAAA,EAAAD,CAAA,GACFsM,EADCtM,OAAA2M,GAAA,EAAA3M,CAAA,GAEHd,EAAM8F,IAEXuH,SAAS,KA9Db7K,EAAKwD,MAAQ,CACToH,SAAU,GACVC,SAAS,EACTC,QAAS,CACLpH,GAAI,GACJzD,MAAO,KARAD,wEAqEV,IACG4K,EAAarJ,KAAKiC,MAAlBoH,SACA1H,EAAS3B,KAAKtB,MAAdiD,KACAyG,EAAsBzG,EAAtByG,kBACR,OAAOhI,EAAApC,EAAAqC,cAAA,WACHD,EAAApC,EAAAqC,cAACyM,GAAD/P,OAAAgJ,OAAA,CACIC,MAAO4D,KAAMC,KACTC,MAGA1B,EAAkB,MAAO,CACrBC,MAAO,CACH,CAACC,UAAU,EAAMC,QAAS,qDAE9BC,aAAca,EAAQ,KAJ1BjB,CAMIhI,EAAApC,EAAAqC,cAAA4F,GAAAjI,EAAA,CACIkI,YAAY,mCAM5B9F,EAAApC,EAAAqC,cAACyM,GAAD/P,OAAAgJ,OAAA,CACIC,MAAO4D,KAAMT,OACTW,MAGA1B,EAAkB,QAAS,CACvBC,MAAO,CACH,CAACC,UAAU,EAAMC,QAAS,qDAE9BC,aAAca,EAAQ,OAJ1BjB,CAMIhI,EAAApC,EAAAqC,cAAA4F,GAAAjI,EAAA,CACIkI,YAAY,kDAM5B9F,EAAApC,EAAAqC,cAAA0M,GAAA/O,EAAA,CAAMa,MAAM,6BAEJsN,GAAY5P,IAAI,SAACC,EAAMoF,GAAU,IACrB/E,EAAqCL,EAArCK,KAAMX,EAA+BM,EAA/BN,KAAM8J,EAAyBxJ,EAAzBwJ,MAAU6E,EADD9N,OAAA8E,EAAA,EAAA9E,CACgBP,EADhB,yBAG7B,OACI4D,EAAApC,EAAAqC,cAAC2M,GAADjQ,OAAAgJ,OAAA,CACI9J,IAAK2F,EACL/E,KAAMA,EACNX,KAAI,SAAAkH,OAAWlH,GACf8J,MAAOA,EACPK,aAAcgD,EAAS3K,MAAQ2K,EAAS3K,MAAMlC,EAAKN,WAAQ8P,EAC3DrK,KAAMA,EACNoD,eAAgB+E,MACZe,OAMxBzK,EAAApC,EAAAqC,cAAA0M,GAAA/O,EAAA,CAAMa,MAAM,uBACRuB,EAAApC,EAAAqC,cAAC4M,GAAD,CACItL,KAAMA,EACNzF,KAAK,UACL8J,MAAM,2BACNwF,QAAQ,2BACRnF,aAAcgD,EAASuD,WAG/BxM,EAAApC,EAAAqC,cAACyM,GAAD,KACI1M,EAAApC,EAAAqC,cAAAsG,EAAA3I,EAAA,KACIoC,EAAApC,EAAAqC,cAAA2G,EAAAhJ,EAAA,KACIoC,EAAApC,EAAAqC,cAAAE,EAAAvC,EAAA,CACIwC,QAASR,KAAK6F,WACdhJ,KAAK,WAFT,uEAjIY6B,EAAOuD,GACnC,GAAKA,EAAMqH,QAcP,OAAOrH,EAdS,IAAA+H,EAER1N,EADaoC,EAAbC,SACArC,WACFiN,EAAUU,aAAc3N,GAC9B,MAAO,CACH+M,UAAQW,EAAA,GAAAjN,OAAA2M,GAAA,EAAA3M,CAAAiN,EA5DZ,MA6DeT,EAAO,KADVxM,OAAA2M,GAAA,EAAA3M,CAAAiN,EA3DV,QA6DeT,EAAO,OAFZxM,OAAA2M,GAAA,EAAA3M,CAAAiN,EAAA,QAGGT,EAAQ7K,OAHX3B,OAAA2M,GAAA,EAAA3M,CAAAiN,EAAA,UAIKT,EAAQqD,SAJb5C,GAMRT,kBA3BK7I,aA4JNwM,GAAA9L,GAAApD,EAAK0D,QAAL,CAA2B2K,ICpMpCnL,GAASkF,GAAApI,EAAOkD,OAShBiM,oLAEO,IAAApE,EAC6D/I,KAAKtB,MAA/D6L,EADHxB,EACGwB,WAAYD,EADfvB,EACeuB,SAAUpE,EADzB6C,EACyB7C,YAAasE,EADtCzB,EACsCyB,WAAYL,EADlDpB,EACkDoB,OADlDiD,EAE2BjD,EAAxByC,eAFH,IAAAQ,EAEa,GAFbA,EAEiBpH,EAAUmE,EAAVnE,MAChBmG,EAAc,CAChB5B,aACAD,WACApE,cACAsE,cAEJ,OACIpK,EAAApC,EAAAqC,cAAAe,GAAApD,EAAMqD,KAANtE,OAAAgJ,OAAA,CACIC,MAAOA,GACH8D,KAFR,CAGIxD,MAAO,CAAEW,aAAc,KAEvB7G,EAAApC,EAAAqC,cAAA+F,GAAApI,EAAAjB,OAAAgJ,OAAA,GACQoG,EADR,CAEIkB,iBAAiB,WACjB/G,MAAO,CACHC,MAAO,SAEX+G,aAAc,SAAC9F,EAAO+F,GAClB,OAAOA,EAAO7O,MAAMqD,MAAMyL,cAAcC,QAAQjG,EAAMgG,gBAAkB,GACpED,EAAO7O,MAAMhC,SAAS8Q,cAAcC,QAAQjG,EAAMgG,gBAAkB,KAIxEZ,EAAQrQ,IAAI,SAACC,EAAMoF,GACf,OAAOxB,EAAApC,EAAAqC,cAACqN,GAAD,CAAQzR,IAAK2F,EAAOG,MAAOvF,EAAKkC,MAAMqD,OAAQvF,EAAKwJ,kBA9BhEtF,2CCbTC,GAAc,iBAAO,CAC9B7D,UAAW,GACXH,cAAe,aACfiE,OAAQ,OACRC,SAAS,EACT5E,IAAK,GACL+J,MAAO,KAMEhF,GAAW,iBAAO,CAC3B9E,KAAM,aACN+E,KAAM,WACNtE,cAAe,eCZbwE,GAAWC,GAAApD,EAAKqD,KAEhB+K,GAAc,cACduB,GAAS,SACTC,GAAY,WACZ/D,GAAM,MACNV,GAAQ,QAOOkD,8MAKjBpK,MAAQ,CACJ4L,UAAU,EACVC,OAAQ,aACR5H,YAAa,GACbjK,IAAK,GACL+J,MAAO,GACPuD,QAAS,CACLpH,GAAI,GACJzD,MAAO,IAEX4K,SAAS,KAgBbzD,WAAa,WAAM,IAAAkI,EAAAC,EAAA/K,EACgDxE,EAAKwD,MAA5DiE,EADOjD,EACPiD,YAAa2H,EADN5K,EACM4K,SAAUC,EADhB7K,EACgB6K,OAAQ7R,EADxBgH,EACwBhH,IAAK+J,EAD7B/C,EAC6B+C,MAAOuD,EADpCtG,EACoCsG,QADpCR,EAEYtK,EAAKC,MAAzBC,EAFQoK,EAERpK,SAAUgF,EAFFoF,EAEEpF,OACjBhF,EAASrC,WAAakN,aAAcD,EAAQpH,GAAIxD,EAASrC,YAAtB0R,EAAA,GAAAjR,OAAA2M,GAAA,EAAA3M,CAAAiR,EAC9BnE,GAAM5N,GADwBc,OAAA2M,GAAA,EAAA3M,CAAAiR,EAE9B7E,GAAQnD,GAFsBjJ,OAAA2M,GAAA,EAAA3M,CAAAiR,EAAA,QAAAjR,OAAAC,EAAA,EAAAD,CAAA,GAIxBwM,EAAQ7K,OAJgBqP,EAAA,GAAAhR,OAAA2M,GAAA,EAAA3M,CAAAgR,EAK1B3B,GAAclG,GALYnJ,OAAA2M,GAAA,EAAA3M,CAAAgR,EAM1BH,GAAYC,GANc9Q,OAAA2M,GAAA,EAAA3M,CAAAgR,EAO1BJ,GAASG,GAPiBC,KAAAC,IAUnCrK,GAAUA,EAAOhF,MAGrB8K,aAAe,SAACxN,EAAa8H,GAAW,IAAAkK,EAC9BlM,EAAQgC,EAAEC,OAAOjC,MACvBtD,EAAKsE,UAALkL,EAAA,GAAAlR,OAAA2M,GAAA,EAAA3M,CAAAkR,EACKhS,EAAM8F,GADXhF,OAAA2M,GAAA,EAAA3M,CAAAkR,EAAA,WAEa,GAFbA,6EAMK,IAAAxK,EAC+CzD,KAAKiC,MAAlDiE,EADFzC,EACEyC,YAAa4H,EADfrK,EACeqK,OAAQD,EADvBpK,EACuBoK,SAAU5R,EADjCwH,EACiCxH,IAAK+J,EADtCvC,EACsCuC,MAC3C,OAAO5F,EAAApC,EAAAqC,cAAA,WACHD,EAAApC,EAAAqC,cAAC6N,GAADnR,OAAAgJ,OAAA,CACIC,MAAO4D,KAAMC,KACTC,MAEJ1J,EAAApC,EAAAqC,cAAA4F,GAAAjI,EAAA,CACI+D,MAAO9F,EACPiK,YAAY,0BACZC,SAAUnG,KAAKyJ,aAAaM,KAAK/J,KAAM6J,OAG/CzJ,EAAApC,EAAAqC,cAAAe,GAAApD,EAAMqD,KAANtE,OAAAgJ,OAAA,GACQ+D,KADR,CAEI9D,MAAO4D,KAAMT,QAEb/I,EAAApC,EAAAqC,cAAA4F,GAAAjI,EAAA,CACI+D,MAAOiE,EACPE,YAAY,2BACZC,SAAUnG,KAAKyJ,aAAaM,KAAK/J,KAAMmJ,OAG/C/I,EAAApC,EAAAqC,cAAC6N,GAADnR,OAAAgJ,OAAA,CACIC,MAAM,wCACF8D,MAEJ1J,EAAApC,EAAAqC,cAAAqK,GAAA1M,EAAO2M,MAAP,CAAaxE,SAAUnG,KAAKyJ,aAAaM,KAAK/J,KAAM4N,IAAY7L,MAAO8L,GACnEzN,EAAApC,EAAAqC,cAAAqK,GAAA1M,EAAA,CAAO+D,OAAO,GAAd,UACA3B,EAAApC,EAAAqC,cAAAqK,GAAA1M,EAAA,CAAO+D,OAAO,GAAd,YAGR3B,EAAApC,EAAAqC,cAAC6N,GAADnR,OAAAgJ,OAAA,CACIC,MAAO4D,KAAMwC,aACTtC,MAEJ1J,EAAApC,EAAAqC,cAAA4F,GAAAjI,EAAA,CACI+D,MAAOmE,EACPC,SAAUnG,KAAKyJ,aAAaM,KAAK/J,KAAMoM,OAG/ChM,EAAApC,EAAAqC,cAAC6N,GAADnR,OAAAgJ,OAAA,CACIC,MAAO,4BACH8D,MAEJ1J,EAAApC,EAAAqC,cAAA4F,GAAAjI,EAAA,CACI+D,MAAO+L,EACP5H,YAAY,sBACZC,SAAUnG,KAAKyJ,aAAaM,KAAK/J,KAAM2N,OAG/CvN,EAAApC,EAAAqC,cAAC6N,GAAD,KACI9N,EAAApC,EAAAqC,cAAAsG,EAAA3I,EAAA,KACIoC,EAAApC,EAAAqC,cAAA2G,EAAAhJ,EAAA,KACIoC,EAAApC,EAAAqC,cAAAE,EAAAvC,EAAA,CACIwC,QAASR,KAAK6F,WACdhJ,KAAK,WAFT,uEA3FY6B,EAAOuD,GACnC,GAAKA,EAAMqH,QAQP,OAAOrH,EARS,IAER3F,EADaoC,EAAbC,SACArC,WAER,MAAO,CACHiN,QAFYU,aAAc3N,WAtBNoE,aCJ9ByN,oLASO,IAAApF,EAC2C/I,KAAKtB,MAA7CyL,EADHpB,EACGoB,OAAyBC,GAD5BrB,EACW1K,aADXtB,OAAA8E,EAAA,EAAA9E,CAAAgM,EAAA,4BAEG/C,EAAUmE,EAAVnE,MACR,OACI5F,EAAApC,EAAAqC,cAAAe,GAAApD,EAAMqD,KAANtE,OAAAgJ,OAAA,CACIC,MAAOA,GAAS,4BACZ8D,KAFR,CAGIxD,MAAO,CAAEW,aAAc,KAEvB7G,EAAApC,EAAAqC,cAAA+N,GAAApQ,EAAAjB,OAAAgJ,OAAA,GACQqE,EADR,CAEI9D,MAAO,CACHC,MAAO,oBArBL7F,aAApByN,GAKKE,aAAe,CAClBrI,MAAO,6DClBFrF,GAAc,iBAAO,CAC9B7D,UAAW,GACXH,cAAe,cACfiE,OAAQ,OACRC,SAAS,EACT5E,IAAK,GACL+J,MAAO,qBACPtH,MAAO,CACH4P,IAAK,GACLC,IAAK,GACLlI,aAAc,GACdH,YAAa,GACboE,UAAU,EACVkE,UAAW,EACXC,KAAM,KAODzN,GAAW,iBAAO,CAC3B9E,KAAM,cACN+E,KAAM,SACNtE,cAAe,gBCpBbwE,GAAWC,GAAApD,EAAKqD,KAChB8H,GAAQ,QACRuF,GAAgB,eAEhBC,GAAY,MACZC,GAAY,MAIZ/E,GAAM,MAONgF,8MAKF5M,MAAM,CACFoH,SAAU,GAEVC,SAAS,EACTC,QAAS,CACLpH,GAAI,GACJzD,MAAO,OAuBfmH,WAAa,WACTpH,EAAKC,MAAMiD,KAAKmG,eAAe,SAAC4E,EAAKC,GACjC,IAAKD,EAAK,KAAAsB,EACN,GAAIrB,EAAYgC,IAAahC,EAAYiC,IAErC,YADA/K,GAAA7F,EAAQC,MAAM,sEAFZ,IAKEsL,EAAY9K,EAAKwD,MAAjBsH,QALFR,EAMuBtK,EAAKC,MAA1BC,EANFoK,EAMEpK,SAAUgF,EANZoF,EAMYpF,OACZ1H,EAAM0Q,EAAY9C,IAClB7D,EAAQ2G,EAAYxD,IACpBX,EAAemE,EAAY+B,WAC1B/B,EAAY9C,WACZ8C,EAAYxD,WACZwD,EAAY+B,IACnB/P,EAASrC,WAAakN,aAAcD,EAAQpH,GAAIxD,EAASrC,YAAtB0R,EAAA,GAAAjR,OAAA2M,GAAA,EAAA3M,CAAAiR,EAC9BnE,GAAM5N,GADwBc,OAAA2M,GAAA,EAAA3M,CAAAiR,EAE9B7E,GAAQnD,GAFsBjJ,OAAA2M,GAAA,EAAA3M,CAAAiR,EAG9BU,GAAgBlG,GAHczL,OAAA2M,GAAA,EAAA3M,CAAAiR,EAAA,QAAAjR,OAAAC,EAAA,EAAAD,CAAA,GAKxBwM,EAAQ7K,MACRiO,IANwBqB,IASnCrK,GAAUA,EAAOhF,+EAKpB,IACGyJ,EAAsBpI,KAAKtB,MAAMiD,KAAjCyG,kBACAiB,EAAarJ,KAAKiC,MAAlBoH,SACR,OAAOjJ,EAAApC,EAAAqC,cAAA,WACHD,EAAApC,EAAAqC,cAACyO,GAAD/R,OAAAgJ,OAAA,CACIC,MAAO4D,KAAMC,KACTC,MAGA1B,EAAkByB,GAAK,CACnBxB,MAAO,CACH,CAACC,UAAU,EAAMC,QAAS,sCAE9BC,aAAca,EAASQ,KAJ3BzB,CAMIhI,EAAApC,EAAAqC,cAAA4F,GAAAjI,EAAA,CACIkI,YAAY,+BAK5B9F,EAAApC,EAAAqC,cAACyO,GAAD/R,OAAAgJ,OAAA,CACIC,MAAO4D,KAAMT,OACTW,MAGA1B,EAAkBe,GAAO,CACrBX,aAAca,EAASF,KAD3Bf,CAGIhI,EAAApC,EAAAqC,cAAA4F,GAAAjI,EAAA,CACIkI,YAAY,+BAK5B9F,EAAApC,EAAAqC,cAACyO,GAAD/R,OAAAgJ,OAAA,CACIC,MAAO4D,KAAMwC,aACTtC,MAGA1B,EApHA,cAoH+B,CAC3BI,aAAca,EAAQ,aAD1BjB,CAGIhI,EAAApC,EAAAqC,cAAA4F,GAAAjI,EAAA,CACIkI,YAAY,+BAK5B9F,EAAApC,EAAAqC,cAACyO,GAAD/R,OAAAgJ,OAAA,CACIC,MAAO,sBACH8D,MAGA1B,EAAkBsG,GAAe,CAC7BlG,aAAca,EAASqF,KAD3BtG,CAGIhI,EAAApC,EAAAqC,cAAA0O,GAAA/Q,EAAA,CACIkI,YAAY,qBAK5B9F,EAAApC,EAAAqC,cAACyO,GAAD/R,OAAAgJ,OAAA,CACIC,MAAO,sBACH8D,MAGA1B,EAAkBuG,GAAW,CACzBnG,aAAca,EAASsF,KAD3BvG,CAGIhI,EAAApC,EAAAqC,cAAA0O,GAAA/Q,EAAA,CACIkI,YAAY,qBAK5B9F,EAAApC,EAAAqC,cAACyO,GAAD/R,OAAAgJ,OAAA,CACIC,MAAO,sBACH8D,MAGA1B,EAAkBwG,GAAW,CACzBpG,aAAca,EAASuF,KAD3BxG,CAGIhI,EAAApC,EAAAqC,cAAA0O,GAAA/Q,EAAA,CACIkI,YAAY,uBAK5B9F,EAAApC,EAAAqC,cAACyO,GAAD/R,OAAAgJ,OAAA,CACIC,MAAO,4BACH8D,MAGA1B,EAzKH,WAyK+B,CACxBI,aAAca,EAAQ,UAD1BjB,CAGIhI,EAAApC,EAAAqC,cAAAqK,GAAA1M,EAAO2M,MAAP,KACIvK,EAAApC,EAAAqC,cAAAqK,GAAA1M,EAAA,CAAO+D,OAAO,GAAd,QACA3B,EAAApC,EAAAqC,cAAAqK,GAAA1M,EAAA,CAAO+D,OAAO,GAAd,YAKhB3B,EAAApC,EAAAqC,cAACyO,GAAD/R,OAAAgJ,OAAA,CACIC,MAAO,4BACH8D,MAGA1B,EAvLF,YAuL+B,CACzBI,aAAca,EAAQ,WAD1BjB,CAGIhI,EAAApC,EAAAqC,cAAA0O,GAAA/Q,EAAA,CACIuQ,IAAK,IACLrI,YAAY,uBAK5B9F,EAAApC,EAAAqC,cAACyO,GAAD/R,OAAAgJ,OAAA,CACIC,MAAO,wCACH8D,MAGA1B,EArMP,OAqM+B,CACpBI,aAAca,EAAQ,MAD1BjB,CAGIhI,EAAApC,EAAAqC,cAAA0O,GAAA/Q,EAAA,CACIkI,YAAY,qBAK5B9F,EAAApC,EAAAqC,cAACyO,GAAD,KACI1O,EAAApC,EAAAqC,cAAAsG,EAAA3I,EAAA,KACIoC,EAAApC,EAAAqC,cAAA2G,EAAAhJ,EAAA,KACIoC,EAAApC,EAAAqC,cAAAE,EAAAvC,EAAA,CACIwC,QAASR,KAAK6F,WACdhJ,KAAK,WAFT,uEA1LY6B,EAAOuD,GACnC,GAAKA,EAAMqH,QAcP,OAAOrH,EAdS,IAAA8L,EAERzR,EADaoC,EAAbC,SACArC,WACFiN,EAAUU,aAAc3N,GAC9B,MAAO,CACH+M,SAAStM,OAAAC,EAAA,EAAAD,CAAA,GACFwM,EAAQ7K,OADPqP,EAAA,GAAAhR,OAAA2M,GAAA,EAAA3M,CAAAgR,EAEHW,GAAgBnF,EAAQmF,KAFrB3R,OAAA2M,GAAA,EAAA3M,CAAAgR,EAGHlE,GAAMN,EAAQM,KAHX9M,OAAA2M,GAAA,EAAA3M,CAAAgR,EAIH5E,GAAQI,EAAQJ,KAJb4E,IAMRxE,kBA3BgB7I,aAqNjBsO,GAAA5N,GAAApD,EAAK0D,QAAL,CAAgCmN,IC/NzCI,oLASO,IAAAlG,EACsB/I,KAAKtB,MAAzByL,EADFpB,EACEoB,OAAW+E,EADbnS,OAAA8E,EAAA,EAAA9E,CAAAgM,EAAA,YAAAsB,EAEkBF,EAAfnE,aAFH,IAAAqE,EAEW,GAFXA,EAGD3L,EAAiD,GAMrD,OALAA,EAAQwQ,EACJ,iBAAkBA,IAClBxQ,EAAMqD,MAAQmN,EAAM7I,oBACb3H,EAAM2H,cAGbjG,EAAApC,EAAAqC,cAAAe,GAAApD,EAAMqD,KAANtE,OAAAgJ,OAAA,GACQ+D,KADR,CAEIxD,MAAO,CAACW,aAAc,GACtBjB,MAAOA,IACP5F,EAAApC,EAAAqC,cAAA0O,GAAA/Q,EACQU,WAxBGgC,aAArBuO,GAKKZ,aAAe,CAClBrI,MAAO,sBChBR,IAAMrF,GAAc,iBAAO,CAC9B7D,UAAW,GACXH,cAAe,cACfiE,OAAQ,OACRC,SAAS,EACT5E,IAAK,GACL+J,MAAO,2BACPmJ,oBAAqB,aACrBzQ,MAAO,CACHwH,YAAa,CAAC,2BAAQ,+BAOjBlF,GAAW,iBAAO,CAC3B9E,KAAM,cACN+E,KAAM,WACNtE,cAAe,8CCfbwE,GAAWC,GAAApD,EAAKqD,KAehB+N,8MAKFnN,MAAM,CACFoH,SAAU,CACN3K,MAAO,IAEX4K,SAAS,EACTC,QAAS,CACLpH,GAAI,GACJzD,MAAO,OAsBfmH,WAAa,WACTpH,EAAKC,MAAMiD,KAAKmG,eAAe,SAAC4E,EAAKC,GACjC,IAAKD,EAAK,CACNjO,EAAKsE,SAAS,CACVsG,SAAStM,OAAAC,EAAA,EAAAD,CAAA,GACF4P,GAEPrD,SAAS,IALP,IAOEC,EAAY9K,EAAKwD,MAAjBsH,QACMsD,EAAcF,EAArBjO,MARDqK,EASuBtK,EAAKC,MAA1BC,EATFoK,EASEpK,SAAUgF,EATZoF,EASYpF,OACZ0F,EAAW,CACbpN,IAAK0Q,EAAY1Q,IACjB+J,MAAO2G,EAAY3G,OAAS,GAC5BtH,MAAM3B,OAAAC,EAAA,EAAAD,CAAA,GACCwM,EAAQ7K,MADV,CAEDwH,YAAa,GACb4H,OAAQjB,EAAWiB,OACnBD,SAAUhB,EAAWwC,eAAiB,CAAEvB,OAAQjB,EAAWwC,gBAAmBxC,EAAWgB,YAG7FhB,EAAW3G,cACXmD,EAAS3K,MAAMwH,YAAc2G,EAAW3G,YAAYoJ,MAAM,MAE9D3Q,EAASrC,WAAakN,aAAcD,EAAQpH,GAAIxD,EAASrC,WAAY+M,GACrE1F,GAAUA,EAAOhF,+EAKpB,IAAA4M,EACwDvL,KAAKtB,MAAMiD,KAAhEyG,EADHmD,EACGnD,kBAAmB+C,EADtBI,EACsBJ,cAAeC,EADrCG,EACqCH,eADrCnI,EAE+CjD,KAAKiC,MAAjDoH,EAFHpG,EAEGoG,SAA4BkG,EAF/BtM,EAEaoG,SAAW3K,MAC7B,OAAO0B,EAAApC,EAAAqC,cAAA,WACHD,EAAApC,EAAAqC,cAACmP,GAADzS,OAAAgJ,OAAA,CACIC,MAAO4D,KAAMC,KACTC,MAGA1B,EAAkB,MAAO,CACrBC,MAAO,CACH,CAACC,UAAU,EAAMC,QAAO,qBAAAnF,OAAQwG,KAAMC,OAE1CrB,aAAca,EAAQ,KAJ1BjB,CAMIhI,EAAApC,EAAAqC,cAAA4F,GAAAjI,EAAA,CACIkI,YAAY,qCAM5B9F,EAAApC,EAAAqC,cAACmP,GAADzS,OAAAgJ,OAAA,CACIC,MAAO4D,KAAMT,OACTW,MAGA1B,EAAkB,QAAS,CACvBI,aAAca,EAAQ,OAD1BjB,CAGIhI,EAAApC,EAAAqC,cAAA4F,GAAAjI,EAAA,CACIkI,YAAY,kDAK5B9F,EAAApC,EAAAqC,cAACmP,GAADzS,OAAAgJ,OAAA,CACIC,MAAO4D,KAAMwC,aACTtC,MAGA1B,EAAkB,oBAAqB,CACnCC,MAAO,CACH,CACIoH,UAAW,SAACC,EAAM3N,EAAO4N,GAChB5N,GACD4N,IAEA5N,IAAU,uBAAqB6N,KAAK7N,IACpC4N,EAASD,EAAKnH,SAElBoH,KAEJpH,QAAS,sDAGjBC,aAAc+G,EAAU,YAAgBA,EAAU,YAAcM,KAAK,KAAO,qDAfhFzH,CAiBIhI,EAAApC,EAAAqC,cAAA4F,GAAAjI,EAAA,CACIkI,YAAY,2EAK5B9F,EAAApC,EAAAqC,cAACmP,GAADzS,OAAAgJ,OAAA,CACIC,MAAO4D,KAAMkG,aACThG,MAGA1B,EAAkB,eAAgB,CAC9BC,MAAO,CACH,CACIoH,UAAW,SAACC,EAAM3N,EAAO4N,GAChB5N,GACD4N,IAEA5N,GAASoJ,EAAc,cAAgB,sBAAoByE,KAAK7N,IAChE4N,EAASD,EAAKnH,SAElBoH,KAEJpH,QAAS,qDAGjBC,aAAc+G,EAAU,QAAV,GAAAnM,OAnKlB,aAmKkB,KAAAA,OAlKlB,aAmJAgF,CAiBIhI,EAAApC,EAAAqC,cAAA4F,GAAAjI,EAAA,CACIkI,YAAW,qBAAA9C,OAtKnB,aAsKmB,KAAAA,OArKnB,gBA0KRhD,EAAApC,EAAAqC,cAACmP,GAADzS,OAAAgJ,OAAA,CACIC,MAAO4D,KAAMgE,WACT9D,MAGA1B,EAAkB,iBAAkB,CAChC2H,cAAe,UACfvH,cAAe+G,EAAU,WAAuC,IAAzBA,EAAU,UAAwBA,EAAU,UAFvFnH,CAIIhI,EAAApC,EAAAqC,cAAA2P,GAAAhS,EAAA,CACImI,SAAU,SAACpE,GAIHqJ,EAHCrJ,EAGc,CAACkO,eAAA,GAAA7M,OAzLhC,aAyLgC,KAAAA,OAxLhC,aAsL+B,CAAC6M,eAvLhC,oBAiMJ9E,EAAc,mBAAqB/K,EAAApC,EAAAqC,cAACmP,GAADzS,OAAAgJ,OAAA,CAC/BC,MAAO4D,KAAMsG,aACTpG,MAGA1B,EAAkB,uBAAwB,CACtCI,aAAgD,kBAA1B+G,EAAU,SAA2BA,EAAU,SAAWzB,OAAS,IAD7F1F,CAGIhI,EAAApC,EAAAqC,cAAA4F,GAAAjI,EAAA,CACIkI,YAAW,qBAAA9C,OAzMvB,gBA+MRhD,EAAApC,EAAAqC,cAACmP,GAAD,KACIpP,EAAApC,EAAAqC,cAAAsG,EAAA3I,EAAA,KACIoC,EAAApC,EAAAqC,cAAA2G,EAAAhJ,EAAA,KACIoC,EAAApC,EAAAqC,cAAAE,EAAAvC,EAAA,CACIwC,QAASR,KAAK6F,WACdhJ,KAAK,WAFT,uEArLY6B,EAAOuD,GACnC,GAAKA,EAAMqH,QAaP,OAAOrH,EAbS,IAAA+H,EAER1N,EADaoC,EAAbC,SACArC,WACFiN,EAAUU,aAAc3N,GAC9B,MAAO,CACH+M,UAAQW,EAAA,GAAAjN,OAAA2M,GAAA,EAAA3M,CAAAiN,EAlCZ,MAmCeT,EAAO,KADVxM,OAAA2M,GAAA,EAAA3M,CAAAiN,EAjCV,QAmCeT,EAAO,OAFZxM,OAAA2M,GAAA,EAAA3M,CAAAiN,EAAA,QAGGT,EAAQ7K,OAHXsL,GAKRT,kBA3BgB7I,aAiNjByP,GAAA/O,GAAApD,EAAK0D,QAAL,CAAsC0N,IC5N/CgB,GAAchC,GAAApQ,EAAWoS,YAEzBC,oLAMO,IAAAtH,EAC6B/I,KAAKtB,MAA/ByL,EADHpB,EACGoB,OAAWC,EADdrN,OAAA8E,EAAA,EAAA9E,CAAAgM,EAAA,YAAAsB,EAEkBF,EAAfnE,aAFH,IAAAqE,EAEW,GAFXA,EAGL,OACIjK,EAAApC,EAAAqC,cAAAe,GAAApD,EAAMqD,KAANtE,OAAAgJ,OAAA,GACQ+D,KADR,CAEIxD,MAAO,CAAEW,aAAc,GACvBjB,MAAOA,IAEP5F,EAAApC,EAAAqC,cAAC+P,GACOhG,WAhBG1J,aCVdC,GAAc,iBAAO,CAC9B7D,UAAW,GACXH,cAAe,WACfiE,OAAQ,OACRC,SAAS,EACTnC,MAAO,CACHzC,IAAK,GACLqU,KAAM,GACNpK,YAAa,MAORlF,GAAW,iBAAO,CAC3B9E,KAAM,WACN+E,KAAM,OACNtE,cAAe,aCfbwE,GAAWC,GAAApD,EAAKqD,KAYDkP,8MAKjBtO,MAAM,CACFoH,SAAU,GAGVC,SAAS,EACTC,QAAS,CACLpH,GAAI,GACJzD,MAAO,OAuBfmH,WAAa,WAAM,IAAA5C,EACexE,EAAKwD,MAA3BoH,EADOpG,EACPoG,SAAUE,EADHtG,EACGsG,QADHR,EAEctK,EAAKC,MAA1BC,EAFOoK,EAEPpK,SAAUgF,EAFHoF,EAEGpF,OAClBhF,EAASrC,WAAakN,aAAcD,EAAQpH,GAAIxD,EAASrC,WAAtBS,OAAAC,EAAA,EAAAD,CAAA,GAC5BsM,EAD4B,CAE/B3K,MAAM3B,OAAAC,EAAA,EAAAD,CAAA,GACCwM,EAAQ7K,MACR2K,MAGX1F,GAAUA,EAAOhF,MAGrB8K,aAAe,SAACxN,EAAK8H,GAAM,IACfsF,EAAa5K,EAAKwD,MAAlBoH,SACFtH,EAAQgC,EAAEC,OAAOjC,MACvBtD,EAAKsE,SAAS,CACVsG,SAAStM,OAAAC,EAAA,EAAAD,CAAA,GACFsM,EADCtM,OAAA2M,GAAA,EAAA3M,CAAA,GAEHd,EAAM8F,IAEXuH,SAAS,6EAIR,IACGD,EAAarJ,KAAKiC,MAAlBoH,SACR,OAAOjJ,EAAApC,EAAAqC,cAAA,WACHD,EAAApC,EAAAqC,cAACmQ,GAADzT,OAAAgJ,OAAA,CACIC,MAAO4D,KAAMC,KACTC,MAEJ1J,EAAApC,EAAAqC,cAAA4F,GAAAjI,EAAA,CACI+D,MAAOsH,EAAQ,IACfnD,YAAY,0BACZC,SAAUnG,KAAKyJ,aAAaM,KAAK/J,KAhFzC,UAmFAI,EAAApC,EAAAqC,cAACmQ,GAADzT,OAAAgJ,OAAA,CACIC,MAAO4D,KAAMT,OACTW,MAEJ1J,EAAApC,EAAAqC,cAAA4F,GAAAjI,EAAA,CACI+D,MAAOsH,EAAQ,MACfnD,YAAY,kCACZC,SAAUnG,KAAKyJ,aAAaM,KAAK/J,KAzFvC,YA4FFI,EAAApC,EAAAqC,cAACmQ,GAADzT,OAAAgJ,OAAA,CACIC,MAAO4D,KAAMwC,aACTtC,MAEJ1J,EAAApC,EAAAqC,cAAA4F,GAAAjI,EAAA,CACI+D,MAAOsH,EAAQ,YACfnD,YAAY,gEACZC,SAAUnG,KAAKyJ,aAAaM,KAAK/J,KAjGjC,kBAoGRI,EAAApC,EAAAqC,cAACmQ,GAADzT,OAAAgJ,OAAA,CACIC,MAAO,4BACH8D,MAEJ1J,EAAApC,EAAAqC,cAAA4F,GAAAjI,EAAA,CACI+D,MAAOsH,EAAQ,KACfnD,YAAY,uBACZC,SAAUnG,KAAKyJ,aAAaM,KAAK/J,KA5GxC,WA+GDI,EAAApC,EAAAqC,cAACmQ,GAAD,KACIpQ,EAAApC,EAAAqC,cAAAsG,EAAA3I,EAAA,KACIoC,EAAApC,EAAAqC,cAAA2G,EAAAhJ,EAAA,KACIoC,EAAApC,EAAAqC,cAAAE,EAAAvC,EAAA,CACIwC,QAASR,KAAK6F,WACdhJ,KAAK,WAFT,uEA1FY6B,EAAOuD,GACnC,GAAKA,EAAMqH,QAcP,OAAOrH,EAdS,IAAA+H,EAER1N,EADaoC,EAAbC,SACArC,WACFiN,EAAUU,aAAc3N,GAC9B,MAAO,CACH+M,UAAQW,EAAA,GAAAjN,OAAA2M,GAAA,EAAA3M,CAAAiN,EAhCZ,MAiCeT,EAAO,KADVxM,OAAA2M,GAAA,EAAA3M,CAAAiN,EA9BX,OAgCeT,EAAO,MAFXxM,OAAA2M,GAAA,EAAA3M,CAAAiN,EA/BV,QAkCeT,EAAO,OAHZxM,OAAA2M,GAAA,EAAA3M,CAAAiN,EA7BJ,cAiCeT,EAAO,aAJlBS,GAMRT,kBA5B4B7I,aCXpC+P,iBASFC,oLASO,IAAA3H,EAC0C/I,KAAKtB,MAA5CsH,EADH+C,EACG/C,MAAwBoE,GAD3BrB,EACU1K,aADVtB,OAAA8E,EAAA,EAAA9E,CAAAgM,EAAA,2BAEL,OACI3I,EAAApC,EAAAqC,cAAAe,GAAApD,EAAMqD,KAANtE,OAAAgJ,OAAA,GACQ+D,KADR,CAEI9D,MAAOA,EACPM,MAAO,CAAEW,aAAc,KAEvB7G,EAAApC,EAAAqC,cAACoQ,GAAD1T,OAAAgJ,OAAA,CAAUO,MAAO,CAAEC,MAAO,UAAe6D,YAjBjC1J,aAAlBgQ,GAKKrC,aAAe,CAClBrI,MAAO,4BCnBR,OAAMrF,GAAc,iBAAO,CAC9B7D,UAAW,GACXH,cAAe,QACfiE,OAAQ,OACRC,SAAS,EACTwF,aAAc,EACdsK,YAAY,EACZ1U,IAAK,SACL+J,MAAO,eACP4G,QAAS,CAAC,CAAC7K,MAAO,EAAGuI,UAAU,EAAOsG,OAAQ,EAAGtL,KAAM,gBACnD,CAAEvD,MAAO,EAAGuI,UAAU,EAAOsG,OAAQ,EAAGtL,KAAM,mBAOzCtE,GAAW,iBAAO,CAC3B9E,KAAM,QACN+E,KAAM,OACNtE,cAAe,kDCjBbkU,GAAQ,QACR1H,GAAQ,QACR2H,GAAO,OACPC,GAAQ,UACRC,GAAW,WACXC,GAAU,UACVpH,GAAM,MACNqH,GAAU,SACVnM,GAAiB,CACnBC,SAAU,CACN0G,GAAI,CAAEzG,KAAM,IACZ0G,GAAI,CAAE1G,KAAM,IAEhBC,WAAY,CACRwG,GAAI,CAAEzG,KAAM,IACZ0G,GAAI,CAAE1G,KAAM,MAQCkM,kNAKjBlP,MAAQ,CACJoH,UAAQW,EAAA,GAAAjN,OAAA2M,GAAA,EAAA3M,CAAAiN,EACHiH,GAAU,EAAApT,EAAA,GAAAd,OAAA2M,GAAA,EAAA3M,CAAAc,EACNmT,IAAW,GADLjU,OAAA2M,GAAA,EAAA3M,CAAAc,EAENgT,GAAQ,IAFF9T,OAAA2M,GAAA,EAAA3M,CAAAc,EAGNiT,GAAO,IAHD/T,OAAA2M,GAAA,EAAA3M,CAAAc,EAINqT,GAAU,GAJJrT,KADPd,OAAA2M,GAAA,EAAA3M,CAAAiN,EAOHb,GAAQ,IAPLpM,OAAA2M,GAAA,EAAA3M,CAAAiN,EAQHH,GAAM,IARH9M,OAAA2M,GAAA,EAAA3M,CAAAiN,EAAA,cASQ,GATRjN,OAAA2M,GAAA,EAAA3M,CAAAiN,EAAA,eAUU,GAVVA,GAYRV,SAAS,EACT8H,WAAY,GAGZ7H,QAAS,CACLpH,GAAI,GACJzD,MAAO,OAIfoC,QAAU,CACN,CACIjC,MAAO,wBACPkC,UAAW,QACX9E,IAAK,QACLoJ,OAAQ,SAAC7I,EAAM+I,EAAQ3D,GAAf,OAAyBxB,EAAApC,EAAAqC,cAAA4F,GAAAjI,EAAA,CAC7B+D,MAAOwD,EAAOsL,IACd3K,YAAY,kCACZC,SAAU1H,EAAKgL,aAAaM,KAAlBhN,OAAAsU,GAAA,EAAAtU,CAAA0B,GAA6BoS,GAAOjP,OAGtD,CACI/C,MAAO,iCACPkC,UAAW,OACX9E,IAAK,OACLoJ,OAAQ,SAAC7I,EAAM+I,EAAQ3D,GAAf,OAAyBxB,EAAApC,EAAAqC,cAAA4F,GAAAjI,EAAA,CAC7B+D,MAAOwD,EAAOuL,IACd5K,YAAY,kCACZC,SAAU1H,EAAKgL,aAAaM,KAAlBhN,OAAAsU,GAAA,EAAAtU,CAAA0B,GAA6BqS,GAAMlP,OAerD,CACI/C,MAAO,2BACPkC,UAAW,WACX9E,IAAK,WACLoJ,OAAQ,SAAC7I,EAAM+I,EAAQ3D,GAAf,OACJxB,EAAApC,EAAAqC,cAAA2P,GAAAhS,EAAA,CACIsT,eAAgB/L,EAAOyL,IACvBO,gBAAgB,SAChBC,kBAAkB,SAClBrL,SAAU1H,EAAKgL,aAAaM,KAAlBhN,OAAAsU,GAAA,EAAAtU,CAAA0B,GAA6BuS,GAAUpP,OAG7D,CACI/C,MAAO,eACPkC,UAAW,SACX9E,IAAK,SACLoJ,OAAQ,SAAC7I,EAAM+I,EAAQ3D,GAAf,OACJnD,EAAKwD,MAAMoH,SAASuD,QAAQhQ,OAAS,EAC/BwD,EAAApC,EAAAqC,cAAA2G,EAAAhJ,EAAA,KACEoC,EAAApC,EAAAqC,cAAA6L,EAAAlO,EAAA,CAAMnB,KAAK,QAAQ2D,QAAS,WAAQ/B,EAAKgT,qBAAqB7P,OAEhExB,EAAApC,EAAAqC,cAAAD,EAAApC,EAAA8H,SAAA,WAkClBD,WAAa,WAAM,IAAA5C,EACexE,EAAKwD,MAA3BoH,EADOpG,EACPoG,SAAUE,EADHtG,EACGsG,QADHR,EAEctK,EAAKC,MAA1BC,EAFOoK,EAEPpK,SAAUgF,EAFHoF,EAEGpF,OAClB,GAAK0F,EAASrD,MAAd,CAMA,IAAK,IAAI0L,EAAI,EAAGA,EAAIrI,EAASuD,QAAQhQ,OAAQ8U,IAAK,CAE9C,IADarI,EAASuD,QAAQ8E,GACpBZ,IAIN,YAHArS,EAAKsE,SAAS,CACVqO,WAAY,qDAKxBzS,EAASrC,WAAakN,aAAcD,EAAQpH,GAAIxD,EAASrC,WAAY+M,GACrE1F,GAAUA,EAAOhF,QAfbF,EAAKsE,SAAS,CACVqO,WAAY,kDAoBxB3H,aAAe,SAACkI,EAAS/P,EAAemC,GAAM,IAClCsF,EAAa5K,EAAKwD,MAAlBoH,SACFtH,EAAqB,mBAANgC,EAAkBA,EAAIA,EAAEC,OAAOjC,MACpD,OAAQ4P,GACJ,KAAKxI,GACDE,EAASrD,MAAQjE,EACjB,MACJ,KAAK8H,GACDR,EAASpN,IAAM8F,EACf,MACJ,KAAK+O,GACDzH,EAASuD,QAAQhL,GAAO+P,GAAW5P,EACnC,MACJ,KAAKgP,GACL,KAAKC,GAGL,QACI3H,EAASuD,QAAQhL,GAAO+P,GAAW5P,EAG3CtD,EAAKsE,SAAS,CACVsG,WACAC,SAAS,OAOjBsI,eAAiB,WAAY,IAAAC,EACjBxI,EAAa5K,EAAKwD,MAAlBoH,SACRA,EAASuD,QAAQkF,MAAjBD,EAAA,GAAA9U,OAAA2M,GAAA,EAAA3M,CAAA8U,EACKb,IAAW,GADhBjU,OAAA2M,GAAA,EAAA3M,CAAA8U,EAGKhB,GAAQ,IAHb9T,OAAA2M,GAAA,EAAA3M,CAAA8U,EAIKf,GAAO,IAJZ/T,OAAA2M,GAAA,EAAA3M,CAAA8U,EAKKX,GAAU7H,EAASuD,QAAQvD,EAASuD,QAAQhQ,OAAS,GAAGsU,IAAW,GALxEW,IAOApT,EAAKsE,SAAS,CACVsG,WACAC,SAAS,OAOjBmI,qBAAuB,SAAC7P,GAAU,IACtByH,EAAa5K,EAAKwD,MAAlBoH,SACRA,EAASuD,QAAQ9J,OAAOlB,EAAO,GAC/BnD,EAAKsE,SAAS,CACVsG,gBAOR0I,iBAAmB,WACftT,EAAKsE,SAAS,CACVqO,WAAY,8EAIX,IAAA3N,EAC4BzD,KAAKiC,MAA9BoH,EADH5F,EACG4F,SAAU+H,EADb3N,EACa2N,WAClB,OAAOhR,EAAApC,EAAAqC,cAAAD,EAAApC,EAAA8H,SAAA,KAECsL,EACMhR,EAAApC,EAAAqC,cAAA2R,GAAAhU,EAAA,CAAOuK,QAAS6I,EACdvU,KAAK,QACLoV,UAAQ,EACRC,QAASlS,KAAK+R,mBAEhB,KAEV3R,EAAApC,EAAAqC,cAAA,WACAD,EAAApC,EAAAqC,cAAAe,GAAApD,EAAMqD,KAANtE,OAAAgJ,OAAA,GACQhB,GADR,CAEIiB,MAAO4D,KAAMT,QAEb/I,EAAApC,EAAAqC,cAAA4F,GAAAjI,EAAA,CACI+D,MAAOsH,EAASrD,MAChBE,YAAY,2BACZC,SAAUnG,KAAKyJ,aAAaM,KAAK/J,KAAMmJ,GAAO,MAGtD/I,EAAApC,EAAAqC,cAAAe,GAAApD,EAAMqD,KAANtE,OAAAgJ,OAAA,GACQhB,GADR,CAEIiB,MAAO4D,KAAMC,MAEbzJ,EAAApC,EAAAqC,cAAA4F,GAAAjI,EAAA,CACI+D,MAAOsH,EAASpN,IAChBiK,YAAY,yBACZC,SAAUnG,KAAKyJ,aAAaM,KAAK/J,KAAM6J,GAAK,MAGpDzJ,EAAApC,EAAAqC,cAAAmG,EAAAxI,EAAA,CAAO4S,OAAO,SAASvO,WAAYgH,EAASuD,QAAS9L,QAASd,KAAKc,QAAS2F,UAAQ,EAACC,YAAY,IACjGtG,EAAApC,EAAAqC,cAAA,WACAD,EAAApC,EAAAqC,cAAAsG,EAAA3I,EAAA,CAAKnB,KAAK,OAAOgK,QAAQ,iBACrBzG,EAAApC,EAAAqC,cAAA2G,EAAAhJ,EAAA,KACIoC,EAAApC,EAAAqC,cAAAE,EAAAvC,EAAA,CAAQwC,QAASR,KAAK4R,eAAgB/U,KAAK,WAA3C,uBAqBJuD,EAAApC,EAAAqC,cAAA2G,EAAAhJ,EAAA,KACIoC,EAAApC,EAAAqC,cAAAE,EAAAvC,EAAA,CAAQwC,QAASR,KAAK6F,WAAYhJ,KAAK,WAAvC,sEAlLgB6B,EAAOuD,GACnC,GAAKA,EAAMqH,QAqBP,OAAOrH,EArBS,IAAAkQ,EAAAC,EAER9V,EADaoC,EAAbC,SACArC,WACFiN,EAAUU,aAAc3N,GAC9B,MAAO,CACH+M,UAAQ+I,EAAA,GAAArV,OAAA2M,GAAA,EAAA3M,CAAAqV,EACHnB,GAAU1H,EAAQqD,SAAW,EAAAuF,EAAA,GAAApV,OAAA2M,GAAA,EAAA3M,CAAAoV,EACzBnB,IAAW,GADcjU,OAAA2M,GAAA,EAAA3M,CAAAoV,EAGzBtB,GAAQ,IAHiB9T,OAAA2M,GAAA,EAAA3M,CAAAoV,EAIzBrB,GAAO,IAJkB/T,OAAA2M,GAAA,EAAA3M,CAAAoV,EAKzBjB,GAAU,GALeiB,KAD1BpV,OAAA2M,GAAA,EAAA3M,CAAAqV,EAQHjJ,GAAQI,EAAQvD,OAAS,IARtBjJ,OAAA2M,GAAA,EAAA3M,CAAAqV,EASHvI,GAAMN,EAAQtN,KAAO,IATlBc,OAAA2M,GAAA,EAAA3M,CAAAqV,EAAA,aAUQnQ,EAAMoH,SAASsH,YAVvB5T,OAAA2M,GAAA,EAAA3M,CAAAqV,EAAA,eAWU7I,EAAQlD,cAAgBpE,EAAMoH,SAAShD,cAXjD+L,GAaR7I,kBA1G4B7I,aClBtC2R,8MAOFpQ,MAAM,CACFoE,aAAc5H,EAAKC,MAAMyL,OAAO9D,uGAGViM,GACtBtS,KAAK+C,SAAS,CACVsD,aAAciM,EAAUnI,OAAO9D,gDAI9B,IAAAvB,EAAA9E,KACL,OACII,EAAApC,EAAAqC,cAAAe,GAAApD,EAAMqD,KAANtE,OAAAgJ,OAAA,GACQ+D,KADR,CAEIxD,MAAO,CAAEW,aAAc,GACvBjB,MAAOhG,KAAKtB,MAAMyL,OAAOnE,QAEzB5F,EAAApC,EAAAqC,cAAAqK,GAAA1M,EAAO2M,MAAP,CAAa5I,MAAO/B,KAAKiC,MAAMoE,aAAcF,SAAU,SAACpC,GACpDe,EAAK/B,SAAS,CACVsD,aAActC,EAAEC,OAAOjC,UAIvB/B,KAAKtB,MAAMyL,OAAOyC,QAAQrQ,IAAI,SAACC,GAC3B,OAAO4D,EAAApC,EAAAqC,cAAA,OAAKiG,MAAO,CAACiM,QAAS,gBAAiBtW,IAAKO,EAAKoU,OAAQpQ,QAAS,SAACuD,GACtEA,EAAEyO,oBACHpS,EAAApC,EAAAqC,cAAAqK,GAAA1M,EAAA,CAAO+D,MAAOvF,EAAKuF,MAAOuI,SAAU9N,EAAK8N,UAAW9N,EAAK8I,kBAjCnE5E,aCRRC,GAAc,iBAAO,CAC9B7D,UAAW,GACXH,cAAe,WACfiE,OAAQ,OACRC,SAAS,EACT+L,QAAS,CAAC,CACNlO,MAAO,CACH4L,UAAU,EACVrG,SAAS,EACTlC,MAAO,IAEXuD,KAAM,GACNsL,OAAQ,IAEZ5K,MAAO,GACP/J,IAAK,KAMI+E,GAAW,iBAAO,CAC3B9E,KAAM,WACN+E,KAAM,eACNtE,cAAe,uBCpBbkU,GAAQ,QACR1H,GAAQ,QACR2H,GAAO,OACPC,GAAQ,UACRC,GAAW,WACXC,GAAU,UACVpH,GAAM,MACNqH,GAAU,SAOKC,oNAKjBlP,MAAQ,CACJoH,UAAQW,EAAA,GAAAjN,OAAA2M,GAAA,EAAA3M,CAAAiN,EACHiH,GAAU,EAAApT,EAAA,CACPa,OAAK+T,EAAA,GAAA1V,OAAA2M,GAAA,EAAA3M,CAAA0V,EACAzB,IAAW,GADXjU,OAAA2M,GAAA,EAAA3M,CAAA0V,EAEA1B,IAAQ,GAFRhU,OAAA2M,GAAA,EAAA3M,CAAA0V,EAGA5B,GAAQ,IAHR4B,IADE1V,OAAA2M,GAAA,EAAA3M,CAAAc,EAMNiT,GAAO,IAND/T,OAAA2M,GAAA,EAAA3M,CAAAc,EAONqT,GAAU,GAPJrT,KADPd,OAAA2M,GAAA,EAAA3M,CAAAiN,EAUHb,GAAQ,IAVLpM,OAAA2M,GAAA,EAAA3M,CAAAiN,EAWHH,GAAM,IAXHG,GAaRV,SAAS,EACT8H,WAAY,GACZ7H,QAAS,CACLpH,GAAI,GACJzD,MAAO,OAIfoC,QAAU,CACN,CACIjC,MAAO,wBACPkC,UAAW,QACX9E,IAAK,QACLoJ,OAAQ,SAAC7I,EAAM+I,EAAQ3D,GAAf,OAAyBxB,EAAApC,EAAAqC,cAAA4F,GAAAjI,EAAA,CAC7B+D,MAAOwD,EAAO7G,MAAMmS,IACpB3K,YAAY,kCACZC,SAAU1H,EAAKgL,aAAaM,KAAlBhN,OAAAsU,GAAA,EAAAtU,CAAA0B,GAA6BoS,GAAOjP,OAGtD,CACI/C,MAAO,iCACPkC,UAAW,OACX9E,IAAK,OACLoJ,OAAQ,SAAC7I,EAAM+I,EAAQ3D,GAAf,OAAyBxB,EAAApC,EAAAqC,cAAA4F,GAAAjI,EAAA,CAC7B+D,MAAOwD,EAAOuL,IACd5K,YAAY,kCACZC,SAAU1H,EAAKgL,aAAaM,KAAlBhN,OAAAsU,GAAA,EAAAtU,CAAA0B,GAA6BqS,GAAMlP,OAGrD,CACI/C,MAAO,uCACPkC,UAAW,QACX9E,IAAK,QACLoJ,OAAQ,SAAC7I,EAAM+I,EAAQ3D,GAAf,OACJxB,EAAApC,EAAAqC,cAAA2P,GAAAhS,EAAA,CACIsT,eAAgB/L,EAAOwL,IACvBQ,gBAAgB,SAChBC,kBAAkB,SAClBrL,SAAU1H,EAAKgL,aAAaM,KAAlBhN,OAAAsU,GAAA,EAAAtU,CAAA0B,GAA6BsS,GAAOnP,OAG1D,CACI/C,MAAO,2BACPkC,UAAW,WACX9E,IAAK,WACLoJ,OAAQ,SAAC7I,EAAM+I,EAAQ3D,GAAf,OACJxB,EAAApC,EAAAqC,cAAA2P,GAAAhS,EAAA,CACIsT,eAAgB/L,EAAOyL,IACvBO,gBAAgB,SAChBC,kBAAkB,SAClBrL,SAAU1H,EAAKgL,aAAaM,KAAlBhN,OAAAsU,GAAA,EAAAtU,CAAA0B,GAA6BuS,GAAUpP,OAG7D,CACI/C,MAAO,eACPkC,UAAW,SACX9E,IAAK,SACLoJ,OAAQ,SAACC,EAAMC,EAAQ3D,GAAf,OACJnD,EAAKwD,MAAMoH,SAASuD,QAAQhQ,OAAS,EAC/BwD,EAAApC,EAAAqC,cAAA2G,EAAAhJ,EAAA,KACEoC,EAAApC,EAAAqC,cAAA6L,EAAAlO,EAAA,CAAMnB,KAAK,QAAQ2D,QAAS,WAAQ/B,EAAKgT,qBAAqB7P,OAEhExB,EAAApC,EAAAqC,cAAAD,EAAApC,EAAA8H,SAAA,WAkClBD,WAAa,WAAM,IAAA5C,EACexE,EAAKwD,MAA3BoH,EADOpG,EACPoG,SAAUE,EADHtG,EACGsG,QADHR,EAEctK,EAAKC,MAA1BC,EAFOoK,EAEPpK,SAAUgF,EAFHoF,EAEGpF,OAClB,GAAK0F,EAASrD,MAAd,CAMA,IAAK,IAAI0L,EAAI,EAAGA,EAAIrI,EAASuD,QAAQhQ,OAAQ8U,IAAK,CAE9C,IADarI,EAASuD,QAAQ8E,GACpBZ,IAIN,YAHArS,EAAKsE,SAAS,CACVqO,WAAY,qDAKxBzS,EAASrC,WAAakN,aAAcD,EAAQpH,GAAIxD,EAASrC,WAAY+M,GACrE1F,GAAUA,EAAOhF,QAfbF,EAAKsE,SAAS,CACVqO,WAAY,kDAoBxB3H,aAAe,SAACkI,EAAS/P,EAAemC,GAAM,IAClCsF,EAAa5K,EAAKwD,MAAlBoH,SACFtH,EAAqB,mBAANgC,EAAkBA,EAAIA,EAAEC,OAAOjC,MACpD,OAAQ4P,GACJ,KAAKxI,GACDE,EAASrD,MAAQjE,EACjB,MACJ,KAAK8H,GACDR,EAASpN,IAAM8F,EACf,MACJ,KAAK+O,GACDzH,EAASuD,QAAQhL,GAAO+P,GAAW5P,EACnC,MACJ,KAAKgP,GACL,KAAKC,GAGL,QACI3H,EAASuD,QAAQhL,GAAOlD,MAAMiT,GAAW5P,EAGjDtD,EAAKsE,SAAS,CACVsG,WACAC,SAAS,OAOjBsI,eAAiB,WAAY,IAAAc,EAAAb,EACjBxI,EAAa5K,EAAKwD,MAAlBoH,SACRA,EAASuD,QAAQkF,MAAjBD,EAAA,CACInT,OAAKgU,EAAA,GAAA3V,OAAA2M,GAAA,EAAA3M,CAAA2V,EACA1B,IAAW,GADXjU,OAAA2M,GAAA,EAAA3M,CAAA2V,EAEA3B,IAAQ,GAFRhU,OAAA2M,GAAA,EAAA3M,CAAA2V,EAGA7B,GAAQ,IAHR6B,IADT3V,OAAA2M,GAAA,EAAA3M,CAAA8U,EAMKf,GAAO,IANZ/T,OAAA2M,GAAA,EAAA3M,CAAA8U,EAOKX,GAAU7H,EAASuD,QAAQvD,EAASuD,QAAQhQ,OAAS,GAAGsU,IAAW,GAPxEW,IASApT,EAAKsE,SAAS,CACVsG,WACAC,SAAS,OAOjBmI,qBAAuB,SAAC7P,GAAU,IACtByH,EAAa5K,EAAKwD,MAAlBoH,SACRA,EAASuD,QAAQ9J,OAAOlB,EAAO,GAC/BnD,EAAKsE,SAAS,CACVsG,gBAOR0I,iBAAmB,WACftT,EAAKsE,SAAS,CACVqO,WAAY,8EAIX,IAAA3N,EAC4BzD,KAAKiC,MAA9BoH,EADH5F,EACG4F,SAAU+H,EADb3N,EACa2N,WAClB,OAAOhR,EAAApC,EAAAqC,cAAAD,EAAApC,EAAA8H,SAAA,KAECsL,EACMhR,EAAApC,EAAAqC,cAAA2R,GAAAhU,EAAA,CAAOuK,QAAS6I,EACdvU,KAAK,QACLoV,UAAQ,EACRC,QAASlS,KAAK+R,mBAEhB,KAEV3R,EAAApC,EAAAqC,cAAA,WACAD,EAAApC,EAAAqC,cAACsS,GAAA,EAAKtR,KAANtE,OAAAgJ,OAAA,CACIC,MAAO4D,KAAMT,OACTW,MAEJ1J,EAAApC,EAAAqC,cAAA4F,GAAAjI,EAAA,CACI+D,MAAOsH,EAASrD,MAChBE,YAAY,2BACZC,SAAUnG,KAAKyJ,aAAaM,KAAK/J,KAAMmJ,GAAO,MAGtD/I,EAAApC,EAAAqC,cAACsS,GAAA,EAAKtR,KAANtE,OAAAgJ,OAAA,CACIC,MAAO4D,KAAMC,KACTC,MAEJ1J,EAAApC,EAAAqC,cAAA4F,GAAAjI,EAAA,CACI+D,MAAOsH,EAASpN,IAChBiK,YAAY,yBACZC,SAAUnG,KAAKyJ,aAAaM,KAAK/J,KAAM6J,GAAK,MAGpDzJ,EAAApC,EAAAqC,cAAAmG,EAAAxI,EAAA,CAAO4S,OAAO,SAASvO,WAAYgH,EAASuD,QAAS9L,QAASd,KAAKc,QAAS2F,UAAQ,EAACC,YAAY,IACjGtG,EAAApC,EAAAqC,cAAA,WACAD,EAAApC,EAAAqC,cAAAsG,EAAA3I,EAAA,CAAKnB,KAAK,OAAOgK,QAAQ,iBACrBzG,EAAApC,EAAAqC,cAAA2G,EAAAhJ,EAAA,KACIoC,EAAApC,EAAAqC,cAAAE,EAAAvC,EAAA,CAAQwC,QAASR,KAAK4R,eAAgB/U,KAAK,WAA3C,uBAEJuD,EAAApC,EAAAqC,cAAA2G,EAAAhJ,EAAA,KACIoC,EAAApC,EAAAqC,cAAAE,EAAAvC,EAAA,CAAQwC,QAASR,KAAK6F,WAAYhJ,KAAK,WAAvC,sEAjKgB6B,EAAOuD,GACnC,GAAKA,EAAMqH,QAqBP,OAAOrH,EArBS,IAAA2Q,EAAAT,EAAAC,EAER9V,EADaoC,EAAbC,SACArC,WACFiN,EAAUU,aAAc3N,GAC9B,MAAO,CACH+M,UAAQ+I,EAAA,GAAArV,OAAA2M,GAAA,EAAA3M,CAAAqV,EACHnB,GAAU1H,EAAQqD,SAAW,EAAAuF,EAAA,CAC1BzT,OAAKkU,EAAA,GAAA7V,OAAA2M,GAAA,EAAA3M,CAAA6V,EACA5B,IAAW,GADXjU,OAAA2M,GAAA,EAAA3M,CAAA6V,EAEA7B,IAAQ,GAFRhU,OAAA2M,GAAA,EAAA3M,CAAA6V,EAGA/B,GAAQ,IAHR+B,IADqB7V,OAAA2M,GAAA,EAAA3M,CAAAoV,EAMzBrB,GAAO,IANkB/T,OAAA2M,GAAA,EAAA3M,CAAAoV,EAOzBjB,GAAU,GAPeiB,KAD1BpV,OAAA2M,GAAA,EAAA3M,CAAAqV,EAUHjJ,GAAQI,EAAQvD,OAAS,IAVtBjJ,OAAA2M,GAAA,EAAA3M,CAAAqV,EAWHvI,GAAMN,EAAQtN,KAAO,IAXlBmW,GAaR7I,kBAzG4B7I,aCCtCmS,oLAEO,IACG1I,EAAWnK,KAAKtB,MAAhByL,OACR,OACI/J,EAAApC,EAAAqC,cAAAe,GAAApD,EAAMqD,KAANtE,OAAAgJ,OAAA,CACIC,MAAOmE,GAAUA,EAAOnE,MAAQmE,EAAOnE,MAAQ,4BAC3C8D,KAFR,CAGIxD,MAAO,CAAEW,aAAc,KAGnBkD,EAAOnE,MACDmE,EAAOyC,QAAQrQ,IAAI,SAACuW,EAAKlR,GACvB,OAAOxB,EAAApC,EAAAqC,cAAA0G,GAAA/I,EAAA,CACH/B,IAAK2F,EACLqC,QAAS6O,EAAIpU,MAAMuF,QACnBqG,SAAUwI,EAAIpU,MAAM4L,UACtBwI,EAAIxN,QAERlF,EAAApC,EAAAqC,cAAA0G,GAAA/I,EAAA,CACEiG,SAAS,EACTqG,UAAU,GAFZ,8BAnBF/I,IAAMb,WCrBhBvE,eAAiBH,QAAtBC,IAII0E,GAAc,iBAAO,CAC9B7D,UAAW,GACXH,cAAe,OACfiE,OAAQ,OACRC,SAAS,EACThE,KAAMV,GACNF,IAAK,GACL+J,MAAO,KAMEhF,GAAW,iBAAO,CAC3B9E,KAAM,OACN+E,KAAM,OACNtE,cAAe,wBCjBoBX,KAA1B+W,SAAL9W,IAAoB+W,SAAL/W,IACjBkF,GAAWC,GAAApD,EAAKqD,KAChBoJ,GAAaC,GAAA1M,EAAM2M,MACnB5F,GAAiB,CACnBC,SAAU,CACN0G,GAAI,CAAEzG,KAAM,IACZ0G,GAAI,CAAE1G,KAAM,IAEhBC,WAAY,CACRwG,GAAI,CAAEzG,KAAM,IACZ0G,GAAI,CAAE1G,KAAM,MAKdgO,GAAO,OAEPC,GAAW,UACXC,GAAa,YAOEC,8MAKjBnR,MAAM,CACFoH,SAAU,GAGVC,SAAS,KAsBbzD,WAAa,WAAM,IACPwD,EAAa5K,EAAKwD,MAAlBoH,SADON,EAEctK,EAAKC,MAA1BC,EAFOoK,EAEPpK,SAAUgF,EAFHoF,EAEGpF,OAClBhF,EAASrC,WAAaqC,EAASrC,WAAWC,IAAI,SAAC8W,GAU3C,OATIA,EAAU3P,gBACV2P,EAAStW,OAAAC,EAAA,EAAAD,CAAA,GACFsW,EACAhK,EAFE,CAGL3K,MAAM3B,OAAAC,EAAA,EAAAD,CAAA,GACCsW,EAAU3U,UAIlB2U,IAEX1P,GAAUA,EAAOhF,MAGrB8K,aAAe,SAACxN,EAAa8F,GAA0B,IAC3CsH,EAAa5K,EAAKwD,MAAlBoH,SACR5K,EAAKsE,SAAS,CACVsG,SAAStM,OAAAC,EAAA,EAAAD,CAAA,GACFsM,EADCtM,OAAA2M,GAAA,EAAA3M,CAAA,GAEHd,EAAM8F,IAEXuH,SAAS,OAIjBgK,YAAc,WAAM,IACRjK,EAAa5K,EAAKwD,MAAlBoH,SACR,OAAQA,EAAS4J,KACb,KAAKD,GACD,OAAO5S,EAAApC,EAAAqC,cAACkT,EAAA,SAAD,MAeX,KAAKR,GACD,OAAO3S,EAAApC,EAAAqC,cAACkT,EAAA,SAAD,KACHnT,EAAApC,EAAAqC,cAACmT,GAADzW,OAAAgJ,OAAA,CACIC,MAAO,mBACHjB,IAEJ3E,EAAApC,EAAAqC,cAAA4F,GAAAjI,EAAA,CACIkI,YAAY,kBACZnE,MAAOsH,EAAS6J,IAChB/M,SAAU,SAACpC,GAAM,IACLhC,EAAUgC,EAAEC,OAAZjC,MACRtD,EAAKgL,aAAayJ,GAAUnR,OAIxC3B,EAAApC,EAAAqC,cAACmT,GAADzW,OAAAgJ,OAAA,CACIC,MAAO,mBACHjB,IAEJ3E,EAAApC,EAAAqC,cAAA4F,GAAAjI,EAAA,CACIkI,YAAY,kBACZnE,MAAOsH,EAAS8J,IAChBhN,SAAU,SAACpC,GAAM,IACLhC,EAAUgC,EAAEC,OAAZjC,MACRtD,EAAKgL,aAAa0J,GAAYpR,kFAQjD,IAAA+C,EAAA9E,KACGqJ,EAAarJ,KAAKiC,MAAlBoH,SACR,OAAOjJ,EAAApC,EAAAqC,cAAA,WACHD,EAAApC,EAAAqC,cAACmT,GAADzW,OAAAgJ,OAAA,CACIC,MAAO,8BACHjB,IAEJ3E,EAAApC,EAAAqC,cAAA4F,GAAAjI,EAAA,CACI+D,MAAOsH,EAAQ,UACfnD,YAAY,+CACZC,SAAU,SAACpC,GACP,IAAMhC,EAAQgC,EAAEC,OAAOjC,MACvB+C,EAAK2E,aAtIV,YAsImC1H,OAI1C3B,EAAApC,EAAAqC,cAACmT,GAADzW,OAAAgJ,OAAA,CACIC,MAAO,4BACHjB,IAEJ3E,EAAApC,EAAAqC,cAACoT,GAAD,CACI1R,MAAOsH,EAAS4J,IAChB9M,SAAU,SAACpC,GACP,IAAMhC,EAAQgC,EAAEC,OAAOjC,MACvB+C,EAAK2E,aAAawJ,GAAMlR,KAIxB/F,EAAWO,IAAI,SAAAsB,GAAmB,IAAhB5B,EAAgB4B,EAAhB5B,IAAKC,EAAW2B,EAAX3B,KACnB,OACIkE,EAAApC,EAAAqC,cAAAqK,GAAA1M,EAAA,CAAO/B,IAAKA,EAAK8F,MAAO9F,GAAMC,OAO9C8D,KAAKsT,cAETlT,EAAApC,EAAAqC,cAACmT,GAAD,KACIpT,EAAApC,EAAAqC,cAAAsG,EAAA3I,EAAA,KACIoC,EAAApC,EAAAqC,cAAA2G,EAAAhJ,EAAA,KACIoC,EAAApC,EAAAqC,cAAAE,EAAAvC,EAAA,CACIwC,QAASR,KAAK6F,WACdhJ,KAAK,WAFT,uEA7IY6B,EAAOuD,GACnC,GAAKA,EAAMqH,QAcP,OAAOrH,EAdS,IAAA+H,EAGVT,EAFe7K,EAAbC,SACArC,WACmB8K,KAAK,SAAA+K,GAAA,OAAAA,EAAGzO,gBACnC,MAAO,CACH2F,UAAQW,EAAA,GAAAjN,OAAA2M,GAAA,EAAA3M,CAAAiN,EA7BL,YA8BeT,EAAO,WADjBxM,OAAA2M,GAAA,EAAA3M,CAAAiN,EAEHiJ,GAAO1J,EAAQ0J,KAFZlW,OAAA2M,GAAA,EAAA3M,CAAAiN,EA3BX,OA8BeT,EAAO,MAHXxM,OAAA2M,GAAA,EAAA3M,CAAAiN,EAIHkJ,GAAW3J,EAAQ2J,KAJhBnW,OAAA2M,GAAA,EAAA3M,CAAAiN,EAKHmJ,GAAa5J,EAAQ4J,KALlBnJ,WAlBgBtJ,aCflCgT,sNAKFC,eAAiB,WAAM,IACXxJ,EAAW1L,EAAKC,MAAhByL,OACR,OAAIA,EAAO7N,YAAc6N,EAAO7N,WAAWM,OAChCwD,EAAApC,EAAAqC,cAACuT,GAAD,CACHvR,WAAY8H,EAAO7N,WACnB+B,aAAcI,EAAKC,MAAML,eAGtB,8EAKX,OACI+B,EAAApC,EAAAqC,cAAA,OACIC,UAAW,kBAEXF,EAAApC,EAAAqC,cAAA,OAAKC,UAAU,6BACVN,KAAK2T,0BAvBNjT,cCAd0D,GAAa,CACfC,QACAwP,SACAC,aACAC,cACA3D,cACAK,WACAuD,QACAC,YAMEC,GAAe,CACjBC,SAMEC,GAAmB,CACrBC,QAMEC,GAASvX,OAAAC,EAAA,EAAAD,CAAA,GACRmX,GACA9P,GACAgQ,ICtCDG,WAAUxW,EAAAC,EAAMF,SASD0W,8MAKjBC,gBAAkB,SAACpB,GACf,IAAMqB,EAAgBJ,GAAUjB,EAAU1W,eAAe0W,UACzD,IAAKqB,EAED,OADAC,QAAQ1W,MAAM,oCACP,KAJkB,IAOrBS,EAAyB2U,EAAzB3U,MAAUmM,EAPW9N,OAAA8E,EAAA,EAAA9E,CAOIsW,EAPJ,WASvBuB,EAAc7X,OAAAC,EAAA,EAAAD,CAAA,GACZ2B,GAAS,GADG,CAEhByL,OAAQU,EACRxM,aAAcI,EAAKC,MAAML,eAE7B,OAAO+B,EAAApC,EAAAqC,cAACqU,EAAkBE,MAM9BC,YAAc,SAACrY,EAAWuH,GACtBA,EAAEyO,kBAD+B,IAEzBrQ,EAAO3F,EAAP2F,GAEA7F,EADamC,EAAKC,MAAML,aAAxBM,SACArC,WAKRmC,EAAKqW,QAAQ,CACTxY,WAAYyY,aAAa5S,EAAI7F,EALlB,CACX0Y,mBAAmB,EACnBtR,eAAe,SAUvBuR,gBAAkB,SAAC9S,EAAY7F,GAC3B,OAAOA,EAAWgH,OAAO,SAAC9G,GACtB,OAAI2F,IAAO3F,EAAK2F,KAEL3F,EAAKF,aACZE,EAAKF,WAAamC,EAAKwW,gBAAgB9S,EAAI3F,EAAKF,cAE7C,QAOf4Y,SAAW,SAACC,GACR1V,UAAQpB,aAAamG,YAAY2Q,MAMrCL,QAAU,SAACM,GAAc,IACbzW,EAAaF,EAAKC,MAAML,aAAxBM,SACRF,EAAKyW,SAAS,CACVvW,SAAS5B,OAAAC,EAAA,EAAAD,CAAA,GACF4B,EACAyW,8EAKN,IAAAtQ,EAAA9E,KAEG1D,EADa0D,KAAKtB,MAAML,aAAxBM,SACArC,WACF+F,EAAarC,KAAKtB,MAAM2D,YAAc/F,EAC5C,OACI8D,EAAApC,EAAAqC,cAAA,OACIC,UAAU,eAEVF,EAAApC,EAAAqC,cAACgV,EAAA,EAAD,CACIC,SAAU,SAACC,GACP,OACInV,EAAApC,EAAAqC,cAAA,OACIG,QAAS,SAACuD,GACNe,EAAK+P,YAAYU,EAAMxR,IAE3BzD,UAAWiV,EAAKP,kBAAoB,+BAAiC,aAEpElQ,EAAK2P,gBAAgBc,GACtBnV,EAAApC,EAAAqC,cAAA,OAAKC,UAAU,aACXE,QAAS,SAACuD,GACNA,EAAEyO,kBACF+B,GAAQ,CACJ1V,MAAO,6CACPC,QAAS,6FACTC,KAAM,WACF+F,EAAKgQ,QAAQ,CACTxY,WAAYwI,EAAKmQ,gBAAgBM,EAAKpT,GAAI7F,UAM1D8D,EAAApC,EAAAqC,cAAA6L,EAAAlO,EAAA,CAAMnB,KAAK,eAAeyD,UAAU,uBAKpD+B,WAAYA,EACZmT,YAAa,aACbC,UAAW,SAACpT,GACRyC,EAAKgQ,QAAQ,CACTxY,WAAY+F,eAlHA3B,aCZlCS,WAAWC,GAAApD,EAAKqD,MASDqU,oLAER,IAAA3M,EACwC/I,KAAKtB,MAA1C2D,EADH0G,EACG1G,WAAY4C,EADf8D,EACe9D,KAAMzE,EADrBuI,EACqBvI,QAAS3B,EAD9BkK,EAC8BlK,MACnC,OACIuB,EAAApC,EAAAqC,cAAA,WACID,EAAApC,EAAAqC,cAAA,OAAKC,UAAU,wBACVzB,GAGDwD,EAAW9F,IAAI,SAACmG,EAAKd,GACjB,OACIxB,EAAApC,EAAAqC,cAACsV,GAAD,CACI1Z,IAAK2F,GAELxB,EAAApC,EAAAqC,cAAAsG,EAAA3I,EAAA,CACI8I,OAAQ,GAGJpE,EAAInG,IAAI,SAACC,EAAMoZ,GAAgB,IACnB3U,EAAezE,EAAfyE,KAAM/E,EAASM,EAATN,KACd,OACIkE,EAAApC,EAAAqC,cAAA2G,EAAAhJ,EAAA,CACIiH,KAAMA,EACNhJ,IAAG,GAAAmH,OAAKxB,EAAL,KAAAwB,OAAcwS,IAEjBxV,EAAApC,EAAAqC,cAAA,OACIC,UAAU,iBACVE,QAAS,WACLA,GAAWA,EAAQhE,EAAKG,iBAG5ByD,EAAApC,EAAAqC,cAAA6L,EAAAlO,EAAA,CAAMnB,KAAMoE,IANhB,IAM0B/E,kBAhCnCwE,aCNnCmV,eACF1U,GAAWC,GAAApD,EAAKqD,KAChByU,GAAc,EACd9U,GAAW,SAAC1E,GACd,OAAOS,OAAOuK,KAAKhL,GAAYC,IAAI,SAACN,GAAD,OAASK,EAAWL,GAAK+E,cAK1D+U,GAAQ,CACV7B,aAAclT,GAASkT,IACvB9P,WAAYpD,GAASoD,IACrBgQ,iBAAkBpT,GAASoT,KAYV4B,8MAEjB/T,MAAQ,CACJgU,OAAQ,MAMZpB,YAAc,SAAClY,GACU8B,EAAKC,MAAML,aAAxBM,SACArC,WACO4Z,KAAK,SAAArY,GAAA,IAAGlB,EAAHkB,EAAGlB,cAAeqY,EAAlBnX,EAAkBmX,kBAAlB,MAA4D,SAAlBrY,GAA4BqY,IACtFvV,UAAQpB,aAAa8X,oBAAoB7B,GAAU3X,GAAegE,eAGtElB,UAAQpB,aAAa+X,gBAAgB9B,GAAU3X,GAAegE,kBAMlE0V,gBAAkB,SAACC,GAAe,IACtBL,EAAWxX,EAAKwD,MAAhBgU,OACR,OAAOK,EAAMhT,OAAO,SAAA6O,GAAA,OAAAA,EAAGjW,KAAgBqa,oBAAoBC,SAASP,EAAOM,uBAAsBE,OAAO,SAAClX,EAAMgG,GAC3G,IAAMmR,EAAWnX,EAAKA,EAAK3C,OAAS,GAMpC,OALK8Z,GAAYA,EAAS9Z,SAAWkZ,GAGjCY,EAAS5E,KAAKvM,GAFdhG,EAAKuS,KAAK,CAACvM,IAIRhG,GACR,6EAGE,IAAAuF,EAAA9E,KACCiF,EAAO,GAAK6Q,GACZa,EAAmB3W,KAAKqW,gBAAgBN,GAAM7B,cAC9C0C,EAAiB5W,KAAKqW,gBAAgBN,GAAM3R,YAC5CyS,EAAa7W,KAAKqW,gBAAgBN,GAAM3B,kBAC9C,OACIhU,EAAApC,EAAAqC,cAAA,OAAKC,UAAU,sBACXF,EAAApC,EAAAqC,cAAA,OAAKC,UAAU,4BAAf,sBACAF,EAAApC,EAAAqC,cAAA,OAAKC,UAAU,2BACXF,EAAApC,EAAAqC,cAACyW,GAAD,KACI1W,EAAApC,EAAAqC,cAACwV,GAAD,CACI3P,YAAY,2BACZ6Q,SAAU,SAAChV,GAAD,OAAW+C,EAAK/B,SAAS,CAAEkT,OAAQlU,QAGrD3B,EAAApC,EAAAqC,cAAC2W,GAAD,CACI3U,WAAYuU,EACZ3R,KAAMA,EACNzE,QAASR,KAAK6U,YACdhW,MAAO,6BAEXuB,EAAApC,EAAAqC,cAAC2W,GAAD,CACI3U,WAAYsU,EACZ1R,KAAMA,EACNzE,QAASR,KAAK6U,YACdhW,MAAO,6BAEXuB,EAAApC,EAAAqC,cAAC2W,GAAD,CACI3U,WAAYwU,EACZ5R,KAAMA,EACNzE,QAASR,KAAK6U,YACdhW,MAAO,sCAlEY6B,2CCtBtBuW,8MAEjBhV,MAAQ,CACJiV,SAAS,EACT7D,UAAW,CACPlR,GAAI,GACJxF,cAAe,OAavBwa,cAAgB,SAAC7a,GACRA,IAEDA,EADmBmC,EAAKC,MAAML,aAAvBM,SACerC,YAE1B,IACI+W,EADA6D,GAAU,EAkBd,OAhBA5a,EAAW+K,QAAQ,SAAC7K,GAChB,IAAK0a,EAAS,CACV,GAAI1a,EAAKkH,cAGL,OAFAwT,GAAU,OACV7D,EAAY7W,GAGhB,GAAIA,EAAKF,WAAY,CACjB,IAAM6N,EAAS1L,EAAK0Y,cAAc3a,EAAKF,YACnC6N,EAAO+M,UACPA,GAAU,EACV7D,EAAYlJ,EAAOkJ,eAK5B,CACH6D,UACA7D,gBAIRnB,QAAU,SAAC5V,GACFA,IAEDA,EADmBmC,EAAKC,MAAML,aAAvBM,SACerC,YAHH,IAKf+W,EAAc5U,EAAKwD,MAAnBoR,UACR5U,EAAKqW,QAAQ,CACTxY,WAAYyY,aAAa1B,EAAUlR,GAAI7F,EAAY,CAC/CoH,eAAe,SAQ3BwR,SAAW,SAACC,GACR1V,UAAQpB,aAAamG,YAAY2Q,MAMrCL,QAAU,SAACM,GAAS,IACTzW,EAAYF,EAAKC,MAAML,aAAvBM,SACPF,EAAKyW,SAAS,CACVvW,SAAS5B,OAAAC,EAAA,EAAAD,CAAA,GACF4B,EACAyW,QAKfvP,WAAa,SAAClH,GACVF,EAAKyW,SAASvW,GACdF,EAAKyT,aAGTkF,aAAe,WAAM,IACTzY,EAAaF,EAAKC,MAAML,aAAxBM,SACA0U,EAAc5U,EAAKwD,MAAnBoR,UACF3S,EAAY4T,IAAWjB,GAAa,IAAI1W,eAC9C,GAAI+D,EAAW,CACX,IAAM2L,EAAS3L,EAAUyJ,OACnBkN,EAAc,CAChB1Y,WACAgF,OAAQlF,EAAKoH,YAGjB,OAAOzF,EAAApC,EAAAqC,cAACgM,EACAgL,GAGR,OAAO,yFA1FXrX,KAAK+C,SAALhG,OAAAC,EAAA,EAAAD,CAAA,GACOiD,KAAKmX,mDA6FP,IAAArS,EAAA9E,KACGkX,EAAYlX,KAAKiC,MAAjBiV,QACR,OACI9W,EAAApC,EAAAqC,cAAAiX,GAAAtZ,EAAA,CACIuI,MAAO,IACP1H,MAAM,2BACN0Y,UAAU,QACVC,MAAM,EACNtF,QAAS,WACLpN,EAAKoN,WAETgF,QAASA,GAERlX,KAAKoX,uBAtHuB1W,aCJvCS,WAAWC,GAAApD,EAAKqD,MAMhBoW,8MAEFC,iBAAmB,SAAC9S,GAChBnF,UAAQpB,aAAasZ,mBAAmB,CACpCzb,KAAM0I,EAAMZ,OAAOjC,iFAKvB,OACI3B,EAAApC,EAAAqC,cAAA,OAAKC,UAAU,sBACXF,EAAApC,EAAAqC,cAAA,OAAKC,UAAU,4BAAf,4BACAF,EAAApC,EAAAqC,cAAA,OAAKC,UAAU,2BACXF,EAAApC,EAAAqC,cAACuX,GAAD,KACIxX,EAAApC,EAAAqC,cAAA4F,GAAAjI,EAAA,CACIkI,YAAY,2BACZnE,MAAO/B,KAAKtB,MAAML,aAAaO,SAC/BuH,SAAUnG,KAAK0X,6BAjBlBhX,aA0BVvC,qBAAQ,SAAAN,GAAA,MAAuB,CAAEQ,aAAzBR,EAAGQ,eAAXF,CAAkDsZ,ICZ3DI,GAJL1Z,kBAAQ,SAAAN,GAAA,IAAAO,EAAAP,EAAGQ,oBAAH,IAAAD,EAAkB,GAAlBA,EAAAE,EAAAT,EAAsBU,QAAtB,MAA0C,CAC/CF,eACAE,aAFK,IAAAD,EAAgC,GAAhCA,mNA2BL6Y,cAAgB,SAAC7a,GACRA,IAEDA,EADqBmC,EAAKC,MAAML,aAAxBM,SACcrC,YAE1B,IACI+W,EADA6D,GAAU,EAkBd,OAhBA5a,EAAW+K,QAAQ,SAAC7K,GAChB,IAAK0a,EAAS,CACV,GAAI1a,EAAKkH,cAGL,OAFAwT,GAAU,OACV7D,EAAY7W,GAGhB,GAAIA,EAAKF,WAAY,CACjB,IAAM6N,EAAS1L,EAAK0Y,cAAc3a,EAAKF,YACnC6N,EAAO+M,UACPA,GAAU,EACV7D,EAAYlJ,EAAOkJ,eAK5B,CACH6D,UACA7D,iGA7CJ5T,UAAQlB,QAAQqJ,KAAK,CACjBkQ,UAAW,eACXvC,KAAM,CACFwC,MAAO,KAGsB,OAAjC/X,KAAKtB,MAAMsZ,MAAMC,OAAO/b,KACxBuD,UAAQpB,aAAa6Z,gBAAgB,CACjCtZ,SAAUoB,KAAKtB,MAAMsZ,MAAMC,OAAO/b,OAGtCuD,UAAQpB,aAAamG,YAAY,CAC7B5F,SAAU,sCAqCb,IAAAuZ,EACgCnY,KAAKtB,MAAMH,QAAxC6Z,EADHD,EACGC,YAAaC,EADhBF,EACgBE,YACfnB,EAAUlX,KAAKmX,gBAAgBD,QACrC,OACI9W,EAAApC,EAAAqC,cAAA,OAAKC,UAAU,kCACXF,EAAApC,EAAAqC,cAACiY,EAAD,CAAQnY,gBAAgB,IACxBC,EAAApC,EAAAqC,cAAA,OAAKC,UAAU,gBACXF,EAAApC,EAAAqC,cAAA,OAAKC,UAAU,gBACXF,EAAApC,EAAAqC,cAAAkY,EAAAva,EAAA,CAASuZ,UAAU,QAAQ1Y,MAAM,gBAC7BuB,EAAApC,EAAAqC,cAAA6L,EAAAlO,EAAA,CAAMnB,KAAK,OAAOyJ,MAAO8R,EAAc,CAAEI,MAAO,OAAQC,OAAQ,eAAkB,GAAIjY,QAAS4X,EAAc,aAAY,WACrH3Y,UAAQlB,QAAQma,WAGxBtY,EAAApC,EAAAqC,cAAAkY,EAAAva,EAAA,CAASuZ,UAAU,QAAQ1Y,MAAM,gBAC7BuB,EAAApC,EAAAqC,cAAA6L,EAAAlO,EAAA,CAAMnB,KAAK,OAAOyJ,MAAO+R,EAAc,CAAEG,MAAO,OAAQC,OAAQ,eAAkB,GAAIjY,QAAS6X,EAAc,aAAY,WACrH5Y,UAAQlB,QAAQoa,WAGxBvY,EAAApC,EAAAqC,cAAAkY,EAAAva,EAAA,CAASuZ,UAAU,QAAQ1Y,MAAM,gBAC7BuB,EAAApC,EAAAqC,cAAA6L,EAAAlO,EAAA,CAAMnB,KAAK,UAEfuD,EAAApC,EAAAqC,cAAA,QAAMC,UAAU,iBAAhB,QACAF,EAAApC,EAAAqC,cAAAkY,EAAAva,EAAA,CAASuZ,UAAU,QAAQ1Y,MAAM,gBAC7BuB,EAAApC,EAAAqC,cAAA6L,EAAAlO,EAAA,CAAMnB,KAAK,YAGnBuD,EAAApC,EAAAqC,cAAA,OAAKC,UAAU,eACXF,EAAApC,EAAAqC,cAAA,OAAKC,UAAU,UACXF,EAAApC,EAAAqC,cAAA,OAAKC,UAAU,eACXF,EAAApC,EAAAqC,cAAA,OAAKC,UAAU,yBACXF,EAAApC,EAAAqC,cAACuY,GAAD,MACAxY,EAAApC,EAAAqC,cAACwY,GAAkB7Y,KAAKtB,QAE5B0B,EAAApC,EAAAqC,cAAA,OAAKC,UAAU,yBACXF,EAAApC,EAAAqC,cAACuT,GAAe5T,KAAKtB,QAGrBwY,GAAW9W,EAAApC,EAAAqC,cAACyY,GAAoB9Y,KAAKtB,mBAzF9CgC,kBAoGZmX,gRC1HR,IAAMvT,EAAc,WACvB,OAAOyU,KAAKC,SAASC,SAAS,IAAIC,UAAU,IAyDzC,IAAMnE,EAAe,SAAfA,EAAgB5S,EAAY7F,EAAmB6N,GACxD,OAAO7N,EAAWC,IAAI,SAACC,GASnB,OARIA,EAAK2F,KAAOA,EACZ3F,EAAIO,OAAAoc,EAAA,EAAApc,CAAA,GACGP,EACA2N,GAEA3N,EAAKF,aACZE,EAAKF,WAAayY,EAAa5S,EAAI3F,EAAKF,WAAY6N,IAEjD3N,KAQFyN,EAAgB,SAAhBA,EAAiB3N,GAC1B,IAAI8c,EAaJ,OAZA9c,EAAW+K,QAAQ,SAAC7K,GAChB,IAAK4c,EACD,GAAI5c,EAAKkH,cACL0V,EAAS5c,OACN,GAAIA,EAAKF,WAAY,CACxB,IAAM+c,EAAapP,EAAczN,EAAKF,YAClC+c,IACAD,EAASC,MAKlBD,GAME5P,EAAgB,SAAhBA,EAAiB8P,EAAkBhd,EAAmB6N,GAC/D,OAAO7N,EAAWC,IAAI,SAACC,GAAS,IAAA+c,EACoB/c,EAApCgd,EADgBD,EACpBpX,GAA2BzF,EADP6c,EACLjd,WASvB,OARIkd,IAAcF,EACd9c,EAAIO,OAAAoc,EAAA,EAAApc,CAAA,GACGP,EACA2N,GAEAzN,GAAYA,EAASE,SAC5BJ,EAAKF,WAAakN,EAAc8P,EAAU5c,EAAUyN,IAEjD3N,KAOFid,EAAc,SAACC,EAAcC,GACtC,IAAMC,EAAcF,EACpB,OAAOC,EAAWvS,KAAK,SAAA+K,GAAA,OAAAA,EAAEuH,OAAmBE,KAAgB,uHCrH1DC,EAAQC,EAAQ,KAGhBC,EAAc,CAChBC,IAAK,iFACLC,IAAK,+DACLC,IAAK,qHACLC,IAAK,6CACLC,IAAK,qKACLC,IAAK,2HACLC,IAAK,yGACLC,IAAK,+JACLC,IAAK,yDACLC,IAAK,qHACLC,IAAK,+GACLC,IAAK,6FACLC,IAAK,iCACLC,IAAK,yGACLC,IAAK,kCAST,SAASC,EAAYC,EAAUC,GAK3B,IAAIC,EAQJ,GAPI,WAAYF,EACZE,EAASF,EAASE,OACX,YAAaF,EACpBE,EAASF,EAASG,QACX,SAAUH,IACjBE,EAASF,EAASI,MAEjBF,GAAU,KAAOA,EAAS,KAAmB,IAAXA,EACnC,OAAOF,EACJ,GAAIC,EACP,OAAOD,EAGX,IAAMK,EAAYL,EAASM,YAAeN,EAAS5B,QAAU4B,EAAS5B,OAAO7Q,SAAYwR,EAAYmB,GACtF,MAAXA,GACAK,EAAAvd,EAAaC,MAAM,CACfsK,QAAO,4BAAAnF,OAAU8X,GACjBM,YAAaH,IAGrB,IAAMpd,EAAa,IAAIwd,MAAMJ,GAG7B,MAFApd,EAAM/B,KAAOgf,EACbjd,EAAM+c,SAAWA,EACX/c,EAaK,SAASyd,EAAQC,EAAK/O,GAAgC,IAAvBqO,EAAuBhb,UAAArD,OAAA,QAAAoP,IAAA/L,UAAA,IAAAA,UAAA,GAM7D2b,EAAU7e,OAAAoc,EAAA,EAAApc,CAAA,GALS,CACnB8e,KAAM,OAENC,QAAS,IAE4BlP,GACzC,UAAAxJ,OAAWwY,EAAWne,SAClB,IAAK,OACL,IAAK,OACDme,EAAWne,OAAS,OACpB,MACJ,IAAK,MACL,IAAK,MACDme,EAAWne,OAAS,MAsB5B,MAlB0B,SAAtBme,EAAWne,QAA2C,QAAtBme,EAAWne,OACrCme,EAAWpW,gBAAgBuW,gBAStBH,EAAWE,SARlBF,EAAWE,QAAX/e,OAAAoc,EAAA,EAAApc,CAAA,CACIif,OAAQ,mBACRC,eAAgB,mCACbL,EAAWE,SAElBF,EAAWpW,KAAO5F,KAAKC,UAAU+b,EAAWpW,OAKnB,QAAtBoW,EAAWne,SACdme,EAAWpW,OACXmW,EAAG,GAAAvY,OAAMuY,EAAN,KAAAvY,OAAavD,oBAAU+b,EAAWpW,QAEzCoW,EAAa,MAEV/B,EAAM8B,EAAKC,GACbM,KAAK,SAAClB,GAAD,OAAcD,EAAYC,EAAUC,KACzCiB,KAAK,SAAClB,GAAD,OAAcA,EAAS5F,SAC5B8G,KAAK,SAAClB,GAAD,OAAcD,EAAYC,EAAUC,KAEzCkB,MAAM,SAACpY,GACJ4Q,QAAQyH,KAAKrY,wCCjHzBsY,EAAAC,EAAAC,EAAA,sBAAA9b,IAAA,IAAA+b,EAAAH,EAAA,IAAAI,EAAAJ,EAAA,IAOa5b,EAAO,SAASic,GACzBC,IAAQ7K,KAAR,GAAA1O,OAAgBwZ,IAAhB,KAAAxZ,OAAgCsZ,+KCMfG,6MAgCjBC,QAAU,SAACC,EAAMC,EAAYC,GACzB,IAAM7D,EAAS8D,MAAMC,KAAKJ,GADYK,EAEpBhE,EAAOtW,OAAOka,EAAY,GAArCK,EAF+BtgB,OAAAugB,EAAA,EAAAvgB,CAAAqgB,EAAA,MAKtC,OAFAhE,EAAOtW,OAAOma,EAAU,EAAGI,GAEpBjE,KAMXmE,gBAAkB,WACd9e,EAAKC,MAAM8W,iBAMfgI,cAAgB,SAACpE,GACb,GAAKA,EAAOqE,YAAZ,CAGA,IAAMpb,EAAa5D,EAAKqe,QACpBre,EAAKC,MAAM2D,WACX+W,EAAOxY,OAAOgB,MACdwX,EAAOqE,YAAY7b,OAGvBnD,EAAKC,MAAM+W,UAAUpT,EAAY+W,6EAG5B,IAAArQ,EACyE/I,KAAKtB,MAA3E2D,EADH0G,EACG1G,WAAYqb,EADf3U,EACe2U,UAAWC,EAD1B5U,EAC0B4U,YAAaC,EADvC7U,EACuC6U,SAAUtI,EADjDvM,EACiDuM,SAAUuI,EAD3D9U,EAC2D8U,UAChE,OACIzd,EAAApC,EAAAqC,cAACyd,EAAA,EAAD,CACIrI,UAAWzV,KAAKwd,cAChBhI,YAAaxV,KAAKud,iBAElBnd,EAAApC,EAAAqC,cAACyd,EAAA,EAAD,CAAWH,YAAaA,EAAaD,UAAWA,GAExC,SAACK,EAAUC,GAAX,OACI5d,EAAApC,EAAAqC,cAAA,MAAAtD,OAAAgJ,OAAA,GACQgY,EAASE,eADjB,CAEIxV,IAAKsV,EAASG,SACd5d,UAAS,uBAAA8C,OAAyB4a,EAASG,eAAiB,eAAiB,MAE7E/d,EAAApC,EAAAqC,cAACD,EAAApC,EAAM8H,SAAP,KAEQzD,EAAW9F,IAAI,SAAC6hB,EAAUxc,GAAX,OACXxB,EAAApC,EAAAqC,cAACyd,EAAA,EAAD,CACI7hB,IAAK2F,EACLA,MAAOA,EACPyc,YAAW,GAAAjb,OAAKua,EAAL,KAAAva,OAAoBxB,IAG3B,SAACmc,EAAUC,GAAX,OACI5d,EAAApC,EAAAqC,cAAA,MAAAtD,OAAAgJ,OAAA,CACI0C,IAAKsV,EAASG,UACVH,EAASO,eACTP,EAASQ,gBAHjB,CAIIje,UAAS,uBAAA8C,OAAyB4a,EAASQ,WAAa,aAAe,IACvElY,MAAKvJ,OAAAC,EAAA,EAAAD,CAAA,CACDkK,aAAc2W,GACXG,EAASO,eAAehY,SAG9BgP,EAAS8I,EAAUxc,SAQvCS,EAAWzF,QAAUihB,EAEzBE,EAAS7X,wBA5Gb3E,IAAMkd,eAAlB5B,EAaVxO,aAAe,CAClBsP,YAAa,YACbD,UAAW,WACXE,SAAU,EACVpI,YAAa,aACbkJ,UAAW,aACXb,UAAWzd,EAAApC,EAAAqC,cAAA,OACPiG,MAAO,CAAEqY,UAAW,WADb,2IC7Bbxd,UAAWC,EAAApD,EAAKqD,MAMTud,EAAqB,CAC9B5Z,SAAU,CACN0G,GAAI,CAAEzG,KAAM,IACZ0G,GAAI,CAAE1G,KAAM,IAEhBC,WAAY,CACRwG,GAAI,CAAEzG,KAAM,IACZ0G,GAAI,CAAE1G,KAAM,MA0BC4Z,6MAkBjB5c,MAAQ,CACJ6c,SAAQ,kBAAmBrgB,EAAKC,QAAQD,EAAKC,MAAMqgB,iBAGvDC,iBAAmB,SAACxiB,EAAuByiB,GAAkB,IAAAlW,EAC3BtK,EAAKC,MAA3BiD,EADiDoH,EACjDpH,KAAMgE,EAD2CoD,EAC3CpD,IAAKuZ,EADsCnW,EACtCmW,OACX9W,EAAsBzG,EAAtByG,kBACR,OAAI5L,EAAK6I,OACE7I,EAAK6I,SAELjF,EAAApC,EAAAqC,cAAA2G,EAAAhJ,EAAA,CACH/B,IAAKO,EAAKP,IACVgJ,KAAMU,GAENvF,EAAApC,EAAAqC,cAACc,EAADpE,OAAAgJ,OAAA,GACQ6Y,EADR,CAEItY,MAAO,CAACW,aAAciY,GACtBlZ,MAAOxJ,EAAKqC,MACZyB,UAAW2e,EAAO,YAAc,KAG5B7W,EAAkB5L,EAAKP,IAAMO,EAAKoQ,SAAW,GAA7CxE,CAAkD5L,EAAK6W,gBAU3E8L,UAAY,SAACL,GACT,OAAKA,EAMM,CACH5iB,KAAM,eACNW,KAAM,QAPH,CACHX,KAAM,eACNW,KAAM,SAalBuiB,gBAAkB,WAAM,IAchBC,EAdgBC,EAC0C7gB,EAAKC,MAA3DpC,EADYgjB,EACZhjB,WAAYgT,EADAgQ,EACAhQ,MAAO7P,EADP6f,EACO7f,QAASkG,EADhB2Z,EACgB3Z,IAAK4Z,EADrBD,EACqBC,SAAUL,EAD/BI,EAC+BJ,OAC7C7c,EAAa/F,EAAWma,OAAO,SAAClX,EAAagG,GAC/C,IAAM3I,EAAS2C,EAAK3C,OACd8Z,EAAkBnX,EAAK3C,EAAS,GAMtC,OALIA,GAAU8Z,GAAYA,EAAS9Z,OAAS0S,EACxCoH,EAAS5E,KAAKvM,GAEdhG,EAAKuS,KAAK,CAACvM,IAERhG,GACR,IACGigB,EAAWljB,EAAWM,OAAS0S,EAC/BwP,EAAS,WAAYrgB,EAAKC,MAAQD,EAAKC,MAAMogB,OAASrgB,EAAKwD,MAAM6c,OAEnEW,EAAsB,GAMpBC,GAJFL,EADAhd,EAAWA,EAAWzF,OAAS,GAAGA,SAAW0S,EACjC,GAEAjN,EAAWsd,OAEC/iB,OAAS0S,EAGjCmQ,GADCpd,EAAWzF,QAAU8iB,EAAYpQ,EAAQ,EAC/BvS,OAAAC,EAAA,EAAAD,CAAA,GACJ0iB,EADI,CAEPd,UAAW,OACXiB,YAAa,QAGN7iB,OAAAC,EAAA,EAAAD,CAAA,GACJ0iB,EADI,CAEPd,UAAW,UAhCC,IAAAkB,EAmCGphB,EAAK0gB,UAAUL,GAA9B5iB,EAnCY2jB,EAmCZ3jB,KAAMW,EAnCMgjB,EAmCNhjB,KACd,OAAOuD,EAAApC,EAAAqC,cAAA,OAAKC,UAAU,gBAEd+B,EAAW9F,IAAI,SAACujB,EAAcle,GAC1B,OAAOxB,EAAApC,EAAAqC,cAAAsG,EAAA3I,EAAA,CAAK/B,IAAK2F,EAAOtB,UAAWkf,GAAY5d,EAAQ,GAAKkd,EAAS,SAAW,IAExEgB,EAAMvjB,IAAI,SAACC,GAAD,OAA2BiC,EAAKugB,iBAAiBxiB,EAAMujB,QAAQP,GAAY5d,EAAQ,GAAKkd,SAKlH1e,EAAApC,EAAAqC,cAAAsG,EAAA3I,EAAA,KAEQqhB,EAAU9iB,IAAI,SAACC,GAAD,OAA2BiC,EAAKugB,iBAAiBxiB,EAAMujB,QAAQP,GAAYV,MAE7F1e,EAAApC,EAAAqC,cAAA2G,EAAAhJ,EAAA,CACIiH,KAAMua,GAAYV,EAAUnZ,EAAM2J,EAAU3J,GAAO2J,EAAQoQ,GAC3DpZ,MAAOmZ,GAEPrf,EAAApC,EAAAqC,cAACc,EAAD,CACImF,MAAO,CAAEW,aAAciY,IAGnBM,GAAYpf,EAAApC,EAAAqC,cAAA,YACRD,EAAApC,EAAAqC,cAAA,KACIC,UAAU,OACVE,QAAS,WACL/B,EAAKsE,SAAS,CACV+b,QAASA,IAEbS,GAAYA,GAAUT,KAE5B5iB,EAAKkE,EAAApC,EAAAqC,cAAA6L,EAAAlO,EAAA,CAAMnB,KAAMA,MAG1B4C,+EAQjB,OACIW,EAAApC,EAAAqC,cAAA,WACKL,KAAKof,0BAlJkB1e,aAAnBme,EAYVxQ,aAAe,CAClB1I,IAAK,EACL2J,MAAO,EACP4P,OAAQ,IC1DhB7C,EAAAC,EAAAC,EAAA,sBAAAyD,IAAA3D,EAAAC,EAAAC,EAAA,sBAAA0D","file":"static/js/7.1fa62321.chunk.js","sourcesContent":["/**\n * 表单类型\n */\nexport const FORM_TYPES = [\n    {\n        key: 'normal',\n        name: '正常表单'\n    },\n    {\n        key: 'search',\n        name: '搜索表单'\n    }\n];\n","import { FORM_TYPES } from 'Src/components/Form/constants';\nconst [{ key: NORMAL_FORM }, { key: SEARCH_FORM }] = FORM_TYPES;\n\ninterface FormChildren {\n    components?: any;\n    stateName?: string;\n    activeEvent?: {};\n    componentName?: string;\n    source?: string;\n    default?: boolean;\n}\n\n/**\n * 整理JSON\n */\nexport const formatComponents = (components: any[]): Array<any> => {\n    return components.map((item: any,) => {\n        const { components: children = [], componentName } = item;\n        if (componentName === 'Form' && children.length) {\n            const { type, stateName } = item;\n            item.components = formatComponents(children).map((item) => ({\n                ...item,\n                formType: type,\n                stateName: stateName\n            }));\n            if (type === NORMAL_FORM) {\n                item.activeEvents = [\n                    {\n                        eventType: 'request',\n                        dependencies: {\n                            type: 'fetch',\n                            api: item.saveApi,\n                            actionType: 'save',\n                            responseType: 'object',\n                            method: 'post',\n                        }\n                    },\n                    {\n                        eventType: 'request',\n                        dependencies: {\n                            type: 'fetch',\n                            api: item.updateApi,\n                            actionType: 'update',\n                            responseType: 'object',\n                            method: 'post',\n                        }\n                    },\n                    // {\n                    //     eventType: 'link',\n                    //     dependencies: {\n                    //         ...components[tableIndex].dependencies,\n                    //         responseType: 'list'\n                    //     }\n                    // }\n                ];\n            } else if (type === SEARCH_FORM) {\n                const tableIndex = components.findIndex(({ componentName }) => componentName === 'Table');\n                if (tableIndex > 0) {\n                    item.activeEvents = [\n                        {\n                            eventType: 'request',\n                            dependencies: {\n                                ...components[tableIndex].dependencies,\n                                responseType: 'list'\n                            }\n                        },\n                        // {\n                        //     eventType: 'link',\n                        //     dependencies: {\n                        //         ...components[tableIndex].dependencies,\n                        //         responseType: 'list'\n                        //     }\n                        // }\n                    ];\n                }\n            }\n        }\n        return item;\n    });\n};\n","import React, { Component } from 'react';\nimport { connect, actions } from 'kredux';\nimport { Button, Modal } from 'antd';\nimport { formatComponents } from './utils';\nimport './index.scss';\nimport { goto } from 'Src/utils/commonFunc';\n\nconst confirm = Modal.confirm;\nconst error = Modal.error;\n\ninterface HeaderProps {\n    generatePage?: any;\n    showTopToolbar?: boolean;\n}\n\n@connect(({ generatePage = {}, operate = {} }) => ({\n    generatePage,\n    operate\n}))\nclass Header extends Component<HeaderProps> {\n\n    handleSubmit = () => {\n        const { generatePage } = this.props;\n        const { pageJSON, pageName } = generatePage;\n        if (!pageName) {\n            error({\n                title: '配置错误',\n                content: '请填写页面模板名称！'\n            });\n            return;\n        }\n\n        confirm({\n            title: '确认提交配置？',\n            content: '请确认提交所写配置，页面名称重复则会覆盖之前的配置，请谨慎。',\n            onOk: async() => {\n                // console.log('components', formatComponents(pageJSON.components));\n                actions.generatePage.addTemplateItem({\n                    pageData: JSON.stringify({\n                        components: formatComponents(pageJSON.components)\n                    }),\n                    pageName\n                });\n            }\n        });\n    }\n\n    render() {\n        const { showTopToolbar = false } = this.props;\n        return (\n            <div className=\"thanos-common\">\n                <div className=\"header\">\n                    <span className=\"title\">灭霸&nbsp;&nbsp;</span>\n                    <span className=\"sub-title\">打个响指，页面就好了</span>\n                    {\n                        showTopToolbar && <span className=\"user\">\n                            <Button className='mar-l-4' onClick={() => {\n                                goto('');\n                            }}>\n                                返回\n                            </Button>\n                            <Button\n                                className='mar-l-4'\n                                type='primary'\n                                onClick={this.handleSubmit}\n                            >\n                                打响指\n                            </Button>\n                        </span>\n                    }\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Header;\n","/**\n * 获取初始化JSON\n */\nexport const getInitJson = () => ({\n    stateName: '',\n    componentName: 'Table',\n    source: 'antd',\n    default: false,\n    props: {\n        columns: [{title: '示例', dataIndex: 'example'}]\n    },\n    dependencies: {},\n    components: []\n});\n\n/**\n * 获取组件Tools配置\n */\nexport const getTools = () => ({\n    name: 'Table',\n    icon: 'table',\n    componentName: 'Table'\n});\n","import React, { Component } from 'react';\nimport { actions } from 'kredux';\nimport { DATA_ENTRY } from 'Components';\nimport { Form, Input, Table, Button, Row, Col, Checkbox, Select, message } from 'antd';\nimport { getUniqueID } from 'Src/utils';\nconst { Option } = Select;\nconst FormItem = Form.Item;\nconst EditableContext = React.createContext(null);\nconst EditableRow = ({ form, index, ...props }: any) => (\n    <EditableContext.Provider value={form}>\n        <tr {...props} />\n    </EditableContext.Provider>\n);\nconst EditableFormRow = Form.create()(EditableRow);\n\ninterface TableConfigProps {\n    pageJSON: any;\n    onSave(pageJSON: any): any;\n}\n\nexport default class TableConfig extends Component<TableConfigProps> {\n\n    state = {\n        api: '', // api path\n        currentComponent: {\n            id: '',\n            stateName: '',\n        }, // current component info\n        currentComponentIdx: '', // current component index\n        dataSource: [], // table data\n        editDataFlag: false,\n        method: 'GET', // request method\n        searchComponentChecked: false, // checkbox search component check flag\n        tableCount: 0, // table key\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const newState: any = {};\n        if (!state.editDataFlag) {\n            const currentComponent = props.pageJSON.components.find((item, index) => {\n                if (item.configVisible) {\n                    newState.currentComponentIdx = index;\n                    newState.editDataFlag = true;\n                }\n                return item.configVisible;\n            });\n\n            if (currentComponent) {\n                newState.currentComponent = currentComponent;\n                props.pageJSON.components.forEach((item) => {\n                    if (item.parentId && item.parentId === currentComponent.id) {\n                        newState.searchComponentChecked = true;\n                    }\n                });\n                if (state.dataSource.length === 0) {\n                    const dataSource = currentComponent.props.columns.map((item, index) => {\n                        return {\n                            dataKey: item.dataIndex,\n                            key: index,\n                            tableName: item.title,\n                        };\n                    });\n                    newState.dataSource = dataSource;\n                    newState.tableCount = dataSource.length;\n                }\n\n                if (!state.api && currentComponent.dependencies) {\n                    newState.api = currentComponent.dependencies.api || '';\n                }\n\n                if (currentComponent.dependencies.method) {\n                    newState.method = currentComponent.dependencies.method;\n                }\n            }\n        }\n        return Object.keys(newState).length ? newState : null;\n    }\n\n    /**\n     * @desc Edit the table automatic save\n     * @param { Object } row (current row data)\n     */\n    handleTableInputSave = (row) => {\n        interface ItemInterface {\n            key: number | string;\n        }\n        const newData: any[] = [...this.state.dataSource];\n        const index = newData.findIndex((item: ItemInterface) => row.key === item.key);\n        const item = newData[index];\n        const newItem = {...item, ...row};\n        newData.splice(index, 1, newItem);\n        this.setState({ dataSource: newData });\n    }\n\n    /**\n     * @desc add one row to the table\n     */\n    handleAdd = () => {\n        let { tableCount, dataSource } = this.state;\n        const newData = {\n            key: ++tableCount,\n            dataKey: '',\n            tableName: '',\n        };\n        this.setState({\n            dataSource: [...dataSource, newData],\n            tableCount,\n        });\n    }\n\n    /**\n     * @desc delete one row to the table\n     * @param { String } key (table key)\n     */\n    handleTableRowDelete = (key) => {\n        const dataSource = [...this.state.dataSource];\n        interface ItemInterface {\n            key: number | string;\n        }\n        this.setState({ dataSource: dataSource.filter((item: ItemInterface) => item.key !== key) });\n    }\n\n    /**\n     * @desc save table data\n     */\n    saveTableData = () => {\n        if (!this.checkData()) { return; }\n        const pageJSON = this.props.pageJSON;\n        const { currentComponent, api, method, dataSource } = this.state;\n        pageJSON.components = pageJSON.components.map((item) => {\n            if (item.configVisible) {\n                item.stateName = currentComponent.stateName;\n                item.props.columns = dataSource.map((item: any) => ({\n                    title: item.tableName,\n                    dataIndex: item.dataKey,\n                }));\n\n                item.dependencies = {\n                    type: 'fetch', // 数据来源类型 fetch 接口， dict 本地字典\n                    responseType: 'list', // 接口返回类型， // list 列表， object 对象\n                    api, // 接口地址\n                    method,\n                    actionType: 'get'\n                };\n            }\n            return item;\n        });\n        this.props.onSave(pageJSON);\n    }\n\n    /**\n     * @desc check require option\n     */\n    checkData = () => {\n        const { api, method, dataSource, currentComponent } = this.state;\n        if (!api) {\n            message.error('api不可为空');\n            return false;\n        } else if (!method) {\n            message.error('请求方式不可为空');\n            return false;\n        } else if (!method) {\n            message.error('请求方式不可为空');\n            return false;\n        } else if (!dataSource.length) {\n            message.error('表头数据不能为空');\n            return false;\n        } else if (!currentComponent.stateName) {\n            message.error('表头名称不能为空');\n            return false;\n        }\n        return true;\n    }\n\n    /**\n     * @desc add a search component\n     * @param { Object } e event\n     */\n    addSearchComponent = (e) => {\n        const pageJSON = this.props.pageJSON;\n        if (e.target.checked) {\n            const { currentComponentIdx, currentComponent } = this.state;\n            const InputData = {\n                ...DATA_ENTRY.Input.getInitJson(),\n                id: getUniqueID(),\n                parentId: currentComponent.id,\n            };\n\n            pageJSON.components.splice(currentComponentIdx, 0, InputData);\n\n            actions.generatePage.setReducers(pageJSON);\n        } else {\n            const searchComponentIdx = pageJSON.components.findIndex((item) => {\n                return item.parentId && item.parentId === this.state.currentComponent.id;\n            });\n            pageJSON.components.splice(searchComponentIdx, 1);\n            actions.generatePage.setReducers(pageJSON);\n        }\n        this.setState({\n            searchComponentChecked: e.target.checked,\n        });\n    }\n\n    /**\n     * @desc method change event\n     * @param { String } value\n     */\n    methodChange = (value) => {\n        this.setState({\n            method: value,\n        });\n    }\n\n    /**\n     * @desc api input change event\n     * @param { Object } event\n     */\n    apiInputChange = (event) => {\n        const {value} = event.target;\n        this.setState({\n            api: value,\n        });\n    }\n\n    /**\n     * @desc state name input change event\n     * @param { Object } event\n     */\n    stateNameInputChange = (event) => {\n        const {value} = event.target;\n        const currentComponent = {\n            ...this.state.currentComponent,\n            stateName: value,\n        };\n        this.setState({\n            currentComponent,\n        });\n    }\n\n    render() {\n        const formItemLayout = {\n            labelCol: {span: 8},\n            wrapperCol: {span: 16},\n        };\n\n        const { dataSource, searchComponentChecked } = this.state;\n        let columns = [\n            {\n                title: '表头名称',\n                dataIndex: 'tableName',\n                editable: true,\n            },\n            {\n                title: '接口字段',\n                dataIndex: 'dataKey',\n                editable: true,\n            },\n            {\n                title: 'operation',\n                dataIndex: 'operation',\n                render: (text, record) => {\n                    return this.state.dataSource.length >= 2 ? (\n                        <div>\n                            <Button title=\"Sure to delete?\" type=\"danger\" onClick={() => this.handleTableRowDelete(record.key)}>\n                                Delete\n                            </Button>\n                        </div>\n\n                    ) : null;\n                },\n            },\n        ];\n        const components = {\n            body: {\n                row: EditableFormRow,\n                cell: EditableCell,\n            },\n        };\n\n        columns = columns.map((col) => {\n            if (!col.editable) {\n                return col;\n            }\n            return {\n                ...col,\n                onCell: (record) => ({\n                    record,\n                    editable: col.editable,\n                    dataIndex: col.dataIndex,\n                    title: col.title,\n                    handleSave: this.handleTableInputSave,\n                }),\n            };\n        });\n\n        return (\n            <React.Fragment>\n                <FormItem {...formItemLayout} label=\"接口地址\">\n                    <Input value={this.state.api}\n                        placeholder=\"例：/userservice/media/upload\"\n                        onChange={this.apiInputChange}/>\n                </FormItem>\n                <FormItem {...formItemLayout} label=\"请求方式\">\n                    <Select defaultValue={this.state.method} style={{ width: 120 }} onChange={this.methodChange}>\n                        <Option value=\"GET\">GET</Option>\n                        <Option value=\"POST\">POST</Option>\n                    </Select>\n                </FormItem>\n                <FormItem {...formItemLayout} label=\"表格名称\">\n                    <Input value={this.state.currentComponent.stateName}\n                        placeholder=\"组件存储数据Key, 使用英文且唯一\"\n                        onChange={this.stateNameInputChange}/>\n                </FormItem>\n                <Table\n                    components={components}\n                    dataSource={dataSource}\n                    bordered={true}\n                    columns={columns}\n                    pagination={false}\n                />\n                <Row style={{marginTop: '10px'}} type=\"flex\" justify=\"end\" gutter={1}>\n                    <Checkbox checked={searchComponentChecked} onChange={this.addSearchComponent}>是否拥有条件搜索</Checkbox>\n                </Row>\n                <Row style={{marginTop: '20px'}} type=\"flex\" justify=\"end\" gutter={1}>\n                    <Col>\n                        <Button onClick={this.handleAdd} type=\"primary\" style={{ marginBottom: 16 }}>\n                            Add a row\n                        </Button>\n                    </Col>\n                    <Col offset={1}>\n                        <Button type=\"primary\" onClick={this.saveTableData}>\n                            确定\n                        </Button>\n                    </Col>\n                </Row>\n            </React.Fragment>\n        );\n    }\n}\n\ninterface EditableCellProps {\n    record: any;\n    dataIndex: number;\n    title: string;\n    editable: boolean;\n    index: number;\n    handleSave(params: any): void;\n}\n\nclass EditableCell extends React.Component<EditableCellProps> {\n    state = {\n        editing: false,\n    };\n\n    input: any;\n\n    form: any;\n\n    toggleEdit = () => {\n        const editing = !this.state.editing;\n        this.setState({ editing }, () => {\n            if (editing) {\n                this.input.focus();\n            }\n        });\n    }\n\n    save = (e) => {\n        const { record, handleSave } = this.props;\n        this.form.validateFields((error, values) => {\n            if (error && error[e.currentTarget.id]) {\n                return;\n            }\n            this.toggleEdit();\n            handleSave({ ...record, ...values });\n        });\n    }\n\n    renderCell = (form) => {\n        this.form = form;\n        const { children, dataIndex, record, title } = this.props;\n        const { editing } = this.state;\n        return editing ? (\n            <Form.Item style={{ margin: 0 }}>\n                {form.getFieldDecorator(dataIndex, {\n                    rules: [\n                        {\n                            required: true,\n                            message: `${title} is required.`,\n                        },\n                    ],\n                    initialValue: record[dataIndex],\n                })(<Input ref={(node) => (this.input = node)} onPressEnter={this.save} onBlur={this.save} />)}\n            </Form.Item>\n        ) : (\n            <div\n                className=\"editable-cell-value-wrap\"\n                style={{ paddingRight: 24, minHeight: '21px' }}\n                onClick={this.toggleEdit}\n            >\n                {children}\n            </div>\n        );\n    }\n\n    render() {\n        const {\n            editable,\n            children,\n            dataIndex,\n            title,\n            record,\n            index,\n            handleSave,\n            ...restProps\n        } = this.props;\n        return (\n            <td {...restProps}>\n                {editable ? (\n                    <EditableContext.Consumer>{this.renderCell}</EditableContext.Consumer>\n                ) : (\n                    children\n                )}\n            </td>\n        );\n    }\n}\n","import React from 'react';\nimport { Table } from 'antd';\nimport { getInitJson, getTools } from './utils';\nimport tableConfig from './config';\nclass KTable extends React.Component {\n\n    render() {\n        return (\n            <Table\n                {...this.props}\n            />\n        );\n    }\n}\n\nexport {\n    KTable as component,\n    getInitJson,\n    getTools,\n    tableConfig as config\n};\n","/**\n * 获取初始化JSON\n */\nexport const getInitJson = () => ({\n    stateName: '',\n    componentName: 'Input',\n    source: 'antd',\n    default: false,\n    key: '',\n    label: ''\n});\n\n/**\n * 获取组件Tools配置\n */\nexport const getTools = () => ({\n    name: 'Input',\n    icon: 'edit',\n    componentName: 'Input'\n});\n","import React, { Component } from 'react';\nimport { Form, Input, Button, Row, Col } from 'antd';\nimport PropTypes from 'prop-types';\nimport { ALIAS, FORMITEM_LAYOUT } from 'Src/utils/constants';\nimport { findComponent, saveComponent } from 'Src/utils';\n\nconst FormItem = Form.Item;\nconst KEY = 'key';\nconst LABEL = 'label';\n\ninterface InputConfigProps{\n    pageJSON: any;\n    onSave(pageJSON: any): void;\n}\n\nexport default class InputConfig extends Component<InputConfigProps> {\n    static propTypes = {\n        onSave: PropTypes.func\n    };\n\n    state={\n        formData: {\n\n        },\n        isTouch: false,\n        current: {\n            id: '',\n            props: {}\n        }\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        if (!state.isTouch) {\n            const { pageJSON } = props;\n            const { components } = pageJSON;\n            const current = findComponent(components);\n            return {\n                formData: {\n                    [KEY]: current[KEY],\n                    [LABEL]: current[LABEL]\n                },\n                current\n            };\n        } else {\n            return state;\n        }\n    }\n\n    handleSave = () => {\n        const { formData, current } = this.state;\n        const { pageJSON, onSave } = this.props;\n        pageJSON.components = saveComponent(current.id, pageJSON.components, {\n            ...formData,\n            props: {\n                ...current.props,\n                placeholder: formData[LABEL]\n            }\n        });\n        onSave && onSave(pageJSON);\n    }\n\n    handleChange = (key: string, e: any) => {\n        const { formData } = this.state;\n        const value = e.target.value;\n        this.setState({\n            formData: {\n                ...formData,\n                [key]: value\n            },\n            isTouch: true\n        });\n    };\n\n    render() {\n        const { formData } = this.state;\n        return <div>\n            <FormItem\n                label={ALIAS.KEY}\n                {...FORMITEM_LAYOUT}\n            >\n                <Input\n                    value={formData[KEY]}\n                    placeholder='例如： name'\n                    onChange={this.handleChange.bind(this, KEY)}\n                />\n            </FormItem>\n            <FormItem\n                label={ALIAS.LABEL}\n                {...FORMITEM_LAYOUT}\n            >\n                <Input\n                    value={formData[LABEL]}\n                    placeholder='例如： 姓名'\n                    onChange={this.handleChange.bind(this, LABEL)}\n                />\n            </FormItem>\n            <FormItem>\n                <Row>\n                    <Col>\n                        <Button\n                            onClick={this.handleSave}\n                            type='primary'\n                        >确定</Button>\n                    </Col>\n                </Row>\n            </FormItem>\n        </div>;\n    }\n}\n","import React, { Component } from 'react';\nimport { Input, Form } from 'antd';\nimport PropTypes from 'prop-types';\nimport { getInitJson, getTools } from './utils';\nimport InputConfig from './config';\nimport { FORMITEM_LAYOUT } from 'Src/utils/constants';\n\ninterface KInputProps {\n    config: any;\n    generatePage: {\n        pageJSON: any\n    }\n}\n\nclass KInput extends Component<KInputProps> {\n    static propTypes = {\n        props: PropTypes.object\n    };\n\n    render() {\n        const { config, generatePage, ...OtherProps } = this.props;\n        const { label = '' } = config;\n        return (\n            <Form.Item\n                {...FORMITEM_LAYOUT}\n                style={{ marginBottom: 0 }}\n                label={label}\n            >\n                <Input\n                    {...OtherProps}\n                    style={{\n                        width: '300px'\n                    }}\n                />\n            </Form.Item>\n        );\n    }\n}\n\nexport {\n    KInput as component,\n    getInitJson,\n    getTools,\n    InputConfig as config\n};\n","/**\n * 获取初始化JSON\n */\nexport const getInitJson = () => ({\n    stateName: '',\n    componentName: 'Select',\n    source: 'antd',\n    default: false,\n    key: '',\n    label: '',\n    props: {\n        placeholder: '',\n        disabled: false,\n        allowClear: true,\n        showSearch: false\n    }\n});\n\n/**\n * 获取组件Tools配置\n */\nexport const getTools = () => ({\n    name: 'Select',\n    icon: 'down-square',\n    componentName: 'Select'\n});\n","import React, { Component } from 'react';\nimport { Input, Radio, Form } from 'antd';\nconst FormItem = Form.Item;\nconst RadioGroup = Radio.Group;\n\ninterface ConfigItemProps {\n    type: string;\n    name: string;\n    label: string;\n    form: any;\n    formItemLayout: any;\n    defaultValue: any;\n}\n\n/**\n * boolean表单数据自动生成\n */\nexport default class ConfigItem extends Component<ConfigItemProps> {\n    state = { }\n\n    renderContent(type, otherProps) {\n        let content;\n\n        switch (type) {\n            case 'boolean':\n                content = (\n                    <RadioGroup {...otherProps}>\n                        <Radio value={true}>true</Radio>\n                        <Radio value={false}>false</Radio>\n                    </RadioGroup>\n                );\n                break;\n            default:\n                content = (\n                    <Input {...otherProps} />\n                );\n                break;\n        }\n\n        return content;\n    }\n\n    render() {\n        const { name, label, form, formItemLayout, defaultValue, type, ...otherProps } = this.props;\n\n        return (\n            <FormItem\n                label={label}\n                {...formItemLayout}\n            >\n                {\n\n                    form.getFieldDecorator(name, {\n                        initialValue: defaultValue\n                    })(this.renderContent(type, otherProps))\n                }\n            </FormItem>\n        );\n    }\n}\n","import React, {Component} from 'react';\nimport {Form, Input, Icon, Button} from 'antd';\n\nlet id = 0;\n\ninterface DynamicConfigItemProps {\n    form: any;\n    label: string;\n    name: string;\n    addText: string;\n    defaultValue: any[];\n}\n\nexport default class DynamicConfigItem extends Component<DynamicConfigItemProps> {\n    remove = (k) => {\n        const {form} = this.props;\n        // can use data-binding to get\n        const keys = form.getFieldValue('keys');\n        // We need at least one passenger\n        if (keys.length === 1) {\n            return;\n        }\n\n        // can use data-binding to set\n        form.setFieldsValue({\n            keys: keys.filter((key) => key !== k),\n        });\n    };\n\n    add = () => {\n        const {form} = this.props;\n        // can use data-binding to get\n        const keys = form.getFieldValue('keys');\n        const nextKeys = keys.concat(id++);\n        // can use data-binding to set\n        // important! notify form to detect changes\n        form.setFieldsValue({\n            keys: nextKeys,\n        });\n    };\n\n    render() {\n        const {getFieldDecorator, getFieldValue} = this.props.form;\n        const {label, name, addText, defaultValue = []} = this.props;\n        const formItemLayout = {\n            labelCol: {\n                xs: {span: 24},\n                sm: {span: 4},\n            },\n            wrapperCol: {\n                xs: {span: 24},\n                sm: {span: 20},\n            },\n        };\n        const formItemLayoutWithOutLabel = {\n            wrapperCol: {\n                xs: {span: 24, offset: 0},\n                sm: {span: 20, offset: 4},\n            },\n        };\n        getFieldDecorator('keys', {initialValue: defaultValue.map((item, index) => index)});\n        const keys = getFieldValue('keys');\n        const formItems = keys.map((k, index) => (\n            <Form.Item\n                {...(index === 0 ? formItemLayout : formItemLayoutWithOutLabel)}\n                label={index === 0 ? label : ''}\n                required={false}\n                key={k}\n            >\n                {getFieldDecorator(`${name}[${k}].label`, {\n                    validateTrigger: ['onChange', 'onBlur'],\n                    rules: [\n                        {\n                            required: true,\n                            whitespace: true,\n                            message: '请填写label',\n                        },\n                    ],\n                    initialValue: defaultValue[k] ? defaultValue[k].label : undefined\n                })(<Input placeholder=\"请填写label\" style={{width: '40%', marginRight: 8}}/>)}\n                {getFieldDecorator(`${name}[${k}].props.value`, {\n                    validateTrigger: ['onChange', 'onBlur'],\n                    rules: [\n                        {\n                            required: true,\n                            whitespace: true,\n                            message: '请填写value',\n                        },\n                    ],\n                    initialValue: defaultValue[k] ? defaultValue[k].props.value : undefined\n                })(<Input placeholder=\"请填写value\" style={{width: '40%', marginRight: 8}}/>)}\n                {keys.length > 1 ? (\n                    <Icon\n                        className=\"dynamic-delete-button\"\n                        type=\"minus-circle-o\"\n                        onClick={() => this.remove(k)}\n                    />\n                ) : null}\n            </Form.Item>\n        ));\n        return (\n            <React.Fragment>\n                {formItems}\n                <Form.Item {...formItemLayoutWithOutLabel}>\n                    <Button type=\"dashed\" onClick={this.add} style={{width: '60%'}}>\n                        <Icon type=\"plus\"/> {addText}\n                    </Button>\n                </Form.Item>\n            </React.Fragment>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport { Form, Input, Button, Row, Col, Card } from 'antd';\nimport ConfigItem from './ConfigItem';\nimport DynamicConfigItem from './DynamicConfigItem';\nimport { ALIAS, FORMITEM_LAYOUT } from 'Src/utils/constants';\nimport { findComponent, saveComponent } from 'Src/utils';\n\nconst FormItem = Form.Item;\nconst KEY = 'key';\nconst LABEL = 'label';\n\ninterface ConfigProps {\n    form: any;\n    pageJSON: any;\n    onSave(pageJSON: any): void;\n}\n\ninterface ConfigState {\n    formData: any;\n    isTouch: boolean;\n    current: any;\n}\n\nconst selectProps = [\n    {\n        name: 'placeholder',\n        label: ALIAS.PLACEHOLDER,\n        type: 'input',\n        placeholder: '例如：请选择订单类型'\n    },\n    {\n        name: 'allowClear',\n        label: '允许清空',\n        type: 'boolean'\n    },\n    {\n        name: 'disabled',\n        label: '是否禁用',\n        type: 'boolean'\n    },\n    {\n        name: 'showSearch',\n        label: '展示搜索',\n        type: 'boolean'\n    }\n];\n\nclass Config extends Component<ConfigProps, ConfigState> {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            formData: {},\n            isTouch: false,\n            current: {\n                id: '',\n                props: {}\n            }\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (!state.isTouch) {\n            const { pageJSON } = props;\n            const { components } = pageJSON;\n            const current = findComponent(components);\n            return {\n                formData: {\n                    [KEY]: current[KEY],\n                    [LABEL]: current[LABEL],\n                    props: current.props,\n                    options: current.options\n                },\n                current\n            };\n        } else {\n            return state;\n        }\n    }\n\n    handleSave = () => {\n        this.props.form.validateFields((err, fieldValues) => {\n            if (!err) {\n                this.setState({\n                    formData: {\n                        ...fieldValues\n                    },\n                    isTouch: true\n                });\n                const { current } = this.state;\n                const { options, props: fieldProps } = fieldValues;\n                const { pageJSON, onSave } = this.props;\n                pageJSON.components = saveComponent(current.id, pageJSON.components, {\n                    key: fieldValues.key,\n                    label: fieldValues.label || '',\n                    props: {\n                        ...fieldProps\n                    },\n                    options\n                });\n                onSave && onSave(pageJSON);\n            }\n        });\n    }\n\n    handleChange = (key, e) => {\n        const { formData } = this.state;\n        const value = e.target.value;\n        this.setState({\n            formData: {\n                ...formData,\n                [key]: value\n            },\n            isTouch: true\n        });\n    };\n\n    render() {\n        const { formData } = this.state;\n        const { form } = this.props;\n        const { getFieldDecorator } = form;\n        return <div>\n            <FormItem\n                label={ALIAS.KEY}\n                {...FORMITEM_LAYOUT}\n            >\n                {\n                    getFieldDecorator('key', {\n                        rules: [\n                            {required: true, message: '请输入表单字段名'}\n                        ],\n                        initialValue: formData[KEY]\n                    })(\n                        <Input\n                            placeholder='例如： orderType'\n                        />\n                    )\n                }\n\n            </FormItem>\n            <FormItem\n                label={ALIAS.LABEL}\n                {...FORMITEM_LAYOUT}\n            >\n                {\n                    getFieldDecorator('label', {\n                        rules: [\n                            {required: true, message: '请输入表单项名称'}\n                        ],\n                        initialValue: formData[LABEL]\n                    })(\n                        <Input\n                            placeholder='例如： 订单类型'\n                        />\n                    )\n                }\n\n            </FormItem>\n            <Card title=\"Select Props 配置\">\n                {\n                    selectProps.map((item, index) => {\n                        const { type, name, label, ...otherProps } = item;\n\n                        return (\n                            <ConfigItem\n                                key={index}\n                                type={type}\n                                name={`props.${name}`}\n                                label={label}\n                                defaultValue={formData.props ? formData.props[item.name] : undefined}\n                                form={form}\n                                formItemLayout={FORMITEM_LAYOUT}\n                                {...otherProps}\n                            />\n                        );\n                    })\n                }\n            </Card>\n            <Card title=\"Option 配置\">\n                <DynamicConfigItem\n                    form={form}\n                    name=\"options\"\n                    label=\"下拉选项\"\n                    addText=\"添加选项\"\n                    defaultValue={formData.options}\n                />\n            </Card>\n            <FormItem>\n                <Row>\n                    <Col>\n                        <Button\n                            onClick={this.handleSave}\n                            type='primary'\n                        >确定</Button>\n                    </Col>\n                </Row>\n            </FormItem>\n        </div>;\n    }\n}\n\n// @ts-ignore\nexport default Form.create<ConfigProps>()(Config);\n","import React, { Component } from 'react';\nimport { Select, Form } from 'antd';\nimport { getInitJson, getTools } from './utils';\nimport Config from './config';\nimport { SelectProps, OptionData } from './interface';\nimport { FORMITEM_LAYOUT } from 'Src/utils/constants';\n\nconst Option = Select.Option;\n\ninterface KSelectProps extends SelectProps {\n    config: {\n        options: OptionData[];\n        label: string;\n    };\n}\n\nclass KSelect extends Component<KSelectProps> {\n\n    render() {\n        const { allowClear, disabled, placeholder, showSearch, config } = this.props;\n        const { options = [], label } = config;\n        const selectProps = {\n            allowClear,\n            disabled,\n            placeholder,\n            showSearch\n        };\n        return (\n            <Form.Item\n                label={label}\n                {...FORMITEM_LAYOUT}\n                style={{ marginBottom: 0 }}\n            >\n                <Select\n                    {...selectProps}\n                    optionFilterProp=\"children\"\n                    style={{\n                        width: '300px'\n                    }}\n                    filterOption={(input, option: any) => {\n                        return option.props.value.toLowerCase().indexOf(input.toLowerCase()) > -1 ||\n                            option.props.children.toLowerCase().indexOf(input.toLowerCase()) > -1;\n                    }}\n                >\n                    {\n                        options.map((item, index) => {\n                            return <Option key={index} value={item.props.value}>{item.label}</Option>;\n                        })\n                    }\n                </Select>\n            </Form.Item>\n        );\n    }\n}\n\nexport {\n    KSelect as component,\n    getInitJson,\n    getTools,\n    Config as config\n};\n","/**\n * 获取初始化JSON\n */\nexport const getInitJson = () => ({\n    stateName: '',\n    componentName: 'DatePicker',\n    source: 'antd',\n    default: false,\n    key: '',\n    label: ''\n});\n\n/**\n * 获取组件Tools配置\n */\nexport const getTools = () => ({\n    name: 'DatePicker',\n    icon: 'calendar',\n    componentName: 'DatePicker'\n});\n","import React, {Component} from 'react';\nimport {Form, Radio, Button, Row, Col, Input} from 'antd';\nimport PropTypes from 'prop-types';\nimport { ALIAS, FORMITEM_LAYOUT } from 'Src/utils/constants';\nimport { findComponent, saveComponent } from 'Src/utils';\n\nconst FormItem = Form.Item;\n\nconst PLACEHOLDER = 'placeholder';\nconst FORMAT = 'format';\nconst SHOW_TIME = 'showTime';\nconst KEY = 'key';\nconst LABEL = 'label';\n\ninterface ConfigProps {\n    pageJSON: any;\n    onSave(pageJSON: any): void;\n}\n\nexport default class Config extends Component<ConfigProps> {\n    static propTypes = {\n        onSave: PropTypes.func\n    };\n\n    state = {\n        showTime: true,\n        format: 'YYYY-MM-DD',\n        placeholder: '',\n        key: '',\n        label: '',\n        current: {\n            id: '',\n            props: {}\n        },\n        isTouch: false,\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        if (!state.isTouch) {\n            const { pageJSON } = props;\n            const { components } = pageJSON;\n            const current = findComponent(components);\n            return {\n                current\n            };\n        } else {\n            return state;\n        }\n    }\n\n    handleSave = () => {\n        const { placeholder, showTime, format, key, label, current } = this.state;\n        const {pageJSON, onSave} = this.props;\n        pageJSON.components = saveComponent(current.id, pageJSON.components, {\n            [KEY]: key,\n            [LABEL]: label,\n            props: {\n                ...current.props,\n                [PLACEHOLDER]: placeholder,\n                [SHOW_TIME]: showTime,\n                [FORMAT]: format,\n            }\n        });\n        onSave && onSave(pageJSON);\n    };\n\n    handleChange = (key: string, e: any) => {\n        const value = e.target.value;\n        this.setState({\n            [key]: value,\n            isTouch: true\n        });\n    };\n\n    render() {\n        const {placeholder, format, showTime, key, label} = this.state;\n        return <div>\n            <FormItem\n                label={ALIAS.KEY}\n                {...FORMITEM_LAYOUT}\n            >\n                <Input\n                    value={key}\n                    placeholder='例如： name'\n                    onChange={this.handleChange.bind(this, KEY)}\n                />\n            </FormItem>\n            <Form.Item\n                {...FORMITEM_LAYOUT}\n                label={ALIAS.LABEL}\n            >\n                <Input\n                    value={label}\n                    placeholder='例如： label'\n                    onChange={this.handleChange.bind(this, LABEL)}\n                />\n            </Form.Item>\n            <FormItem\n                label='是否可选时间'\n                {...FORMITEM_LAYOUT}\n            >\n                <Radio.Group onChange={this.handleChange.bind(this, SHOW_TIME)} value={showTime}>\n                    <Radio value={true}>是</Radio>\n                    <Radio value={false}>否</Radio>\n                </Radio.Group>\n            </FormItem>\n            <FormItem\n                label={ALIAS.PLACEHOLDER}\n                {...FORMITEM_LAYOUT}\n            >\n                <Input\n                    value={placeholder}\n                    onChange={this.handleChange.bind(this, PLACEHOLDER)}\n                />\n            </FormItem>\n            <FormItem\n                label={'日期格式'}\n                {...FORMITEM_LAYOUT}\n            >\n                <Input\n                    value={format}\n                    placeholder='YYYY-MM-DD HH:mm:ss'\n                    onChange={this.handleChange.bind(this, FORMAT)}\n                />\n            </FormItem>\n            <FormItem>\n                <Row>\n                    <Col>\n                        <Button\n                            onClick={this.handleSave}\n                            type='primary'\n                        >确定</Button>\n                    </Col>\n                </Row>\n            </FormItem>\n        </div>;\n    }\n}\n","import React, {Component} from 'react';\nimport {DatePicker, Form} from 'antd';\nimport PropTypes from 'prop-types';\nimport {getInitJson, getTools} from './utils';\nimport { FORMITEM_LAYOUT } from 'Src/utils/constants';\nimport Config from './config';\n\ninterface KSDatePicker {\n    label: string;\n    config: any;\n    generatePage: {\n        pageJSON: any\n    }\n}\n\nclass KDatePicker extends Component<KSDatePicker> {\n    static propTypes = {\n        props: PropTypes.object,\n    };\n\n    static defaultProps = {\n        label: '时间选择 '\n    }\n\n    render() {\n        const { config, generatePage, ...OtherProps } = this.props;\n        const { label } = config;\n        return (\n            <Form.Item\n                label={label || '时间选择'}\n                {...FORMITEM_LAYOUT}\n                style={{ marginBottom: 0 }}\n            >\n                <DatePicker\n                    {...OtherProps}\n                    style={{\n                        width: '300px',\n                    }}\n                />\n            </Form.Item>\n        );\n    }\n}\n\nexport {\n    KDatePicker as component,\n    getInitJson,\n    getTools,\n    Config as config\n};\n","/**\n * 获取初始化JSON\n */\nexport const getInitJson = () => ({\n    stateName: '',\n    componentName: 'InputNumber',\n    source: 'antd',\n    default: false,\n    key: '', // 唯一\n    label: '数字框', // 名称\n    props: {\n        min: '', // 最小值\n        max: '', // 最大值\n        defaultValue: '', // 默认值\n        placeholder: '',\n        disabled: false, // 是否禁用\n        precision: 0, // 精度\n        step: 1 // 步数\n    }\n});\n\n/**\n * 获取组件Tools配置\n */\nexport const getTools = () => ({\n    name: 'InputNumber',\n    icon: 'number',\n    componentName: 'InputNumber'\n});\n","import React, { Component } from 'react';\nimport { Form, Input, InputNumber, Button, Row, Col, Radio, message } from 'antd';\nimport PropTypes from 'prop-types';\nimport {FormComponentProps} from 'antd/es/form';\nimport { ALIAS, FORMITEM_LAYOUT } from 'Src/utils/constants';\nimport { findComponent, saveComponent } from 'Src/utils';\n\nconst FormItem = Form.Item;\nconst LABEL = 'label';\nconst DEFAULT_VALUE = 'initialValue';\nconst PLACEHOLDER = 'placeholder';\nconst MIN_VALUE = 'min';\nconst MAX_VALUE = 'max';\nconst DISABLED = 'disabled';\nconst PRECISION = 'precision';\nconst STEP = 'step';\nconst KEY = 'key';\n\ninterface InputConfigProps extends FormComponentProps{\n    pageJSON: any;\n    onSave(pageJSON: any): void;\n}\n\nclass InputNumberConfig extends Component<InputConfigProps> {\n    static propTypes = {\n        onSave: PropTypes.func\n    };\n\n    state={\n        formData: {\n        },\n        isTouch: false,\n        current: {\n            id: '',\n            props: {}\n        }\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        if (!state.isTouch) {\n            const { pageJSON } = props;\n            const { components } = pageJSON;\n            const current = findComponent(components);\n            return {\n                formData: {\n                    ...current.props,\n                    [DEFAULT_VALUE]: current[DEFAULT_VALUE],\n                    [KEY]: current[KEY],\n                    [LABEL]: current[LABEL],\n                },\n                current\n            };\n        } else {\n            return state;\n        }\n    }\n\n    handleSave = () => {\n        this.props.form.validateFields((err, fieldValues) => {\n            if (!err) {\n                if (fieldValues[MIN_VALUE] > fieldValues[MAX_VALUE]) {\n                    message.error('最小值不能大于最大值！');\n                    return;\n                }\n                const { current } = this.state;\n                const { pageJSON, onSave } = this.props;\n                const key = fieldValues[KEY];\n                const label = fieldValues[LABEL];\n                const initialValue = fieldValues[DEFAULT_VALUE];\n                delete fieldValues[KEY];\n                delete fieldValues[LABEL];\n                delete fieldValues[DEFAULT_VALUE];\n                pageJSON.components = saveComponent(current.id, pageJSON.components, {\n                    [KEY]: key,\n                    [LABEL]: label,\n                    [DEFAULT_VALUE]: initialValue,\n                    props: {\n                        ...current.props,\n                        ...fieldValues,\n                    }\n                });\n                onSave && onSave(pageJSON);\n            }\n        });\n    }\n\n    render() {\n        const { getFieldDecorator } = this.props.form;\n        const { formData } = this.state;\n        return <div>\n            <FormItem\n                label={ALIAS.KEY}\n                {...FORMITEM_LAYOUT}\n            >\n                {\n                    getFieldDecorator(KEY, {\n                        rules: [\n                            {required: true, message: '请输入表单key'}\n                        ],\n                        initialValue: formData[KEY]\n                    })(\n                        <Input\n                            placeholder='例如:inputnumber'\n                        />\n                    )\n                }\n            </FormItem>\n            <FormItem\n                label={ALIAS.LABEL}\n                {...FORMITEM_LAYOUT}\n            >\n                {\n                    getFieldDecorator(LABEL, {\n                        initialValue: formData[LABEL]\n                    })(\n                        <Input\n                            placeholder='例如:inputnumber'\n                        />\n                    )\n                }\n            </FormItem>\n            <FormItem\n                label={ALIAS.PLACEHOLDER}\n                {...FORMITEM_LAYOUT}\n            >\n                {\n                    getFieldDecorator(PLACEHOLDER, {\n                        initialValue: formData[PLACEHOLDER]\n                    })(\n                        <Input\n                            placeholder='例如:inputnumber'\n                        />\n                    )\n                }\n            </FormItem>\n            <FormItem\n                label={'默认值'}\n                {...FORMITEM_LAYOUT}\n            >\n                {\n                    getFieldDecorator(DEFAULT_VALUE, {\n                        initialValue: formData[DEFAULT_VALUE]\n                    })(\n                        <InputNumber\n                            placeholder='例如:1'\n                        />\n                    )\n                }\n            </FormItem>\n            <FormItem\n                label={'最小值'}\n                {...FORMITEM_LAYOUT}\n            >\n                {\n                    getFieldDecorator(MIN_VALUE, {\n                        initialValue: formData[MIN_VALUE]\n                    })(\n                        <InputNumber\n                            placeholder='例如:1'\n                        />\n                    )\n                }\n            </FormItem>\n            <FormItem\n                label={'最大值'}\n                {...FORMITEM_LAYOUT}\n            >\n                {\n                    getFieldDecorator(MAX_VALUE, {\n                        initialValue: formData[MAX_VALUE]\n                    })(\n                        <InputNumber\n                            placeholder='例如:100'\n                        />\n                    )\n                }\n            </FormItem>\n            <FormItem\n                label={'是否禁用'}\n                {...FORMITEM_LAYOUT}\n            >\n                {\n                    getFieldDecorator(DISABLED, {\n                        initialValue: formData[DISABLED]\n                    })(\n                        <Radio.Group>\n                            <Radio value={true}>true</Radio>\n                            <Radio value={false}>false</Radio>\n                        </Radio.Group>\n                    )\n                }\n            </FormItem>\n            <FormItem\n                label={'数值精度'}\n                {...FORMITEM_LAYOUT}\n            >\n                {\n                    getFieldDecorator(PRECISION, {\n                        initialValue: formData[PRECISION]\n                    })(\n                        <InputNumber\n                            max={100}\n                            placeholder='例如:100'\n                        />\n                    )\n                }\n            </FormItem>\n            <FormItem\n                label={'每次改变步数'}\n                {...FORMITEM_LAYOUT}\n            >\n                {\n                    getFieldDecorator(STEP, {\n                        initialValue: formData[STEP]\n                    })(\n                        <InputNumber\n                            placeholder='例如:1'\n                        />\n                    )\n                }\n            </FormItem>\n            <FormItem>\n                <Row>\n                    <Col>\n                        <Button\n                            onClick={this.handleSave}\n                            type='primary'\n                        >确定</Button>\n                    </Col>\n                </Row>\n            </FormItem>\n        </div>;\n    }\n}\n\n// @ts-ignore\nexport default Form.create<InputConfigProps>()(InputNumberConfig);\n","import React, { Component } from 'react';\nimport { InputNumber, Form } from 'antd';\nimport PropTypes from 'prop-types';\nimport { getInitJson, getTools } from './utils';\nimport InputConfig from './config';\nimport { FORMITEM_LAYOUT } from 'Src/utils/constants';\n\ninterface KInputNumberProps {\n    label: string;\n    config: any;\n    defaultValue: number;\n}\n\nclass KInputNumber extends Component<KInputNumberProps> {\n    static propTypes = {\n        props: PropTypes.object\n    };\n\n    static defaultProps = {\n        label: '数字框'\n    };\n\n    render() {\n        const {config, ...other} = this.props;\n        const { label = '' } = config;\n        let props: { value?: number; [name: string]: any } = {};\n        props = other;\n        if ('defaultValue' in other) {\n            props.value = other.defaultValue;\n            delete props.defaultValue;\n        }\n        return (\n            <Form.Item\n                {...FORMITEM_LAYOUT}\n                style={{marginBottom: 0}}\n                label={label}>\n                <InputNumber\n                    {...props}\n                />\n            </Form.Item>\n\n        );\n    }\n}\n\nexport {\n    KInputNumber as component,\n    getInitJson,\n    getTools,\n    InputConfig as config\n};\n","/**\n * 获取初始化JSON\n */\nexport const getInitJson = () => ({\n    stateName: '',\n    componentName: 'RangePicker',\n    source: 'antd',\n    default: false,\n    key: '',\n    label: '时间区间',\n    parentComponentName: 'DatePicker',\n    props: {\n        placeholder: ['开始时间', '截止时间']\n    }\n});\n\n/**\n * 获取组件Tools配置\n */\nexport const getTools = () => ({\n    name: 'RangePicker',\n    icon: 'calendar',\n    componentName: 'RangePicker'\n});\n","import React, { Component } from 'react';\nimport { Form, Input, Button, Row, Col, Switch } from 'antd';\nimport PropTypes from 'prop-types';\nimport {FormComponentProps} from 'antd/es/form';\nimport { ALIAS, FORMITEM_LAYOUT } from 'Src/utils/constants';\nimport { findComponent, saveComponent } from 'Src/utils';\n\nconst FormItem = Form.Item;\nconst DATE_FORMAT = 'YYYY-MM-DD';\nconst TIME_FORMAT = 'HH:mm:ss';\nconst KEY = 'key';\nconst LABEL = 'label';\nconst PLACEHOLDER = 'placeholder';\nconst FORMAT = 'format';\nconst SHOWTIME = 'showTime';\n// const SHOWTIMEFORMAT = 'showTimeFormat';\n\ninterface RangePickerConfigProps extends FormComponentProps {\n    pageJSON: any;\n    onSave(pageJSON: any): void;\n}\n\nclass RangePickerConfig extends Component<RangePickerConfigProps> {\n    static propTypes = {\n        onSave: PropTypes.func\n    };\n\n    state={\n        formData: {\n            props: {}\n        },\n        isTouch: false,\n        current: {\n            id: '',\n            props: {}\n        }\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        if (!state.isTouch) {\n            const { pageJSON } = props;\n            const { components } = pageJSON;\n            const current = findComponent(components);\n            return {\n                formData: {\n                    [KEY]: current[KEY],\n                    [LABEL]: current[LABEL],\n                    props: current.props\n                },\n                current\n            };\n        } else {\n            return state;\n        }\n    }\n\n    handleSave = () => {\n        this.props.form.validateFields((err, fieldValues) => {\n            if (!err) {\n                this.setState({\n                    formData: {\n                        ...fieldValues\n                    },\n                    isTouch: true\n                });\n                const { current } = this.state;\n                const {props: fieldProps} = fieldValues;\n                const { pageJSON, onSave } = this.props;\n                const formData = {\n                    key: fieldValues.key,\n                    label: fieldValues.label || '',\n                    props: {\n                        ...current.props,\n                        placeholder: [],\n                        format: fieldProps.format,\n                        showTime: fieldProps.showTimeFormat ? { format: fieldProps.showTimeFormat } : fieldProps.showTime,\n                    }\n                };\n                if (fieldProps.placeholder) {\n                    formData.props.placeholder = fieldProps.placeholder.split('/');\n                }\n                pageJSON.components = saveComponent(current.id, pageJSON.components, formData);\n                onSave && onSave(pageJSON);\n            }\n        });\n    }\n\n    render() {\n        const { getFieldDecorator, getFieldValue, setFieldsValue } = this.props.form;\n        const { formData, formData: {props: stateProps} } = this.state;\n        return <div>\n            <FormItem\n                label={ALIAS.KEY}\n                {...FORMITEM_LAYOUT}\n            >\n                {\n                    getFieldDecorator('key', {\n                        rules: [\n                            {required: true, message: `请输入${ALIAS.KEY}`}\n                        ],\n                        initialValue: formData[KEY]\n                    })(\n                        <Input\n                            placeholder='例如： rangePicker'\n                        />\n                    )\n                }\n\n            </FormItem>\n            <FormItem\n                label={ALIAS.LABEL}\n                {...FORMITEM_LAYOUT}\n            >\n                {\n                    getFieldDecorator('label', {\n                        initialValue: formData[LABEL]\n                    })(\n                        <Input\n                            placeholder='例如： 时间区间'\n                        />\n                    )\n                }\n            </FormItem>\n            <FormItem\n                label={ALIAS.PLACEHOLDER}\n                {...FORMITEM_LAYOUT}\n            >\n                {\n                    getFieldDecorator('props.placeholder', {\n                        rules: [\n                            {\n                                validator: (rule, value, callback) => {\n                                    if (!value) {\n                                        callback();\n                                    }\n                                    if (value && !/^[^/\\s]+\\/[^/\\s]+$/.test(value)) {\n                                        callback(rule.message);\n                                    }\n                                    callback();\n                                },\n                                message: '用/分割的两个名称'\n                            }\n                        ],\n                        initialValue: stateProps[PLACEHOLDER] ? stateProps[PLACEHOLDER].join('/') : '开始时间/截止时间'\n                    })(\n                        <Input\n                            placeholder='例如： 开始时间/截止时间'\n                        />\n                    )\n                }\n            </FormItem>\n            <FormItem\n                label={ALIAS.DATE_FORMAT}\n                {...FORMITEM_LAYOUT}\n            >\n                {\n                    getFieldDecorator('props.format', {\n                        rules: [\n                            {\n                                validator: (rule, value, callback) => {\n                                    if (!value) {\n                                        callback();\n                                    }\n                                    if (value && getFieldValue('showTime') && !/^[^/\\s]+ [^/\\s]+$/.test(value)) {\n                                        callback(rule.message);\n                                    }\n                                    callback();\n                                },\n                                message: '日期格式化不正确'\n                            }\n                        ],\n                        initialValue: stateProps[FORMAT] || `${DATE_FORMAT} ${TIME_FORMAT}`\n                    })(\n                        <Input\n                            placeholder={`例如：${DATE_FORMAT} ${TIME_FORMAT}`}\n                        />\n                    )\n                }\n            </FormItem>\n            <FormItem\n                label={ALIAS.SHOW_TIME}\n                {...FORMITEM_LAYOUT}\n            >\n                {\n                    getFieldDecorator('props.showTime', {\n                        valuePropName: 'checked',\n                        initialValue: (stateProps[SHOWTIME] || stateProps[SHOWTIME] === false) ? stateProps[SHOWTIME] : true\n                    })(\n                        <Switch\n                            onChange={(value) => {\n                                if (!value) {\n                                    setFieldsValue({'props.format': DATE_FORMAT});\n                                } else {\n                                    setFieldsValue({'props.format': `${DATE_FORMAT} ${TIME_FORMAT}`});\n                                }\n                            }}\n                        />\n                    )\n                }\n            </FormItem>\n            {\n                getFieldValue('props.showTime') && <FormItem\n                    label={ALIAS.TIME_FORMAT}\n                    {...FORMITEM_LAYOUT}\n                >\n                    {\n                        getFieldDecorator('props.showTimeFormat', {\n                            initialValue: (typeof stateProps[SHOWTIME]) === 'object' ? stateProps[SHOWTIME].format : ''\n                        })(\n                            <Input\n                                placeholder={`例如：${TIME_FORMAT}`}\n                            />\n                        )\n                    }\n                </FormItem>\n            }\n            <FormItem>\n                <Row>\n                    <Col>\n                        <Button\n                            onClick={this.handleSave}\n                            type='primary'\n                        >确定</Button>\n                    </Col>\n                </Row>\n            </FormItem>\n        </div>;\n    }\n}\n\n// @ts-ignore\nexport default Form.create<RangePickerConfigProps>()(RangePickerConfig);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport {DatePicker, Form} from 'antd';\nimport { getInitJson, getTools } from './utils';\nimport RangePickerConfig from './config';\nimport { FORMITEM_LAYOUT } from 'Src/utils/constants';\n\ninterface KRangePickerProps {\n    config: any;\n}\n\nconst RangePicker = DatePicker.RangePicker;\n\nclass KRangePicker extends Component<KRangePickerProps> {\n\n    static propTypes = {\n        props: PropTypes.object\n    };\n\n    render() {\n        const { config, ...OtherProps } = this.props;\n        const { label = '' } = config;\n        return (\n            <Form.Item\n                {...FORMITEM_LAYOUT}\n                style={{ marginBottom: 0 }}\n                label={label}\n            >\n                <RangePicker\n                    {...OtherProps}\n                />\n            </Form.Item>\n        );\n    }\n}\n\nexport {\n    KRangePicker as component,\n    getInitJson,\n    getTools,\n    RangePickerConfig as config\n};\n","/**\n * 获取初始化JSON\n */\nexport const getInitJson = () => ({\n    stateName: '',\n    componentName: 'TextArea',\n    source: 'antd',\n    default: false,\n    props: {\n        key: '',\n        rows: '',\n        placeholder: '',\n    }\n});\n\n/**\n * 获取组件Tools配置\n */\nexport const getTools = () => ({\n    name: 'TextArea',\n    icon: 'edit',\n    componentName: 'TextArea'\n});\n","import React, { Component } from 'react';\nimport { Form, Input, Button, Row, Col } from 'antd';\nimport PropTypes from 'prop-types';\nimport { ALIAS, FORMITEM_LAYOUT } from 'Src/utils/constants';\nimport { findComponent, saveComponent } from 'Src/utils';\n\nconst FormItem = Form.Item;\n\nconst KEY = 'key';\nconst Label = 'label';\nconst Rows = 'rows';\nconst Placeholder = 'placeholder';\n\ninterface InputConfigProps{\n    pageJSON: any;\n    onSave(pageJSON: any): void;\n}\n\nexport default class TextAreaConfig extends Component<InputConfigProps> {\n    static propTypes = {\n        onSave: PropTypes.func\n    };\n\n    state={\n        formData: {\n\n        },\n        isTouch: false,\n        current: {\n            id: '',\n            props: {}\n        }\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        if (!state.isTouch) {\n            const { pageJSON } = props;\n            const { components } = pageJSON;\n            const current = findComponent(components);\n            return {\n                formData: {\n                    [KEY]: current[KEY],\n                    [Rows]: current[Rows],\n                    [Label]: current[Label],\n                    [Placeholder]: current[Placeholder]\n                },\n                current\n            };\n        } else {\n            return state;\n        }\n    }\n\n    handleSave = () => {\n        const { formData, current } = this.state;\n        const { pageJSON, onSave } = this.props;\n        pageJSON.components = saveComponent(current.id, pageJSON.components, {\n            ...formData,\n            props: {\n                ...current.props,\n                ...formData,\n            }\n        });\n        onSave && onSave(pageJSON);\n    }\n\n    handleChange = (key, e) => {\n        const { formData } = this.state;\n        const value = e.target.value;\n        this.setState({\n            formData: {\n                ...formData,\n                [key]: value\n            },\n            isTouch: true\n        });\n    };\n\n    render() {\n        const { formData } = this.state;\n        return <div>\n            <FormItem\n                label={ALIAS.KEY}\n                {...FORMITEM_LAYOUT}\n            >\n                <Input\n                    value={formData[KEY]}\n                    placeholder='例如： name'\n                    onChange={this.handleChange.bind(this, KEY)}\n                />\n            </FormItem>\n            <FormItem\n                label={ALIAS.LABEL}\n                {...FORMITEM_LAYOUT}\n            >\n                <Input\n                    value={formData[Label]}\n                    placeholder='例如： 备注'\n                    onChange={this.handleChange.bind(this, Label)}\n                />\n            </FormItem>\n            <FormItem\n                label={ALIAS.PLACEHOLDER}\n                {...FORMITEM_LAYOUT}\n            >\n                <Input\n                    value={formData[Placeholder]}\n                    placeholder='例如： 请输入备注信息'\n                    onChange={this.handleChange.bind(this, Placeholder)}\n                />\n            </FormItem>\n            <FormItem\n                label={'设置高度'}\n                {...FORMITEM_LAYOUT}\n            >\n                <Input\n                    value={formData[Rows]}\n                    placeholder='例如： 4'\n                    onChange={this.handleChange.bind(this, Rows)}\n                />\n            </FormItem>\n            <FormItem>\n                <Row>\n                    <Col>\n                        <Button\n                            onClick={this.handleSave}\n                            type='primary'\n                        >确定</Button>\n                    </Col>\n                </Row>\n            </FormItem>\n        </div>;\n    }\n}\n","import React, { Component } from 'react';\nimport { Input, Form } from 'antd';\nimport PropTypes from 'prop-types';\nimport { getInitJson, getTools } from './utils';\nimport TextAreaConfig from './config';\nimport { FORMITEM_LAYOUT } from 'Src/utils/constants';\n\nconst { TextArea } = Input;\n\ninterface KKTextArea {\n    label: string;\n    generatePage: {\n        pageJSON: any\n    }\n}\n\nclass KTextArea extends Component<KKTextArea> {\n    static propTypes = {\n        props: PropTypes.object\n    }\n\n    static defaultProps = {\n        label: '备注信息'\n    }\n\n    render() {\n        const { label, generatePage, ...OtherProps } = this.props;\n        return (\n            <Form.Item\n                {...FORMITEM_LAYOUT}\n                label={label}\n                style={{ marginBottom: 0 }}\n            >\n                <TextArea style={{ width: '300px' }} {...OtherProps} />\n            </Form.Item>\n        );\n    }\n}\n\nexport {\n    KTextArea as component,\n    getInitJson,\n    getTools,\n    TextAreaConfig as config\n};\n","/**\n * 获取初始化JSON\n */\nexport const getInitJson = () => ({\n    stateName: '',\n    componentName: 'Radio',\n    source: 'antd',\n    default: false,\n    defaultValue: 1,\n    isRequired: true,\n    key: 'status',\n    label: '状态',\n    options: [{value: 1, disabled: false, rowKey: 1, text: '启用' },\n        { value: 0, disabled: false, rowKey: 2, text: '禁用' }\n    ],\n});\n\n/**\n * 获取组件Tools配置\n */\nexport const getTools = () => ({\n    name: 'Radio',\n    icon: 'edit',\n    componentName: 'Radio'\n});\n","import React, { Component } from 'react';\nimport { Input, Button, Row, Col, Icon, Switch, Alert, Table, Form } from 'antd';\nimport PropTypes from 'prop-types';\nimport { ALIAS } from 'Src/utils/constants';\nimport { findComponent, saveComponent } from 'Src/utils';\n\nconst VALUE = 'value';\nconst LABEL = 'label';\nconst TEXT = 'text';\nconst CHECK = 'checked';\nconst DISABLED = 'disabled';\nconst OPTIONS = 'options';\nconst KEY = 'key';\nconst ROW_KEY = 'rowKey';\nconst formItemLayout = {\n    labelCol: {\n        xs: { span: 24 },\n        sm: { span: 6 },\n    },\n    wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 12 },\n    }\n};\ninterface CheckBoxConfigProps {\n    pageJSON: any;\n    onSave(pageJSON: any): void;\n}\n\nexport default class CheckBoxConfig extends Component<CheckBoxConfigProps> {\n    static propTypes = {\n        onSave: PropTypes.func\n    };\n\n    state = {\n        formData: {\n            [OPTIONS]: [{\n                [DISABLED]: false,\n                [VALUE]: '',\n                [TEXT]: '',\n                [ROW_KEY]: 0\n            }],\n            [LABEL]: '',\n            [KEY]: '',\n            isRequired: true,\n            defaultValue: 1\n        },\n        isTouch: false,\n        errMessage: '',\n        // isRequired: true,\n        // defaultValue: 1\n        current: {\n            id: '',\n            props: {}\n        }\n    };\n\n    columns = [\n        {\n            title: '表单项Key',\n            dataIndex: 'value',\n            key: 'value',\n            render: (item, record, index) => <Input\n                value={record[VALUE]}\n                placeholder='例如： 选项'\n                onChange={this.handleChange.bind(this, VALUE, index)}\n            />\n        },\n        {\n            title: '表单项名称',\n            dataIndex: 'text',\n            key: 'text',\n            render: (item, record, index) => <Input\n                value={record[TEXT]}\n                placeholder='例如： 姓名'\n                onChange={this.handleChange.bind(this, TEXT, index)}\n            />\n        },\n        // {\n        //     title: '是否默认选中',\n        //     dataIndex: 'check',\n        //     key: 'check',\n        //     render: (item, record, index) =>\n        //         <Switch\n        //             defaultChecked={record[CHECK]}\n        //             checkedChildren=\"是\"\n        //             unCheckedChildren=\"否\"\n        //             onChange={this.handleChange.bind(this, CHECK, index)}\n        //         />\n        // },\n        {\n            title: '是否禁用',\n            dataIndex: 'disabled',\n            key: 'disabled',\n            render: (item, record, index) =>\n                <Switch\n                    defaultChecked={record[DISABLED]}\n                    checkedChildren=\"是\"\n                    unCheckedChildren=\"否\"\n                    onChange={this.handleChange.bind(this, DISABLED, index)}\n                />\n        },\n        {\n            title: '删除',\n            dataIndex: 'delete',\n            key: 'delete',\n            render: (item, record, index) =>\n                this.state.formData.options.length > 1\n                    ? <Col>\n                        <Icon type=\"close\" onClick={() => { this.handleDeleteChekItem(index); }} />\n                    </Col>\n                    : <></>\n\n        }\n    ];\n\n    static getDerivedStateFromProps(props, state) {\n        if (!state.isTouch) {\n            const { pageJSON } = props;\n            const { components } = pageJSON;\n            const current = findComponent(components);\n            return {\n                formData: {\n                    [OPTIONS]: current.options || [{\n                        [DISABLED]: false,\n                        // [CHECK]: false,\n                        [VALUE]: '',\n                        [TEXT]: '',\n                        [ROW_KEY]: 0\n                    }],\n                    [LABEL]: current.label || '',\n                    [KEY]: current.key || '',\n                    isRequired: state.formData.isRequired,\n                    defaultValue: current.defaultValue || state.formData.defaultValue\n                },\n                current\n            };\n        } else {\n            return state;\n        }\n    }\n\n    /**\n     * @desc 保存修改\n     */\n    handleSave = () => {\n        const { formData, current } = this.state;\n        const { pageJSON, onSave } = this.props;\n        if (!formData.label) {\n            this.setState({\n                errMessage: '请输入表单名称'\n            });\n            return;\n        }\n        for (let i = 0; i < formData.options.length; i++) {\n            const item = formData.options[i];\n            if (!item[TEXT]) {\n                this.setState({\n                    errMessage: '请输入表单项名称'\n                });\n                return;\n            }\n        }\n        pageJSON.components = saveComponent(current.id, pageJSON.components, formData);\n        onSave && onSave(pageJSON);\n    }\n\n    /**\n     * @desc    框内数据发生变化\n     */\n    handleChange = (itemKey, index: number, e) => {\n        const { formData } = this.state;\n        const value = typeof e === 'boolean' ? e : e.target.value;\n        switch (itemKey) {\n            case LABEL:\n                formData.label = value;\n                break;\n            case KEY:\n                formData.key = value;\n                break;\n            case TEXT:\n                formData.options[index][itemKey] = value;\n                break;\n            case CHECK:\n            case DISABLED:\n                formData.options[index][itemKey] = value;\n                break;\n            default:\n                formData.options[index][itemKey] = value;\n                break;\n        }\n        this.setState({\n            formData,\n            isTouch: true\n        });\n    };\n\n    /**\n     * @desc 添加项\n     */\n    handleAddCheck = (): void => {\n        const { formData } = this.state;\n        formData.options.push({\n            [DISABLED]: false,\n            // [CHECK]: false,\n            [VALUE]: '',\n            [TEXT]: '',\n            [ROW_KEY]: formData.options[formData.options.length - 1][ROW_KEY] + 1\n        });\n        this.setState({\n            formData,\n            isTouch: true\n        });\n    }\n\n    /**\n     * @desc 删除项\n     */\n    handleDeleteChekItem = (index) => {\n        const { formData } = this.state;\n        formData.options.splice(index, 1);\n        this.setState({\n            formData\n        });\n    }\n\n    /**\n     * @desc    错误提示关闭\n     */\n    handleAlertClose = () => {\n        this.setState({\n            errMessage: ''\n        });\n    }\n\n    render() {\n        const { formData, errMessage } = this.state;\n        return <>\n            {\n                errMessage\n                    ? <Alert message={errMessage}\n                        type='error'\n                        closable\n                        onClose={this.handleAlertClose}\n                    ></Alert>\n                    : null\n            }\n            <br />\n            <Form.Item\n                {...formItemLayout}\n                label={ALIAS.LABEL}\n            >\n                <Input\n                    value={formData.label}\n                    placeholder='例如： label'\n                    onChange={this.handleChange.bind(this, LABEL, 0)}\n                />\n            </Form.Item>\n            <Form.Item\n                {...formItemLayout}\n                label={ALIAS.KEY}\n            >\n                <Input\n                    value={formData.key}\n                    placeholder='例如： key'\n                    onChange={this.handleChange.bind(this, KEY, 0)}\n                />\n            </Form.Item>\n            <Table rowKey=\"rowKey\" dataSource={formData.options} columns={this.columns} bordered pagination={false} />\n            <br />\n            <Row type=\"flex\" justify='space-between'>\n                <Col>\n                    <Button onClick={this.handleAddCheck} type='primary' >添加项</Button>\n                </Col>\n                {/* <Col span={6} style={{marginLeft: '10px'}}>\n                    <Radio.Group style={{display: 'flex', alignItems: 'center'}} defaultValue={formData.isRequired} onChange={(e) => {\n                        const formData = Object.assign({}, this.state.formData, { isRequired: e.target.value });\n                        this.setState({\n                            formData\n                        });\n                    }}>\n                        <Radio value={true}>必填</Radio>\n                        <Radio value={false}>非必填</Radio>\n                    </Radio.Group>\n                </Col>\n                {formData.isRequired && <Col span={5} style={{marginLeft: '10px'}}>\n                    <Input placeholder={`默认选中value${formData.defaultValue}`} onChange={(e) => {\n                        const formData = Object.assign({}, this.state.formData, { defaultValue: e.target.value });\n                        this.setState({\n                            formData\n                        });\n                    }}/>\n                </Col>} */}\n                <Col>\n                    <Button onClick={this.handleSave} type='primary' >确定</Button>\n                </Col>\n            </Row>\n        </>;\n    }\n}\n","import React, { Component } from 'react';\nimport { Radio, Form } from 'antd';\nimport PropTypes from 'prop-types';\nimport { getInitJson, getTools } from './utils';\nimport RadioConfig from './config';\nimport { FORMITEM_LAYOUT } from 'Src/utils/constants';\ninterface RadioProps {\n    config: any;\n    label: string;\n    defaultValue: string;\n}\nclass KRadio extends Component<RadioProps> {\n    static propTypes = {\n        props: PropTypes.object,\n        config: PropTypes.object,\n\n    };\n\n    state={\n        defaultValue: this.props.config.defaultValue,\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setState({\n            defaultValue: nextProps.config.defaultValue\n        });\n    }\n\n    render() {\n        return (\n            <Form.Item\n                {...FORMITEM_LAYOUT}\n                style={{ marginBottom: 0 }}\n                label={this.props.config.label}\n            >\n                <Radio.Group value={this.state.defaultValue} onChange={(e) => {\n                    this.setState({\n                        defaultValue: e.target.value\n                    });\n                }}>\n                    {\n                        this.props.config.options.map((item: any) => {\n                            return <div style={{display: 'inline-block'}} key={item.rowKey} onClick={(e) => {\n                                e.stopPropagation();\n                            }}><Radio value={item.value} disabled={item.disabled}>{item.text}</Radio></div>;\n                        })\n                    }\n                </Radio.Group>\n            </Form.Item>\n\n        );\n    }\n}\n\nexport {\n    KRadio as component,\n    getInitJson,\n    getTools,\n    RadioConfig as config\n};\n","/**\n * 获取初始化JSON\n */\nexport const getInitJson = () => ({\n    stateName: '',\n    componentName: 'CheckBox',\n    source: 'antd',\n    default: false,\n    options: [{\n        props: {\n            disabled: false,\n            checked: false,\n            value: ''\n        },\n        text: '',\n        rowKey: 0\n    }],\n    label: '',\n    key: '',\n});\n\n/**\n * 获取组件Tools配置\n */\nexport const getTools = () => ({\n    name: 'CheckBox',\n    icon: 'check-circle',\n    componentName: 'CheckBox'\n});\n","import React, { Component } from 'react';\nimport { Input, Button, Row, Col, Icon, Switch, Alert, Table } from 'antd';\nimport PropTypes from 'prop-types';\nimport Form from 'antd/es/form';\nimport { findComponent, saveComponent } from 'Src/utils';\nimport { FORMITEM_LAYOUT, ALIAS } from 'Src/utils/constants';\n\nconst VALUE = 'value';\nconst LABEL = 'label';\nconst TEXT = 'text';\nconst CHECK = 'checked';\nconst DISABLED = 'disabled';\nconst OPTIONS = 'options';\nconst KEY = 'key';\nconst ROW_KEY = 'rowKey';\n\ninterface CheckBoxConfigProps {\n    pageJSON: any;\n    onSave(pageJSON: any): void;\n}\n\nexport default class CheckBoxConfig extends Component<CheckBoxConfigProps> {\n    static propTypes = {\n        onSave: PropTypes.func\n    };\n\n    state = {\n        formData: {\n            [OPTIONS]: [{\n                props: {\n                    [DISABLED]: false,\n                    [CHECK]: false,\n                    [VALUE]: ''\n                },\n                [TEXT]: '',\n                [ROW_KEY]: 0\n            }],\n            [LABEL]: '',\n            [KEY]: '',\n        },\n        isTouch: false,\n        errMessage: '',\n        current: {\n            id: '',\n            props: {}\n        }\n    };\n\n    columns = [\n        {\n            title: '表单项Key',\n            dataIndex: 'value',\n            key: 'value',\n            render: (item, record, index) => <Input\n                value={record.props[VALUE]}\n                placeholder='例如： 选项'\n                onChange={this.handleChange.bind(this, VALUE, index)}\n            />\n        },\n        {\n            title: '表单项名称',\n            dataIndex: 'text',\n            key: 'text',\n            render: (item, record, index) => <Input\n                value={record[TEXT]}\n                placeholder='例如： 姓名'\n                onChange={this.handleChange.bind(this, TEXT, index)}\n            />\n        },\n        {\n            title: '是否默认选中',\n            dataIndex: 'check',\n            key: 'check',\n            render: (item, record, index) =>\n                <Switch\n                    defaultChecked={record[CHECK]}\n                    checkedChildren=\"是\"\n                    unCheckedChildren=\"否\"\n                    onChange={this.handleChange.bind(this, CHECK, index)}\n                />\n        },\n        {\n            title: '是否禁用',\n            dataIndex: 'disabled',\n            key: 'disabled',\n            render: (item, record, index) =>\n                <Switch\n                    defaultChecked={record[DISABLED]}\n                    checkedChildren=\"是\"\n                    unCheckedChildren=\"否\"\n                    onChange={this.handleChange.bind(this, DISABLED, index)}\n                />\n        },\n        {\n            title: '删除',\n            dataIndex: 'delete',\n            key: 'delete',\n            render: (text, record, index) =>\n                this.state.formData.options.length > 1\n                    ? <Col>\n                        <Icon type=\"close\" onClick={() => { this.handleDeleteChekItem(index); }} />\n                    </Col>\n                    : <></>\n\n        }\n    ];\n\n    static getDerivedStateFromProps(props, state) {\n        if (!state.isTouch) {\n            const { pageJSON } = props;\n            const { components } = pageJSON;\n            const current = findComponent(components);\n            return {\n                formData: {\n                    [OPTIONS]: current.options || [{\n                        props: {\n                            [DISABLED]: false,\n                            [CHECK]: false,\n                            [VALUE]: ''\n                        },\n                        [TEXT]: '',\n                        [ROW_KEY]: 0\n                    }],\n                    [LABEL]: current.label || '',\n                    [KEY]: current.key || '',\n                },\n                current\n            };\n        } else {\n            return state;\n        }\n    }\n\n    /**\n     * @desc 保存修改\n     */\n    handleSave = () => {\n        const { formData, current } = this.state;\n        const { pageJSON, onSave } = this.props;\n        if (!formData.label) {\n            this.setState({\n                errMessage: '请输入表单名称'\n            });\n            return;\n        }\n        for (let i = 0; i < formData.options.length; i++) {\n            const item = formData.options[i];\n            if (!item[TEXT]) {\n                this.setState({\n                    errMessage: '请输入表单项名称'\n                });\n                return;\n            }\n        }\n        pageJSON.components = saveComponent(current.id, pageJSON.components, formData);\n        onSave && onSave(pageJSON);\n    }\n\n    /**\n     * @desc    框内数据发生变化\n     */\n    handleChange = (itemKey, index: number, e) => {\n        const { formData } = this.state;\n        const value = typeof e === 'boolean' ? e : e.target.value;\n        switch (itemKey) {\n            case LABEL:\n                formData.label = value;\n                break;\n            case KEY:\n                formData.key = value;\n                break;\n            case TEXT:\n                formData.options[index][itemKey] = value;\n                break;\n            case CHECK:\n            case DISABLED:\n                formData.options[index].props[itemKey] = value;\n                break;\n            default:\n                formData.options[index].props[itemKey] = value;\n                break;\n        }\n        this.setState({\n            formData,\n            isTouch: true\n        });\n    };\n\n    /**\n     * @desc 添加项\n     */\n    handleAddCheck = (): void => {\n        const { formData } = this.state;\n        formData.options.push({\n            props: {\n                [DISABLED]: false,\n                [CHECK]: false,\n                [VALUE]: ''\n            },\n            [TEXT]: '',\n            [ROW_KEY]: formData.options[formData.options.length - 1][ROW_KEY] + 1\n        });\n        this.setState({\n            formData,\n            isTouch: true\n        });\n    }\n\n    /**\n     * @desc 删除项\n     */\n    handleDeleteChekItem = (index) => {\n        const { formData } = this.state;\n        formData.options.splice(index, 1);\n        this.setState({\n            formData\n        });\n    }\n\n    /**\n     * @desc    错误提示关闭\n     */\n    handleAlertClose = () => {\n        this.setState({\n            errMessage: ''\n        });\n    }\n\n    render() {\n        const { formData, errMessage } = this.state;\n        return <>\n            {\n                errMessage\n                    ? <Alert message={errMessage}\n                        type='error'\n                        closable\n                        onClose={this.handleAlertClose}\n                    ></Alert>\n                    : null\n            }\n            <br />\n            <Form.Item\n                label={ALIAS.LABEL}\n                {...FORMITEM_LAYOUT}\n            >\n                <Input\n                    value={formData.label}\n                    placeholder='例如： label'\n                    onChange={this.handleChange.bind(this, LABEL, 0)}\n                />\n            </Form.Item>\n            <Form.Item\n                label={ALIAS.KEY}\n                {...FORMITEM_LAYOUT}\n            >\n                <Input\n                    value={formData.key}\n                    placeholder='例如： key'\n                    onChange={this.handleChange.bind(this, KEY, 0)}\n                />\n            </Form.Item>\n            <Table rowKey=\"rowKey\" dataSource={formData.options} columns={this.columns} bordered pagination={false} />\n            <br />\n            <Row type=\"flex\" justify='space-between'>\n                <Col>\n                    <Button onClick={this.handleAddCheck} type='primary' >添加项</Button>\n                </Col>\n                <Col>\n                    <Button onClick={this.handleSave} type='primary' >确定</Button>\n                </Col>\n            </Row>\n        </>;\n    }\n}\n","import React from 'react';\nimport { Checkbox, Form } from 'antd';\nimport { getInitJson, getTools } from './utils';\nimport Config from './config';\nimport { FORMITEM_LAYOUT } from 'Src/utils/constants';\n\ninterface Props {\n    config: {\n        options: [{\n            props: {\n                disabled: boolean;\n                checked: boolean;\n                value: string;\n            };\n            text: string;\n            rowKey: number;\n        }];\n        label: string;\n        key: string;\n    };\n}\n\nclass KCheckBox extends React.Component<Props> {\n\n    render() {\n        const { config } = this.props;\n        return (\n            <Form.Item\n                label={config && config.label ? config.label : '表单名称'}\n                {...FORMITEM_LAYOUT}\n                style={{ marginBottom: 0 }}\n            >\n                {\n                    config.label\n                        ? config.options.map((ele, index) => {\n                            return <Checkbox\n                                key={index}\n                                checked={ele.props.checked}\n                                disabled={ele.props.disabled}\n                            >{ele.text}</Checkbox>;\n                        })\n                        : <Checkbox\n                            checked={false}\n                            disabled={false}\n                        >选择项</Checkbox>\n                }\n            </Form.Item>\n        );\n    }\n}\n\nexport {\n    KCheckBox as component,\n    getInitJson,\n    getTools,\n    Config as config\n};\n","import { FORM_TYPES } from './constants';\nconst [{ key: NORMAL_FORM }] = FORM_TYPES;\n/**\n * 获取初始化JSON\n */\nexport const getInitJson = () => ({\n    stateName: '',\n    componentName: 'Form',\n    source: 'antd',\n    default: false,\n    type: NORMAL_FORM,\n    key: '',\n    label: ''\n});\n\n/**\n * 获取组件Tools配置\n */\nexport const getTools = () => ({\n    name: 'Form',\n    icon: 'form',\n    componentName: 'Form'\n});\n","import React, { Component, Fragment } from 'react';\nimport { Form, Input, Button, Row, Col, Radio } from 'antd';\nimport { FORM_TYPES } from './constants';\nimport PropTypes from 'prop-types';\nconst [{key: NORMAL}, {key: SEARCH}] = FORM_TYPES;\nconst FormItem = Form.Item;\nconst RadioGroup = Radio.Group;\nconst formItemLayout = {\n    labelCol: {\n        xs: { span: 24 },\n        sm: { span: 6 },\n    },\n    wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 12 },\n    }\n};\n\nconst STATE_NAME = 'stateName';\nconst TYPE = 'type';\nconst LINK = 'link';\nconst SAVE_API = 'saveApi';\nconst UPDATE_API = 'updateApi';\n\ninterface FormConfigProps{\n    onSave(pageJSON:any): void,\n    pageJSON: any\n}\n\nexport default class FormConfig extends Component<FormConfigProps> {\n    static propTypes = {\n        onSave: PropTypes.func\n    };\n\n    state={\n        formData: {\n\n        },\n        isTouch: false\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        if (!state.isTouch) {\n            const { pageJSON } = props;\n            const { components } = pageJSON;\n            const current = components.find(({ configVisible }) => configVisible);\n            return {\n                formData: {\n                    [STATE_NAME]: current[STATE_NAME],\n                    [TYPE]: current[TYPE],\n                    [LINK]: current[LINK],\n                    [SAVE_API]: current[SAVE_API],\n                    [UPDATE_API]: current[UPDATE_API],\n                }\n            };\n        } else {\n            return state;\n        }\n    }\n\n    handleSave = () => {\n        const { formData } = this.state;\n        const { pageJSON, onSave } = this.props;\n        pageJSON.components = pageJSON.components.map((component) => {\n            if (component.configVisible) {\n                component = {\n                    ...component,\n                    ...formData,\n                    props: {\n                        ...component.props,\n                    }\n                };\n            }\n            return component;\n        });\n        onSave && onSave(pageJSON);\n    }\n\n    handleChange = (key: string, value: string|boolean) => {\n        const { formData } = this.state;\n        this.setState({\n            formData: {\n                ...formData,\n                [key]: value\n            },\n            isTouch: true\n        });\n    };\n\n    getTypeForm = () => {\n        const { formData } = this.state;\n        switch (formData[TYPE]) {\n            case SEARCH:\n                return <Fragment>\n                    {/* <FormItem\n                        label={'新增/修改跳转地址'}\n                        {...formItemLayout}\n                    >\n                        <Input\n                            placeholder='新增/修改跳转地址'\n                            value={formData[LINK]}\n                            onChange={(e) => {\n                                const { value } = e.target;\n                                this.handleChange(LINK, value);\n                            }}\n                        />\n                    </FormItem> */}\n                </Fragment>;\n            case NORMAL:\n                return <Fragment>\n                    <FormItem\n                        label={'新增API'}\n                        {...formItemLayout}\n                    >\n                        <Input\n                            placeholder='新增API'\n                            value={formData[SAVE_API]}\n                            onChange={(e) => {\n                                const { value } = e.target;\n                                this.handleChange(SAVE_API, value);\n                            }}\n                        />\n                    </FormItem>\n                    <FormItem\n                        label={'修改API'}\n                        {...formItemLayout}\n                    >\n                        <Input\n                            placeholder='修改API'\n                            value={formData[UPDATE_API]}\n                            onChange={(e) => {\n                                const { value } = e.target;\n                                this.handleChange(UPDATE_API, value);\n                            }}\n                        />\n                    </FormItem>\n                </Fragment>;\n        }\n    }\n\n    render() {\n        const { formData } = this.state;\n        return <div>\n            <FormItem\n                label={'绑定redux的Key'}\n                {...formItemLayout}\n            >\n                <Input\n                    value={formData[STATE_NAME]}\n                    placeholder='例如： userSearchForm / userInfo'\n                    onChange={(e) => {\n                        const value = e.target.value;\n                        this.handleChange(STATE_NAME, value);\n                    }}\n                />\n            </FormItem>\n            <FormItem\n                label={'是否选中'}\n                {...formItemLayout}\n            >\n                <RadioGroup\n                    value={formData[TYPE]}\n                    onChange={(e) => {\n                        const value = e.target.value;\n                        this.handleChange(TYPE, value);\n                    }}\n                >\n                    {\n                        FORM_TYPES.map(({ key, name }) => {\n                            return (\n                                <Radio key={key} value={key}>{name}</Radio>\n                            );\n                        })\n                    }\n                </RadioGroup>\n            </FormItem>\n            {\n                this.getTypeForm()\n            }\n            <FormItem>\n                <Row>\n                    <Col>\n                        <Button\n                            onClick={this.handleSave}\n                            type='primary'\n                        >确定</Button>\n                    </Col>\n                </Row>\n            </FormItem>\n        </div>;\n    }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { getInitJson, getTools } from './utils';\nimport FormConfig from './config';\nimport PageRender from 'Src/pages/GeneratePage/components/PageRender';\nimport './index.scss';\n\ninterface KFormProps {\n    config: any,\n    generatePage: {\n        pageJSON: any\n    }\n}\n\nclass KForm extends Component<KFormProps> {\n    static propTypes = {\n        props: PropTypes.object\n    };\n\n    renderChildren = () => {\n        const { config } = this.props;\n        if (config.components && config.components.length) {\n            return <PageRender\n                dataSource={config.components}\n                generatePage={this.props.generatePage}\n            />;\n        } else {\n            return null;\n        }\n    }\n\n    render() {\n        return (\n            <div\n                className={'form-container'}\n            >\n                <div className='form-container-background'>\n                    {this.renderChildren()}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport {\n    KForm as component,\n    getInitJson,\n    getTools,\n    FormConfig as config\n};\n","import * as Table from './Table/index';\nimport * as Input from './Input/index';\nimport * as Select from './Select/index';\nimport * as DatePicker from './DatePicker/index';\nimport * as InputNumber from './InputNumber/index';\nimport * as RangePicker from './RangePicker/index';\nimport * as TextArea from './TextArea/index';\nimport * as Radio from './Radio/index';\nimport * as CheckBox from './CheckBox';\nimport * as Form from './Form';\n\n/**\n * 展示类组件\n */\nconst DATA_ENTRY = {\n    Input,\n    Select,\n    DatePicker,\n    InputNumber,\n    RangePicker,\n    TextArea,\n    Radio,\n    CheckBox\n};\n\n/**\n * 展示类组件\n */\nconst DATA_DISPLAY = {\n    Table\n};\n\n/**\n * 其他组件\n */\nconst OTHER_COMPONENTS = {\n    Form\n};\n\n/**\n * 所有组件\n */\nconst ALL_TOOLS = {\n    ...DATA_DISPLAY,\n    ...DATA_ENTRY,\n    ...OTHER_COMPONENTS\n};\n\nexport {\n    DATA_DISPLAY,\n    DATA_ENTRY,\n    OTHER_COMPONENTS,\n    ALL_TOOLS\n};\n","import React, { Component } from 'react';\nimport { actions } from 'kredux';\nimport { Icon, Modal } from 'antd';\nimport { DND } from 'BizComponents';\nimport { ALL_TOOLS } from 'Components';\nimport { changeConfig } from 'Src/utils';\nimport './style.scss';\nconst Confirm = Modal.confirm;\n\ninterface PageRenderProps{\n    generatePage: {\n        pageJSON: any\n    },\n    dataSource?: any[]\n}\n\nexport default class PageRender extends Component<PageRenderProps> {\n\n    /**\n     * 渲染组件\n     */\n    renderComponent = (component) => {\n        const ComponentName = ALL_TOOLS[component.componentName].component;\n        if (!ComponentName) {\n            console.error('thanos：no present component');\n            return null;\n        }\n\n        const { props, ...otherProps } = component;\n\n        const componentProps = {\n            ...(props || {}),\n            config: otherProps,\n            generatePage: this.props.generatePage\n        };\n        return <ComponentName {...componentProps} />;\n    };\n\n    /**\n     * 点击事件\n     */\n    handleClick = (item: any, e: any) => {\n        e.stopPropagation();\n        const { id } = item;\n        const { pageJSON } = this.props.generatePage;\n        const { components } = pageJSON;\n        const config = {\n            componentSelected: true,\n            configVisible: true\n        };\n        this.setJSON({\n            components: changeConfig(id, components, config)\n        });\n    }\n\n    /**\n     * 删除组件\n     */\n    filterComponent = (id: string, components: any[]) => {\n        return components.filter((item) => {\n            if (id === item.id) {\n                return false;\n            } else if (item.components) {\n                item.components = this.filterComponent(id, item.components);\n            }\n            return true;\n        });\n    }\n\n    /**\n     * 设置redux\n     */\n    setRedux = (redux: any) => {\n        actions.generatePage.setReducers(redux);\n    };\n\n    /**\n     * 设置页面配置\n     */\n    setJSON = (json: any) => {\n        const { pageJSON } = this.props.generatePage;\n        this.setRedux({\n            pageJSON: {\n                ...pageJSON,\n                ...json\n            }\n        });\n    };\n\n    render() {\n        const { pageJSON } = this.props.generatePage;\n        const { components } = pageJSON;\n        const dataSource = this.props.dataSource || components;\n        return (\n            <div\n                className='render-page'\n            >\n                <DND\n                    onRender={(data) => {\n                        return (\n                            <div\n                                onClick={(e) => {\n                                    this.handleClick(data, e);\n                                }}\n                                className={data.componentSelected ? 'page-item component-selected' : 'page-item'}\n                            >\n                                {this.renderComponent(data)}\n                                <div className='item-close'\n                                    onClick={(e) => {\n                                        e.stopPropagation();\n                                        Confirm({\n                                            title: '请确认删除组件',\n                                            content: '删除后其配置会消失，请谨慎操作',\n                                            onOk: () => {\n                                                this.setJSON({\n                                                    components: this.filterComponent(data.id, components)\n                                                });\n                                            }\n                                        });\n                                    }}\n                                >\n                                    <Icon type='close-circle' className='item-close-icon' />\n                                </div>\n                            </div>\n                        );\n                    }}\n                    dataSource={dataSource}\n                    onDragStart={() => {}}\n                    onDragEnd={(dataSource) => {\n                        this.setJSON({\n                            components: dataSource\n                        });\n                    }}\n                />\n            </div>\n        );\n    }\n}\n","\nimport React, { Component } from 'react';\nimport { Form, Col, Row, Icon } from 'antd';\nimport './index.scss';\nconst FormItem = Form.Item;\n\ninterface PageConfigProps {\n    dataSource: any[];\n    onClick: Function;\n    span: number;\n    title: string;\n}\n\nexport default class ComponentType extends Component<PageConfigProps> {\n\n    render() {\n        const { dataSource, span, onClick, title } = this.props;\n        return (\n            <div>\n                <div className='component-type-title'>\n                    {title}\n                </div>\n                {\n                    dataSource.map((row, index) => {\n                        return (\n                            <FormItem\n                                key={index}\n                            >\n                                <Row\n                                    gutter={8}\n                                >\n                                    {\n                                        row.map((item, idx: number) => {\n                                            const { icon, name } = item;\n                                            return (\n                                                <Col\n                                                    span={span}\n                                                    key={`${index}_${idx}`}\n                                                >\n                                                    <div\n                                                        className='component-item'\n                                                        onClick={() => {\n                                                            onClick && onClick(item.componentName);\n                                                        }}\n                                                    >\n                                                        <Icon type={icon} /> {name}\n                                                    </div>\n                                                </Col>\n                                            );\n                                        })\n                                    }\n                                </Row>\n                            </FormItem>\n                        );\n                    })\n                }\n            </div>\n        );\n    }\n}\n","\nimport React, { Component } from 'react';\nimport { actions } from 'kredux';\nimport { Form, Input } from 'antd';\nimport { DATA_DISPLAY, DATA_ENTRY, OTHER_COMPONENTS, ALL_TOOLS } from 'Components';\nimport ComponentType from './ComponentType';\nimport './index.scss';\nconst { Search } = Input;\nconst FormItem = Form.Item;\nconst SPLIT_COUNT = 2;\nconst getTools = (components) => {\n    return Object.keys(components).map((key) => components[key].getTools());\n};\n/**\n * 组件库\n */\nconst TOOLS = {\n    DATA_DISPLAY: getTools(DATA_DISPLAY),\n    DATA_ENTRY: getTools(DATA_ENTRY),\n    OTHER_COMPONENTS: getTools(OTHER_COMPONENTS),\n};\n\ninterface PageConfigProps{\n    generatePage: {\n        pageJSON: {\n            components: any[];\n            name: string;\n        };\n    };\n}\n\nexport default class ComponentsLib extends Component<PageConfigProps> {\n\n    state = {\n        search: ''\n    }\n\n    /**\n     * 插入组件事件\n     */\n    handleClick = (componentName: string) => {\n        const { pageJSON } = this.props.generatePage;\n        const { components } = pageJSON;\n        if (components.some(({ componentName, componentSelected }) => componentName === 'Form' && componentSelected)) {\n            actions.generatePage.insertFormComponent(ALL_TOOLS[componentName].getInitJson());\n            return;\n        }\n        actions.generatePage.insertComponent(ALL_TOOLS[componentName].getInitJson());\n    }\n\n    /**\n     * 过滤组件\n     */\n    fliterComponent = (tools: any) => {\n        const { search } = this.state;\n        return tools.filter(({ name }) => name.toLocaleLowerCase().includes(search.toLocaleLowerCase())).reduce((prev, record) => {\n            const lastItem = prev[prev.length - 1];\n            if (!lastItem || lastItem.length === SPLIT_COUNT) {\n                prev.push([record]);\n            } else {\n                lastItem.push(record);\n            }\n            return prev;\n        }, []);\n    }\n\n    render() {\n        const span = 24 / SPLIT_COUNT;\n        const dataDisplayTools = this.fliterComponent(TOOLS.DATA_DISPLAY);\n        const dataEntryTools = this.fliterComponent(TOOLS.DATA_ENTRY);\n        const otherTools = this.fliterComponent(TOOLS.OTHER_COMPONENTS);\n        return (\n            <div className='thanos-page-config'>\n                <div className='thanos-page-config-title'>组件库</div>\n                <div className='thanos-page-config-form'>\n                    <FormItem>\n                        <Search\n                            placeholder=\"组件查询\"\n                            onSearch={(value) => this.setState({ search: value })}\n                        />\n                    </FormItem>\n                    <ComponentType\n                        dataSource={dataEntryTools}\n                        span={span}\n                        onClick={this.handleClick}\n                        title={'录入组件'}\n                    />\n                    <ComponentType\n                        dataSource={dataDisplayTools}\n                        span={span}\n                        onClick={this.handleClick}\n                        title={'展示组件'}\n                    />\n                    <ComponentType\n                        dataSource={otherTools}\n                        span={span}\n                        onClick={this.handleClick}\n                        title={'其他组件'}\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n","import React, {Component} from 'react';\nimport {actions} from 'kredux';\nimport { Drawer } from 'antd';\nimport { ALL_TOOLS } from 'Components';\nimport { changeConfig } from 'Src/utils';\n\ninterface ComponentConfigProps{\n    generatePage: {pageJSON: any};\n}\nexport default class ComponentConfig extends Component<ComponentConfigProps> {\n\n    state = {\n        visible: false,\n        component: {\n            id: '',\n            componentName: ''\n        }\n    }\n\n    componentDidMount() {\n        this.setState({\n            ...this.getShowConfig()\n        });\n    }\n\n    /**\n     * 获取显示配置的组件\n     */\n    getShowConfig = (components?) => {\n        if (!components) {\n            const {pageJSON} = this.props.generatePage;\n            components = pageJSON.components;\n        }\n        let visible = false,\n            component;\n        components.forEach((item: any) => {\n            if (!visible) {\n                if (item.configVisible) {\n                    visible = true;\n                    component = item;\n                    return;\n                }\n                if (item.components) {\n                    const config = this.getShowConfig(item.components);\n                    if (config.visible) {\n                        visible = true;\n                        component = config.component;\n                    }\n                }\n            }\n        });\n        return {\n            visible,\n            component\n        };\n    };\n\n    onClose = (components?) => {\n        if (!components) {\n            const {pageJSON} = this.props.generatePage;\n            components = pageJSON.components;\n        }\n        const { component } = this.state;\n        this.setJSON({\n            components: changeConfig(component.id, components, {\n                configVisible: false\n            })\n        });\n    };\n\n    /**\n     * 设置redux\n     */\n    setRedux = (redux) => {\n        actions.generatePage.setReducers(redux);\n    };\n\n    /**\n     * 设置页面配置\n     */\n    setJSON = (json) => {\n        const {pageJSON} = this.props.generatePage;\n        this.setRedux({\n            pageJSON: {\n                ...pageJSON,\n                ...json\n            }\n        });\n    };\n\n    handleSave = (pageJSON) => {\n        this.setRedux(pageJSON);\n        this.onClose();\n    };\n\n    renderConfig = () => {\n        const { pageJSON } = this.props.generatePage;\n        const { component } = this.state;\n        const Component = ALL_TOOLS[(component || {}).componentName];\n        if (Component) {\n            const Config = Component.config;\n            const commonProps = {\n                pageJSON,\n                onSave: this.handleSave\n            };\n\n            return <Config\n                {...commonProps}\n            />;\n        } else {\n            return null;\n        }\n    };\n\n    render() {\n        const { visible } = this.state;\n        return (\n            <Drawer\n                width={700}\n                title=\"组件配置\"\n                placement=\"right\"\n                mask={false}\n                onClose={() => {\n                    this.onClose();\n                }}\n                visible={visible}\n            >\n                {this.renderConfig()}\n            </Drawer>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport './index.scss';\nimport { Input, Form } from 'antd';\nimport { actions, connect } from 'kredux';\n\nconst FormItem = Form.Item;\n\ninterface PageConfigProps {\n    generatePage: any;\n}\n\nclass PageConfig extends Component<PageConfigProps> {\n\n    handleChangeName = (event) => {\n        actions.generatePage.changeTemplateName({\n            name: event.target.value\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"thanos-page-config\">\n                <div className='thanos-page-config-title'>页面配置</div>\n                <div className='thanos-page-config-form'>\n                    <FormItem>\n                        <Input\n                            placeholder=\"页面名称\"\n                            value={this.props.generatePage.pageName}\n                            onChange={this.handleChangeName}\n                        />\n                    </FormItem>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default connect(({ generatePage }) => ({ generatePage }))(PageConfig);\n","import React, { Component } from 'react';\nimport { Icon, Tooltip } from 'antd';\nimport { connect, actions } from 'kredux';\nimport Header from '../components/Header';\nimport { PageRender, ComponentConfig, ComponentsLib } from './components';\nimport './index.scss';\nimport PageConfig from 'Src/pages/GeneratePage/components/Config/PageConfig';\n\ninterface GeneratePageProps {\n    generatePage: { pageJSON: any };\n    operate: {\n        undoDisable: any;\n        redoDisable: any;\n    };\n    match: {\n        params: {\n            name: string;\n        }\n    }\n}\n\n@connect(({ generatePage = {}, operate = {} }) => ({\n    generatePage,\n    operate\n}))\nclass GeneratePage extends Component<GeneratePageProps> {\n\n    componentDidMount() {\n        actions.operate.save({\n            modelName: 'generatePage',\n            data: {\n                count: 0\n            },\n        });\n        if (this.props.match.params.name !== '-1') {\n            actions.generatePage.getTemplateItem({\n                pageName: this.props.match.params.name\n            });\n        } else {\n            actions.generatePage.setReducers({\n                pageName: ''\n            });\n        }\n    }\n\n    /**\n     * 获取显示配置的组件\n     */\n    getShowConfig = (components?) => {\n        if (!components) {\n            const { pageJSON } = this.props.generatePage;\n            components = pageJSON.components;\n        }\n        let visible = false,\n            component;\n        components.forEach((item: any) => {\n            if (!visible) {\n                if (item.configVisible) {\n                    visible = true;\n                    component = item;\n                    return;\n                }\n                if (item.components) {\n                    const config = this.getShowConfig(item.components);\n                    if (config.visible) {\n                        visible = true;\n                        component = config.component;\n                    }\n                }\n            }\n        });\n        return {\n            visible,\n            component\n        };\n    };\n\n    render() {\n        const { undoDisable, redoDisable } = this.props.operate;\n        const visible = this.getShowConfig().visible;\n        return (\n            <div className=\"thanos-generate-page-container\">\n                <Header showTopToolbar={true} />\n                <div className=\"page-wrapper\">\n                    <div className=\"left-toolbar\">\n                        <Tooltip placement=\"right\" title=\"撤销\" >\n                            <Icon type=\"undo\" style={undoDisable ? { color: '#ccc', cursor: 'not-allowed' } : {}} onClick={undoDisable ? () => { } : () => {\n                                actions.operate.undo();\n                            }} />\n                        </Tooltip>\n                        <Tooltip placement=\"right\" title=\"重做\" >\n                            <Icon type=\"redo\" style={redoDisable ? { color: '#ccc', cursor: 'not-allowed' } : {}} onClick={redoDisable ? () => { } : () => {\n                                actions.operate.redo();\n                            }} />\n                        </Tooltip>\n                        <Tooltip placement=\"right\" title=\"放大\" >\n                            <Icon type=\"plus\" />\n                        </Tooltip>\n                        <span className=\"scale-percent\">100%</span>\n                        <Tooltip placement=\"right\" title=\"缩小\" >\n                            <Icon type=\"minus\" />\n                        </Tooltip>\n                    </div>\n                    <div className=\"page-shower\">\n                        <div className=\"canvas\">\n                            <div className=\"thanos-page\">\n                                <div className=\"thanos-page-operation\">\n                                    <PageConfig />\n                                    <ComponentsLib {...this.props} />\n                                </div>\n                                <div className=\"thanos-page-container\">\n                                    <PageRender {...this.props} />\n                                </div>\n                                {\n                                    visible && <ComponentConfig {...this.props} />\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default GeneratePage;\n","export { default as request } from './request';\n\n// 生成随机码\nexport const getUniqueID = () => {\n    return Math.random().toString(36).substring(2);\n};\n\n/**\n * 数组转化 树形数组\n *\n * @typedef {Object} attrParams\n * @property {number} rootId Top parentId\n * @property {string} id 当前Id\n * @property {string} parentId 父级Id\n *\n * @param {Array} 转化的数组\n * @type {attrParams}\n * @return {Array}  返回树形数组\n */\nexport function toTreeData(data, {\n    id,\n    parentId,\n    rootId\n}) {\n    const resData: any[] = [...data]; const tree: any[] = [];\n    function run(chiArr) {\n        if (resData.length !== 0) {\n            for (let i = 0; i < chiArr.length; i++) {\n                for (let j = 0; j < resData.length; j++) {\n                    if (chiArr[i][id] === resData[j][parentId]) {\n                        chiArr[i].children = chiArr[i].children || [];\n                        chiArr[i].children.push(resData[j]);\n                        resData.splice(j, 1);\n                        j--;\n                    }\n                }\n                if (chiArr[i].children) {\n                    run(chiArr[i].children);\n                }\n            }\n        }\n    }\n\n    for (let i = 0; i < resData.length; i++) {\n        if (resData[i][parentId] === rootId) {\n            tree.push(resData[i]);\n            resData.splice(i, 1);\n            i--;\n        } else if (data.every((res) => res[id] !== resData[i][parentId])) {\n            tree.push(resData[i]);\n            resData.splice(i, 1);\n            i--;\n        }\n    }\n    run(tree);\n    return tree;\n};\n\n/**\n     * 修改配置显隐藏\n     */\nexport const changeConfig = (id: string, components: any[], config: any) => {\n    return components.map((item) => {\n        if (item.id === id) {\n            item = {\n                ...item,\n                ...config\n            };\n        } else if (item.components) {\n            item.components = changeConfig(id, item.components, config);\n        }\n        return item;\n    });\n};\n\n/**\n * 找到当前显示的\n * @param components\n */\nexport const findComponent = (components: any[]) => {\n    let result: any;\n    components.forEach((item: any) => {\n        if (!result) {\n            if (item.configVisible) {\n                result = item;\n            } else if (item.components) {\n                const tempResult = findComponent(item.components);\n                if (tempResult) {\n                    result = tempResult;\n                }\n            }\n        }\n    });\n    return result;\n};\n\n/**\n * 找到当前的组件并且更改配置\n */\nexport const saveComponent = (targetId: string, components: any[], config: any) => {\n    return components.map((item) => {\n        const { id: currentId, components: children } = item;\n        if (currentId === targetId) {\n            item = {\n                ...item,\n                ...config\n            };\n        } else if (children && children.length) {\n            item.components = saveComponent(targetId, children, config);\n        }\n        return item;\n    });\n};\n\n/**\n * 匹配当前路由\n */\nexport const matchRouter = (path: string, routerList: any[]) => {\n    const currentPath = path;\n    return routerList.find(({path}) => path === currentPath) || {};\n};\n","import { stringify } from 'qs';\nimport { notification } from 'antd';\nconst fetch = require('isomorphic-fetch');\n\n// import Humps from 'ks-module-humps';\nconst codeMessage = {\n    200: '服务器成功返回请求的数据。',\n    201: '新建或修改数据成功。',\n    202: '一个请求已经进入后台排队（异步任务）。',\n    204: '删除数据成功。',\n    400: '发出的请求有错误，服务器没有进行新建或修改数据的操作。',\n    401: '用户没有权限（令牌、用户名、密码错误）。',\n    403: '用户得到授权，但是访问是被禁止的。',\n    404: '发出的请求针对的是不存在的记录，服务器没有进行操作。',\n    406: '请求的格式不可得。',\n    410: '请求的资源被永久删除，且不会再得到的。',\n    422: '当创建一个对象时，发生一个验证错误。',\n    500: '服务器发生错误，请检查服务器。',\n    502: '网关错误。',\n    503: '服务不可用，服务器暂时过载或维护。',\n    504: '网关超时。',\n};\n\n/**\n * 检查返回值状态码\n *\n * @param {response||response.json()} 状态码和返回code的双重判断\n * @return {response||error}\n */\nfunction checkStatus(response, customerError) {\n    /**\n    * status 可能是状态码 可能是返回code\n    * @type {number}\n    */\n    let status;\n    if ('status' in response) {\n        status = response.status;\n    } else if ('errcode' in response) {\n        status = response.errcode;\n    } else if ('code' in response) {\n        status = response.code;\n    }\n    if ((status >= 200 && status < 300) || status === 0) {\n        return response;\n    } else if (customerError) {\n        return response;\n    }\n    // const errortext = codeMessage[status] || response.statusText || response.msg;\n    const errortext = response.statusText || (response.result && response.result.message) || codeMessage[status];\n    if (status !== 401) {\n        notification.error({\n            message: `请求错误 ${status}`, // : ${response.url}\n            description: errortext,\n        });\n    }\n    const error: any = new Error(errortext);\n    error.name = status;\n    error.response = response;\n    throw error;\n}\n\n/**\n * 异步请求\n * @param  {String} url     // 请求地址\n * @param {Option} options // 配置\n * @return {Promise}        // 返回promise对象\n *\n * @typedef {Object} Option\n * @property {String} method // 请求方式  默认不传为get\n * @property {Object} body // 请求体\n */\nexport default function request(url, options, customerError = false) {\n    const defaultOptions = {\n        mode: 'cors',\n        // credentials: 'include',\n        headers: {}\n    };\n    let newOptions = { ...defaultOptions, ...options };\n    switch (`${newOptions.method}`) {\n        case 'post':\n        case 'POST':\n            newOptions.method = 'POST';\n            break;\n        case 'get':\n        case 'GET':\n            newOptions.method = 'GET';\n            break;\n        default:\n    }\n    if (newOptions.method === 'POST' || newOptions.method === 'PUT') {\n        if (!(newOptions.body instanceof FormData)) {\n            newOptions.headers = {\n                Accept: 'application/json',\n                'Content-Type': 'application/json; charset=utf-8',\n                ...newOptions.headers,\n            };\n            newOptions.body = JSON.stringify(newOptions.body);\n        } else {\n            // newOptions.body is FormData\n            delete newOptions.headers;\n        }\n    } else if (newOptions.method === 'GET') {\n        if (newOptions.body) {\n            url = `${url}?${stringify(newOptions.body)}`;\n        }\n        newOptions = null;\n    }\n    return fetch(url, newOptions)\n        .then((response) => checkStatus(response, customerError))\n        .then((response) => response.json())\n        .then((response) => checkStatus(response, customerError))\n        // .then((response) => Humps.parse(response))\n        .catch((e) => {\n            console.warn(e);\n        }); ;\n}\n","import history from './history';\nimport { PROJECT_NAME } from './constants';\n\n/**\n * @desc 路由跳转方法\n * @param { string } route 需要跳转的路由\n */\nexport const goto = function(route) {\n    history.push(`${PROJECT_NAME}/${route}`);\n};\n","import React from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport PropTypes from 'prop-types';\n\ninterface DnDProps {\n    dataSource: any[];\n    direction: string;\n    droppableId: string;\n    interval: string|number;\n    emptyNode: any;\n    onRender(dataItem: any, index: number): void;\n    onDragStart(): void;\n    onDragEnd(dataSource: any, result: any): void;\n}\nexport default class DnD extends React.PureComponent<DnDProps> {\n\n    static propTypes = {\n        droppableId: PropTypes.string, // 唯一拖拽id\n        direction: PropTypes.oneOf(['vertical', 'horizontal']), // 拖拽方向\n        interval: PropTypes.oneOfType([PropTypes.string, PropTypes.number]), // 子组件间隔\n        dataSource: PropTypes.array, // 需要排序的数据源\n        onRender: PropTypes.func,\n        onDragStart: PropTypes.func, // 拖拽开始事件\n        onDragEnd: PropTypes.func, // 拖拽结束事件\n        emptyNode: PropTypes.node, // 空节点渲染\n    }\n\n    static defaultProps = {\n        droppableId: 'drappable',\n        direction: 'vertical',\n        interval: 0,\n        onDragStart: () => { },\n        onDropEnd: () => { },\n        emptyNode: <div\n            style={{ textAlign: 'center' }}\n        >\n            暂无数据\n        </div>\n    }\n\n    /**\n     * 重新排序\n     * @param {Array} list 需要重新排序的数组\n     * @param {number} startIndex 旧的位置index\n     * @param {number} endIndex 新的位置index\n     */\n    reorder = (list, startIndex, endIndex) => {\n        const result = Array.from(list);\n        const [removed] = result.splice(startIndex, 1);\n        result.splice(endIndex, 0, removed);\n\n        return result;\n    }\n\n    /**\n     * 处理开始拖拽事件\n     */\n    handleDragStart = () => {\n        this.props.onDragStart();\n    }\n\n    /**\n     * 处理结束拖拽事件\n     */\n    handleDragEnd = (result) => {\n        if (!result.destination) {\n            return;\n        }\n        const dataSource = this.reorder(\n            this.props.dataSource,\n            result.source.index,\n            result.destination.index\n        );\n\n        this.props.onDragEnd(dataSource, result);\n    }\n\n    render() {\n        const { dataSource, direction, droppableId, interval, onRender, emptyNode } = this.props;\n        return (\n            <DragDropContext\n                onDragEnd={this.handleDragEnd}\n                onDragStart={this.handleDragStart}\n            >\n                <Droppable droppableId={droppableId} direction={direction}>\n                    {\n                        (provided, snapshot) => (\n                            <div\n                                {...provided.droppableProps}\n                                ref={provided.innerRef}\n                                className={`drappable-container ${snapshot.isDraggingOver ? 'draggingOver' : ''}`}\n                            >\n                                <React.Fragment>\n                                    {\n                                        dataSource.map((dataItem, index) => (\n                                            <Draggable\n                                                key={index}\n                                                index={index}\n                                                draggableId={`${droppableId}-${index}`}\n                                            >\n                                                {\n                                                    (provided, snapshot) => (\n                                                        <div\n                                                            ref={provided.innerRef}\n                                                            {...provided.draggableProps}\n                                                            {...provided.dragHandleProps}\n                                                            className={`draggable-container ${snapshot.isDragging ? 'isDragging' : ''}`}\n                                                            style={{\n                                                                marginBottom: interval,\n                                                                ...provided.draggableProps.style,\n                                                            }}\n                                                        >\n                                                            {onRender(dataItem, index)}\n                                                        </div>\n                                                    )\n                                                }\n                                            </Draggable>\n                                        ))\n                                    }\n                                    {\n                                        !dataSource.length && emptyNode\n                                    }\n                                    {provided.placeholder}\n                                </React.Fragment>\n                            </div>\n                        )\n                    }\n                </Droppable>\n            </DragDropContext>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Row, Col, Form, Icon } from 'antd';\nimport './index.scss';\nconst FormItem = Form.Item;\n\n/**\n * 搜索表单布局\n * @type {Object}\n */\nexport const SEARCH_FORM_LAYOUT = {\n    labelCol: {\n        xs: { span: 24 },\n        sm: { span: 8 },\n    },\n    wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 },\n    }\n};\n\ninterface SearchFormProps {\n    form: {\n        getFieldDecorator: any\n    },\n    col: number, // 列宽 max：24\n    components: ComponentConfig[], // 搜索项列表\n    actions: React.ReactNode, // 按钮节点\n    defaultExtend?: boolean, // 默认展开|闭合\n    extend?: boolean, // 展开|闭合状态\n    onExtend?(trigger: boolean): void, // 切换展开事件回掉\n    bottom?: number, // formItem的marginBottom 数量\n    split: number, // 自定义分割数量\n}\n\ninterface ComponentConfig {\n    title: string,\n    key: string,\n    component: any,\n    render?(): void,\n    options?: object,\n}\n\nexport default class SearchForm extends Component<SearchFormProps> {\n    static propTypes = {\n        form: PropTypes.object,\n        col: PropTypes.number, // 列宽 max：24\n        components: PropTypes.array, // 搜索项列表\n        actions: PropTypes.node, // 按钮节点\n        defaultExtend: PropTypes.bool, // 默认展开|闭合\n        extend: PropTypes.bool, // 展开|闭合状态\n        onExtend: PropTypes.func, // 切换展开事件回掉\n        bottom: PropTypes.number, // formItem的marginBottom 数量\n    }\n\n    static defaultProps = {\n        col: 7,\n        split: 3,\n        bottom: 12\n    }\n\n    state = {\n        extend: 'defaultExtend' in this.props ? this.props.defaultExtend : true\n    }\n\n    renderSearchItem = (item: ComponentConfig, hide: boolean) => {\n        const { form, col, bottom } = this.props;\n        const { getFieldDecorator } = form;\n        if (item.render) {\n            return item.render();\n        } else {\n            return <Col\n                key={item.key}\n                span={col}\n            >\n                <FormItem\n                    {...SEARCH_FORM_LAYOUT}\n                    style={{marginBottom: bottom}}\n                    label={item.title}\n                    className={hide ? 'hide-item' : ''}\n                >\n                    {\n                        getFieldDecorator(item.key, (item.options || {}))(item.component)\n                    }\n                </FormItem>\n            </Col>;\n        }\n    }\n\n    /**\n     * 根据展开状态获取名称\n     */\n    getExtend = (extend) => {\n        if (!extend) {\n            return {\n                name: '收起',\n                type: 'up'\n            };\n        } else {\n            return {\n                name: '展开',\n                type: 'down'\n            };\n        }\n    }\n\n    /**\n     * 渲染搜索布局\n     */\n    renderSeachForm = () => {\n        const { components, split, actions, col, onExtend, bottom } = this.props;\n        const dataSource = components.reduce((prev: any[], record: ComponentConfig) => {\n            const length = prev.length;\n            const lastItem: any[] = prev[length - 1];\n            if (length && lastItem && lastItem.length < split) {\n                lastItem.push(record);\n            } else {\n                prev.push([record]);\n            }\n            return prev;\n        }, []);\n        const isExtend = components.length > split;\n        const extend = 'extend' in this.props ? this.props.extend : this.state.extend;\n        let lastGroup: any[],\n            actionStyle: object = {};\n        if (dataSource[dataSource.length - 1].length === split) {\n            lastGroup = [];\n        } else {\n            lastGroup = dataSource.pop();\n        }\n        const remainder = lastGroup.length % split;\n\n        if (!dataSource.length && remainder < split - 1) {\n            actionStyle = {\n                ...actionStyle,\n                textAlign: 'left',\n                paddingLeft: '4px',\n            };\n        } else {\n            actionStyle = {\n                ...actionStyle,\n                textAlign: 'right',\n            };\n        }\n        const { name, type } = this.getExtend(extend);\n        return <div className='kssearchform'>\n            {\n                dataSource.map((group: any[], index: number) => {\n                    return <Row key={index} className={isExtend && index > 0 && extend ? 'extend' : ''}>\n                        {\n                            group.map((item: ComponentConfig) => this.renderSearchItem(item, Boolean(isExtend && index > 0 && extend)))\n                        }\n                    </Row>;\n                })\n            }\n            <Row>\n                {\n                    lastGroup.map((item: ComponentConfig) => this.renderSearchItem(item, Boolean(isExtend && extend)))\n                }\n                <Col\n                    span={isExtend && extend ? (col * split) : (col * (split - remainder))}\n                    style={actionStyle}\n                >\n                    <FormItem\n                        style={{ marginBottom: bottom }}\n                    >\n                        {\n                            isExtend && <span>\n                                <a\n                                    className='more'\n                                    onClick={() => {\n                                        this.setState({\n                                            extend: !extend\n                                        });\n                                        onExtend && onExtend(!extend);\n                                    }}\n                                >{name}<Icon type={type} /></a>\n                            </span>\n                        }\n                        {actions}\n                    </FormItem>\n                </Col>\n            </Row>\n        </div>;\n    }\n\n    render() {\n        return (\n            <div>\n                {this.renderSeachForm()}\n            </div>\n        );\n    }\n}\n","export { default as DND } from './DND';\nexport { default as SearchForm } from './SearchForm';\n"],"sourceRoot":""}